ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBMIDI_1_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBMIDI_1_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBMIDI_1_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBMIDI_1_EP_1_ISR, %function
  24              	USBMIDI_1_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\USBMIDI_1_episr.c"
   1:Generated_Source\PSoC5/USBMIDI_1_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBMIDI_1_episr.c **** * \file USBMIDI_1_episr.c
   3:Generated_Source\PSoC5/USBMIDI_1_episr.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBMIDI_1_episr.c **** *
   5:Generated_Source\PSoC5/USBMIDI_1_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBMIDI_1_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBMIDI_1_episr.c **** *
   8:Generated_Source\PSoC5/USBMIDI_1_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBMIDI_1_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBMIDI_1_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBMIDI_1_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBMIDI_1_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBMIDI_1_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBMIDI_1_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
  16:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #include "USBMIDI_1_pvt.h"
  17:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #include "USBMIDI_1_cydmac.h"
  18:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
  20:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
  21:Generated_Source\PSoC5/USBMIDI_1_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBMIDI_1_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBMIDI_1_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBMIDI_1_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
  26:Generated_Source\PSoC5/USBMIDI_1_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
  28:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
  29:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #if (USBMIDI_1_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     /******************************************************************************
  31:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     * Function Name: USBMIDI_1_EP_1_ISR
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 2


  32:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
  34:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
  36:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     CY_ISR(USBMIDI_1_EP_1_ISR)
  38:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  39:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
  40:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
  44:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
  46:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
  48:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {
  51:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     
  55:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_ClearSieEpInterruptSource(USBMIDI_1_SIE_INT_EP1_INTR);
  32              		.loc 1 55 0
  33 0000 0122     		movs	r2, #1
  34 0002 094B     		ldr	r3, .L3
  35 0004 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             
  57:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         */
  61:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         if (0u != (USBMIDI_1_EP[USBMIDI_1_EP1].addr & USBMIDI_1_DIR_IN))
  63:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {
  65:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             (void) USBMIDI_1_SIE_EP_BASE.sieEp[USBMIDI_1_EP1].epCr0;
  36              		.loc 1 66 0
  37 0006 0F3B     		subs	r3, r3, #15
  38 0008 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             
  68:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if (USBMIDI_1_GET_EP_TYPE(USBMIDI_1_EP1) != USBMIDI_1_EP_TYPE_ISOC)
  39              		.loc 1 69 0
  40 000a 084B     		ldr	r3, .L3+4
  41 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  42 000e 03F00303 		and	r3, r3, #3
  43 0012 9342     		cmp	r3, r2
  44 0014 04D0     		beq	.L2
  70:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 3


  71:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_EP[USBMIDI_1_EP1].epToggle ^= USBMIDI_1_EPX_CNT_DATA_TOGGLE;
  45              		.loc 1 71 0
  46 0016 054A     		ldr	r2, .L3+4
  47 0018 D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  48 001a 83F08003 		eor	r3, r3, #128
  49 001e D373     		strb	r3, [r2, #15]
  50              	.L2:
  72:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
  73:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
  74:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             */
  80:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             USBMIDI_1_EP[USBMIDI_1_EP1].apiEpState = USBMIDI_1_EVENT_PENDING;
  51              		.loc 1 80 0
  52 0020 0122     		movs	r2, #1
  53 0022 024B     		ldr	r3, .L3+4
  54 0024 5A73     		strb	r2, [r3, #13]
  55 0026 7047     		bx	lr
  56              	.L4:
  57              		.align	2
  58              	.L3:
  59 0028 0B600040 		.word	1073766411
  60 002c 00000000 		.word	USBMIDI_1_EP
  61              		.cfi_endproc
  62              	.LFE0:
  63              		.size	USBMIDI_1_EP_1_ISR, .-USBMIDI_1_EP_1_ISR
  64              		.section	.text.USBMIDI_1_EP_2_ISR,"ax",%progbits
  65              		.align	2
  66              		.global	USBMIDI_1_EP_2_ISR
  67              		.thumb
  68              		.thumb_func
  69              		.type	USBMIDI_1_EP_2_ISR, %function
  70              	USBMIDI_1_EP_2_ISR:
  71              	.LFB1:
  81:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
  82:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
  83:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #if (defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if (USBMIDI_1_midi_out_ep == USBMIDI_1_EP1)
  87:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
  88:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
  90:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #endif /* (USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     
  93:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
  95:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
  97:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 4


 101:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         
 104:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 106:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     }
 108:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 109:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #endif /* (USBMIDI_1_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 111:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 112:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #if (USBMIDI_1_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     * Function Name: USBMIDI_1_EP_2_ISR
 115:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 117:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 119:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     CY_ISR(USBMIDI_1_EP_2_ISR)
 121:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     {
  72              		.loc 1 121 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
 122:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 126:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 128:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 130:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {
 133:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 137:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_ClearSieEpInterruptSource(USBMIDI_1_SIE_INT_EP2_INTR);
  77              		.loc 1 137 0
  78 0000 0222     		movs	r2, #2
  79 0002 0A4B     		ldr	r3, .L7
  80 0004 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 139:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         */
 143:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         if (0u != (USBMIDI_1_EP[USBMIDI_1_EP2].addr & USBMIDI_1_DIR_IN))
 145:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {            
 147:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             (void) USBMIDI_1_SIE_EP_BASE.sieEp[USBMIDI_1_EP2].epCr0;
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 5


  81              		.loc 1 148 0
  82 0006 0F3B     		subs	r3, r3, #15
  83 0008 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             
 150:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if (USBMIDI_1_GET_EP_TYPE(USBMIDI_1_EP2) != USBMIDI_1_EP_TYPE_ISOC)
  84              		.loc 1 151 0
  85 000c 084B     		ldr	r3, .L7+4
  86 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  87 0010 03F00303 		and	r3, r3, #3
  88 0014 012B     		cmp	r3, #1
  89 0016 04D0     		beq	.L6
 152:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
 153:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_EP[USBMIDI_1_EP2].epToggle ^= USBMIDI_1_EPX_CNT_DATA_TOGGLE;
  90              		.loc 1 153 0
  91 0018 054A     		ldr	r2, .L7+4
  92 001a D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
  93 001c 83F08003 		eor	r3, r3, #128
  94 0020 D376     		strb	r3, [r2, #27]
  95              	.L6:
 154:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
 155:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 156:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             */
 162:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             USBMIDI_1_EP[USBMIDI_1_EP2].apiEpState = USBMIDI_1_EVENT_PENDING;
  96              		.loc 1 162 0
  97 0022 0122     		movs	r2, #1
  98 0024 024B     		ldr	r3, .L7+4
  99 0026 5A76     		strb	r2, [r3, #25]
 100 0028 7047     		bx	lr
 101              	.L8:
 102 002a 00BF     		.align	2
 103              	.L7:
 104 002c 0B600040 		.word	1073766411
 105 0030 00000000 		.word	USBMIDI_1_EP
 106              		.cfi_endproc
 107              	.LFE1:
 108              		.size	USBMIDI_1_EP_2_ISR, .-USBMIDI_1_EP_2_ISR
 109              		.section	.text.USBMIDI_1_SOF_ISR,"ax",%progbits
 110              		.align	2
 111              		.global	USBMIDI_1_SOF_ISR
 112              		.thumb
 113              		.thumb_func
 114              		.type	USBMIDI_1_SOF_ISR, %function
 115              	USBMIDI_1_SOF_ISR:
 116              	.LFB2:
 163:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 164:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 165:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #if (defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if (USBMIDI_1_midi_out_ep == USBMIDI_1_EP2)
 169:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 6


 170:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
 172:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #endif /* (USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     
 175:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 177:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 179:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 183:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         
 186:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 188:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     }
 190:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #endif /* (USBMIDI_1_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 192:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 193:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #if (USBMIDI_1_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     * Function Name: USBMIDI_1_EP_3_ISR
 196:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 198:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 200:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     CY_ISR(USBMIDI_1_EP_3_ISR)
 202:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     {
 203:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 207:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 209:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 211:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {
 214:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 218:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_ClearSieEpInterruptSource(USBMIDI_1_SIE_INT_EP3_INTR);    
 219:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 220:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         */
 224:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         if (0u != (USBMIDI_1_EP[USBMIDI_1_EP3].addr & USBMIDI_1_DIR_IN))
 226:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 7


 227:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {            
 228:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             (void) USBMIDI_1_SIE_EP_BASE.sieEp[USBMIDI_1_EP3].epCr0;
 230:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 231:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if (USBMIDI_1_GET_EP_TYPE(USBMIDI_1_EP3) != USBMIDI_1_EP_TYPE_ISOC)
 233:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
 234:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_EP[USBMIDI_1_EP3].epToggle ^= USBMIDI_1_EPX_CNT_DATA_TOGGLE;
 235:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
 236:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 237:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             */
 243:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             USBMIDI_1_EP[USBMIDI_1_EP3].apiEpState = USBMIDI_1_EVENT_PENDING;
 244:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 245:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 246:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #if (defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if (USBMIDI_1_midi_out_ep == USBMIDI_1_EP3)
 250:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
 251:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
 253:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #endif /* (USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 256:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 258:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 260:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 264:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         
 267:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 269:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     }
 271:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #endif /* (USBMIDI_1_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 273:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 274:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #if (USBMIDI_1_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     * Function Name: USBMIDI_1_EP_4_ISR
 277:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 279:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 281:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     CY_ISR(USBMIDI_1_EP_4_ISR)
 283:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     {
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 8


 284:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 288:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 290:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 292:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {
 295:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 299:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_ClearSieEpInterruptSource(USBMIDI_1_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         
 301:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         */
 305:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         if (0u != (USBMIDI_1_EP[USBMIDI_1_EP4].addr & USBMIDI_1_DIR_IN))
 307:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {
 309:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             (void) USBMIDI_1_SIE_EP_BASE.sieEp[USBMIDI_1_EP4].epCr0;
 311:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 312:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if (USBMIDI_1_GET_EP_TYPE(USBMIDI_1_EP4) != USBMIDI_1_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
 315:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_EP[USBMIDI_1_EP4].epToggle ^= USBMIDI_1_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
 317:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 318:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             */
 324:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             USBMIDI_1_EP[USBMIDI_1_EP4].apiEpState = USBMIDI_1_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 326:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 327:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #if (defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if(USBMIDI_1_midi_out_ep == USBMIDI_1_EP4)
 331:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
 332:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
 334:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #endif /* (USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 337:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 339:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 9


 341:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 345:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         
 348:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 350:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     }
 352:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #endif /* (USBMIDI_1_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 354:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 355:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #if (USBMIDI_1_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     * Function Name: USBMIDI_1_EP_5_ISR
 358:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 360:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 362:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 363:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     CY_ISR(USBMIDI_1_EP_5_ISR)
 365:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     {
 366:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 370:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 372:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 374:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                  USBMIDI_1_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {
 377:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 381:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_ClearSieEpInterruptSource(USBMIDI_1_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     
 383:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         */
 387:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         if (0u != (USBMIDI_1_EP[USBMIDI_1_EP5].addr & USBMIDI_1_DIR_IN))
 389:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {            
 391:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             (void) USBMIDI_1_SIE_EP_BASE.sieEp[USBMIDI_1_EP5].epCr0;
 393:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 394:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if (USBMIDI_1_GET_EP_TYPE(USBMIDI_1_EP5) != USBMIDI_1_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
 397:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_EP[USBMIDI_1_EP5].epToggle ^= USBMIDI_1_EPX_CNT_DATA_TOGGLE;
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 10


 398:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
 399:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 400:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             */
 406:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             USBMIDI_1_EP[USBMIDI_1_EP5].apiEpState = USBMIDI_1_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 408:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 409:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #if (defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if (USBMIDI_1_midi_out_ep == USBMIDI_1_EP5)
 413:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
 414:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
 416:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #endif /* (USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 419:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 421:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 423:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 427:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         
 430:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 432:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     }
 434:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #endif /* (USBMIDI_1_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 436:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 437:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #if (USBMIDI_1_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     * Function Name: USBMIDI_1_EP_6_ISR
 440:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 442:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 444:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 445:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     CY_ISR(USBMIDI_1_EP_6_ISR)
 447:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     {
 448:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 452:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 454:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 11


 455:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 456:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {
 459:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 463:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_ClearSieEpInterruptSource(USBMIDI_1_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         
 465:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         */
 469:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         if (0u != (USBMIDI_1_EP[USBMIDI_1_EP6].addr & USBMIDI_1_DIR_IN))
 471:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {
 473:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             (void) USBMIDI_1_SIE_EP_BASE.sieEp[USBMIDI_1_EP6].epCr0;
 475:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 476:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if (USBMIDI_1_GET_EP_TYPE(USBMIDI_1_EP6) != USBMIDI_1_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
 479:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_EP[USBMIDI_1_EP6].epToggle ^= USBMIDI_1_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
 481:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             
 482:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             */
 488:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             USBMIDI_1_EP[USBMIDI_1_EP6].apiEpState = USBMIDI_1_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 490:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 491:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #if (defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if (USBMIDI_1_midi_out_ep == USBMIDI_1_EP6)
 495:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
 496:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
 498:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #endif /* (USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 501:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 503:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 505:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 509:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 12


 512:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 514:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     }
 516:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #endif /* (USBMIDI_1_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 518:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 519:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #if (USBMIDI_1_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     * Function Name: USBMIDI_1_EP_7_ISR
 522:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 524:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 526:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 527:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     CY_ISR(USBMIDI_1_EP_7_ISR)
 529:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     {
 530:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 534:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 536:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 538:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {
 541:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     
 545:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_ClearSieEpInterruptSource(USBMIDI_1_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         
 547:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         */
 551:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         if (0u != (USBMIDI_1_EP[USBMIDI_1_EP7].addr & USBMIDI_1_DIR_IN))
 553:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {           
 555:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             (void) USBMIDI_1_SIE_EP_BASE.sieEp[USBMIDI_1_EP7].epCr0;
 557:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 558:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if (USBMIDI_1_GET_EP_TYPE(USBMIDI_1_EP7) != USBMIDI_1_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
 561:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_EP[USBMIDI_1_EP7].epToggle ^= USBMIDI_1_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
 563:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             
 564:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 13


 569:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             */
 570:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             USBMIDI_1_EP[USBMIDI_1_EP7].apiEpState = USBMIDI_1_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 572:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 573:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 574:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #if (defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if(USBMIDI_1_midi_out_ep == USBMIDI_1_EP7)
 578:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
 579:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
 581:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #endif /* (USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 584:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 586:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 588:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 592:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         
 595:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 597:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     }
 599:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #endif /* (USBMIDI_1_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 601:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 602:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #if (USBMIDI_1_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     * Function Name: USBMIDI_1_EP_8_ISR
 605:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 607:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 609:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 610:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     CY_ISR(USBMIDI_1_EP_8_ISR)
 612:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     {
 613:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 617:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 619:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 621:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {
 624:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 14


 626:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 628:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_ClearSieEpInterruptSource(USBMIDI_1_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         
 630:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         */
 634:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         if (0u != (USBMIDI_1_EP[USBMIDI_1_EP8].addr & USBMIDI_1_DIR_IN))
 636:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         {
 638:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             (void) USBMIDI_1_SIE_EP_BASE.sieEp[USBMIDI_1_EP8].epCr0;
 640:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 641:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if (USBMIDI_1_GET_EP_TYPE(USBMIDI_1_EP8) != USBMIDI_1_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
 644:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_EP[USBMIDI_1_EP8].epToggle ^= USBMIDI_1_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
 646:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 647:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             */
 653:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             USBMIDI_1_EP[USBMIDI_1_EP8].apiEpState = USBMIDI_1_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 655:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 656:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #if (defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             if (USBMIDI_1_midi_out_ep == USBMIDI_1_EP8)
 660:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             {
 661:Generated_Source\PSoC5/USBMIDI_1_episr.c ****                 USBMIDI_1_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             }
 663:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         #endif /* (USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBMIDI_1_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 666:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 668:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 670:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 674:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #if (CY_PSOC3 && defined(USBMIDI_1_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         !defined(USBMIDI_1_MAIN_SERVICE_MIDI_OUT) && USBMIDI_1_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         
 677:Generated_Source\PSoC5/USBMIDI_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         }
 679:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (CY_PSOC3 && USBMIDI_1_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     }
 681:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #endif /* (USBMIDI_1_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 15


 683:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 684:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #if (USBMIDI_1_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     * Function Name: USBMIDI_1_SOF_ISR
 687:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 689:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 691:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *
 692:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     CY_ISR(USBMIDI_1_SOF_ISR)
 694:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     {
 117              		.loc 1 694 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122 0000 7047     		bx	lr
 123              		.cfi_endproc
 124              	.LFE2:
 125              		.size	USBMIDI_1_SOF_ISR, .-USBMIDI_1_SOF_ISR
 126 0002 00BF     		.section	.text.USBMIDI_1_BUS_RESET_ISR,"ax",%progbits
 127              		.align	2
 128              		.global	USBMIDI_1_BUS_RESET_ISR
 129              		.thumb
 130              		.thumb_func
 131              		.type	USBMIDI_1_BUS_RESET_ISR, %function
 132              	USBMIDI_1_BUS_RESET_ISR:
 133              	.LFB3:
 695:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 699:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 701:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 703:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_ClearSieInterruptSource(USBMIDI_1_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 705:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #ifdef USBMIDI_1_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBMIDI_1_episr.c ****         USBMIDI_1_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     #endif /* (USBMIDI_1_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     }
 709:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #endif /* (USBMIDI_1_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 711:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 712:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #if (USBMIDI_1_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBMIDI_1_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBMIDI_1_episr.c **** * Function Name: USBMIDI_1_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBMIDI_1_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBMIDI_1_episr.c **** *
 717:Generated_Source\PSoC5/USBMIDI_1_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBMIDI_1_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBMIDI_1_episr.c **** *
 720:Generated_Source\PSoC5/USBMIDI_1_episr.c **** *
 721:Generated_Source\PSoC5/USBMIDI_1_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBMIDI_1_episr.c **** CY_ISR(USBMIDI_1_BUS_RESET_ISR)
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 16


 723:Generated_Source\PSoC5/USBMIDI_1_episr.c **** {
 134              		.loc 1 723 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		.loc 1 723 0
 139 0000 08B5     		push	{r3, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 3, -8
 142              		.cfi_offset 14, -4
 724:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #ifdef USBMIDI_1_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     USBMIDI_1_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBMIDI_1_episr.c **** #endif /* (USBMIDI_1_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 728:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 730:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 732:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     USBMIDI_1_ClearSieInterruptSource(USBMIDI_1_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBMIDI_1_episr.c **** 
 734:Generated_Source\PSoC5/USBMIDI_1_episr.c ****     USBMIDI_1_ReInitComponent();
 143              		.loc 1 734 0
 144 0002 FFF7FEFF 		bl	USBMIDI_1_ReInitComponent
 145              	.LVL0:
 146 0006 08BD     		pop	{r3, pc}
 147              		.cfi_endproc
 148              	.LFE3:
 149              		.size	USBMIDI_1_BUS_RESET_ISR, .-USBMIDI_1_BUS_RESET_ISR
 150              		.text
 151              	.Letext0:
 152              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 153              		.file 3 "Generated_Source\\PSoC5\\USBMIDI_1.h"
 154              		.file 4 "Generated_Source\\PSoC5\\USBMIDI_1_pvt.h"
 155              		.section	.debug_info,"",%progbits
 156              	.Ldebug_info0:
 157 0000 2F020000 		.4byte	0x22f
 158 0004 0400     		.2byte	0x4
 159 0006 00000000 		.4byte	.Ldebug_abbrev0
 160 000a 04       		.byte	0x4
 161 000b 01       		.uleb128 0x1
 162 000c 02010000 		.4byte	.LASF35
 163 0010 01       		.byte	0x1
 164 0011 6B020000 		.4byte	.LASF36
 165 0015 BE010000 		.4byte	.LASF37
 166 0019 00000000 		.4byte	.Ldebug_ranges0+0
 167 001d 00000000 		.4byte	0
 168 0021 00000000 		.4byte	.Ldebug_line0
 169 0025 02       		.uleb128 0x2
 170 0026 01       		.byte	0x1
 171 0027 06       		.byte	0x6
 172 0028 B5020000 		.4byte	.LASF0
 173 002c 02       		.uleb128 0x2
 174 002d 01       		.byte	0x1
 175 002e 08       		.byte	0x8
 176 002f 7C000000 		.4byte	.LASF1
 177 0033 02       		.uleb128 0x2
 178 0034 02       		.byte	0x2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 17


 179 0035 05       		.byte	0x5
 180 0036 51020000 		.4byte	.LASF2
 181 003a 02       		.uleb128 0x2
 182 003b 02       		.byte	0x2
 183 003c 07       		.byte	0x7
 184 003d 38000000 		.4byte	.LASF3
 185 0041 02       		.uleb128 0x2
 186 0042 04       		.byte	0x4
 187 0043 05       		.byte	0x5
 188 0044 94020000 		.4byte	.LASF4
 189 0048 02       		.uleb128 0x2
 190 0049 04       		.byte	0x4
 191 004a 07       		.byte	0x7
 192 004b A2000000 		.4byte	.LASF5
 193 004f 02       		.uleb128 0x2
 194 0050 08       		.byte	0x8
 195 0051 05       		.byte	0x5
 196 0052 26020000 		.4byte	.LASF6
 197 0056 02       		.uleb128 0x2
 198 0057 08       		.byte	0x8
 199 0058 07       		.byte	0x7
 200 0059 9D010000 		.4byte	.LASF7
 201 005d 03       		.uleb128 0x3
 202 005e 04       		.byte	0x4
 203 005f 05       		.byte	0x5
 204 0060 696E7400 		.ascii	"int\000"
 205 0064 02       		.uleb128 0x2
 206 0065 04       		.byte	0x4
 207 0066 07       		.byte	0x7
 208 0067 90010000 		.4byte	.LASF8
 209 006b 04       		.uleb128 0x4
 210 006c 5B020000 		.4byte	.LASF9
 211 0070 02       		.byte	0x2
 212 0071 9201     		.2byte	0x192
 213 0073 2C000000 		.4byte	0x2c
 214 0077 04       		.uleb128 0x4
 215 0078 F0000000 		.4byte	.LASF10
 216 007c 02       		.byte	0x2
 217 007d 9301     		.2byte	0x193
 218 007f 3A000000 		.4byte	0x3a
 219 0083 02       		.uleb128 0x2
 220 0084 04       		.byte	0x4
 221 0085 04       		.byte	0x4
 222 0086 19000000 		.4byte	.LASF11
 223 008a 02       		.uleb128 0x2
 224 008b 08       		.byte	0x8
 225 008c 04       		.byte	0x4
 226 008d CC000000 		.4byte	.LASF12
 227 0091 02       		.uleb128 0x2
 228 0092 01       		.byte	0x1
 229 0093 08       		.byte	0x8
 230 0094 34020000 		.4byte	.LASF13
 231 0098 04       		.uleb128 0x4
 232 0099 8A000000 		.4byte	.LASF14
 233 009d 02       		.byte	0x2
 234 009e 3C02     		.2byte	0x23c
 235 00a0 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 18


 236 00a4 05       		.uleb128 0x5
 237 00a5 6B000000 		.4byte	0x6b
 238 00a9 02       		.uleb128 0x2
 239 00aa 04       		.byte	0x4
 240 00ab 07       		.byte	0x7
 241 00ac 16020000 		.4byte	.LASF15
 242 00b0 06       		.uleb128 0x6
 243 00b1 0C       		.byte	0xc
 244 00b2 03       		.byte	0x3
 245 00b3 8D       		.byte	0x8d
 246 00b4 25010000 		.4byte	0x125
 247 00b8 07       		.uleb128 0x7
 248 00b9 D3000000 		.4byte	.LASF16
 249 00bd 03       		.byte	0x3
 250 00be 8F       		.byte	0x8f
 251 00bf 6B000000 		.4byte	0x6b
 252 00c3 00       		.byte	0
 253 00c4 07       		.uleb128 0x7
 254 00c5 F7000000 		.4byte	.LASF17
 255 00c9 03       		.byte	0x3
 256 00ca 90       		.byte	0x90
 257 00cb 6B000000 		.4byte	0x6b
 258 00cf 01       		.byte	0x1
 259 00d0 07       		.uleb128 0x7
 260 00d1 B4010000 		.4byte	.LASF18
 261 00d5 03       		.byte	0x3
 262 00d6 91       		.byte	0x91
 263 00d7 6B000000 		.4byte	0x6b
 264 00db 02       		.byte	0x2
 265 00dc 07       		.uleb128 0x7
 266 00dd 73000000 		.4byte	.LASF19
 267 00e1 03       		.byte	0x3
 268 00e2 92       		.byte	0x92
 269 00e3 6B000000 		.4byte	0x6b
 270 00e7 03       		.byte	0x3
 271 00e8 07       		.uleb128 0x7
 272 00e9 B4000000 		.4byte	.LASF20
 273 00ed 03       		.byte	0x3
 274 00ee 93       		.byte	0x93
 275 00ef 6B000000 		.4byte	0x6b
 276 00f3 04       		.byte	0x4
 277 00f4 07       		.uleb128 0x7
 278 00f5 1F020000 		.4byte	.LASF21
 279 00f9 03       		.byte	0x3
 280 00fa 94       		.byte	0x94
 281 00fb 6B000000 		.4byte	0x6b
 282 00ff 05       		.byte	0x5
 283 0100 07       		.uleb128 0x7
 284 0101 DA000000 		.4byte	.LASF22
 285 0105 03       		.byte	0x3
 286 0106 95       		.byte	0x95
 287 0107 77000000 		.4byte	0x77
 288 010b 06       		.byte	0x6
 289 010c 07       		.uleb128 0x7
 290 010d E5000000 		.4byte	.LASF23
 291 0111 03       		.byte	0x3
 292 0112 96       		.byte	0x96
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 19


 293 0113 77000000 		.4byte	0x77
 294 0117 08       		.byte	0x8
 295 0118 07       		.uleb128 0x7
 296 0119 61020000 		.4byte	.LASF24
 297 011d 03       		.byte	0x3
 298 011e 97       		.byte	0x97
 299 011f 6B000000 		.4byte	0x6b
 300 0123 0A       		.byte	0xa
 301 0124 00       		.byte	0
 302 0125 08       		.uleb128 0x8
 303 0126 00000000 		.4byte	.LASF25
 304 012a 03       		.byte	0x3
 305 012b 98       		.byte	0x98
 306 012c B0000000 		.4byte	0xb0
 307 0130 06       		.uleb128 0x6
 308 0131 10       		.byte	0x10
 309 0132 03       		.byte	0x3
 310 0133 D4       		.byte	0xd4
 311 0134 69010000 		.4byte	0x169
 312 0138 07       		.uleb128 0x7
 313 0139 65000000 		.4byte	.LASF26
 314 013d 03       		.byte	0x3
 315 013e D6       		.byte	0xd6
 316 013f 6B000000 		.4byte	0x6b
 317 0143 00       		.byte	0
 318 0144 07       		.uleb128 0x7
 319 0145 6C000000 		.4byte	.LASF27
 320 0149 03       		.byte	0x3
 321 014a D7       		.byte	0xd7
 322 014b 6B000000 		.4byte	0x6b
 323 014f 01       		.byte	0x1
 324 0150 07       		.uleb128 0x7
 325 0151 39020000 		.4byte	.LASF28
 326 0155 03       		.byte	0x3
 327 0156 D8       		.byte	0xd8
 328 0157 6B000000 		.4byte	0x6b
 329 015b 02       		.byte	0x2
 330 015c 09       		.uleb128 0x9
 331 015d 67617000 		.ascii	"gap\000"
 332 0161 03       		.byte	0x3
 333 0162 D9       		.byte	0xd9
 334 0163 69010000 		.4byte	0x169
 335 0167 03       		.byte	0x3
 336 0168 00       		.byte	0
 337 0169 0A       		.uleb128 0xa
 338 016a 6B000000 		.4byte	0x6b
 339 016e 79010000 		.4byte	0x179
 340 0172 0B       		.uleb128 0xb
 341 0173 A9000000 		.4byte	0xa9
 342 0177 0C       		.byte	0xc
 343 0178 00       		.byte	0
 344 0179 08       		.uleb128 0x8
 345 017a 9D020000 		.4byte	.LASF29
 346 017e 03       		.byte	0x3
 347 017f DA       		.byte	0xda
 348 0180 30010000 		.4byte	0x130
 349 0184 0C       		.uleb128 0xc
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 20


 350 0185 90       		.byte	0x90
 351 0186 03       		.byte	0x3
 352 0187 0E01     		.2byte	0x10e
 353 0189 9B010000 		.4byte	0x19b
 354 018d 0D       		.uleb128 0xd
 355 018e C6000000 		.4byte	.LASF30
 356 0192 03       		.byte	0x3
 357 0193 1001     		.2byte	0x110
 358 0195 9B010000 		.4byte	0x19b
 359 0199 00       		.byte	0
 360 019a 00       		.byte	0
 361 019b 0A       		.uleb128 0xa
 362 019c 79010000 		.4byte	0x179
 363 01a0 AB010000 		.4byte	0x1ab
 364 01a4 0B       		.uleb128 0xb
 365 01a5 A9000000 		.4byte	0xa9
 366 01a9 08       		.byte	0x8
 367 01aa 00       		.byte	0
 368 01ab 04       		.uleb128 0x4
 369 01ac 1F000000 		.4byte	.LASF31
 370 01b0 03       		.byte	0x3
 371 01b1 1101     		.2byte	0x111
 372 01b3 84010000 		.4byte	0x184
 373 01b7 0E       		.uleb128 0xe
 374 01b8 C1020000 		.4byte	.LASF32
 375 01bc 01       		.byte	0x1
 376 01bd 25       		.byte	0x25
 377 01be 00000000 		.4byte	.LFB0
 378 01c2 30000000 		.4byte	.LFE0-.LFB0
 379 01c6 01       		.uleb128 0x1
 380 01c7 9C       		.byte	0x9c
 381 01c8 0E       		.uleb128 0xe
 382 01c9 8F000000 		.4byte	.LASF33
 383 01cd 01       		.byte	0x1
 384 01ce 78       		.byte	0x78
 385 01cf 00000000 		.4byte	.LFB1
 386 01d3 34000000 		.4byte	.LFE1-.LFB1
 387 01d7 01       		.uleb128 0x1
 388 01d8 9C       		.byte	0x9c
 389 01d9 0F       		.uleb128 0xf
 390 01da 3F020000 		.4byte	.LASF34
 391 01de 01       		.byte	0x1
 392 01df B502     		.2byte	0x2b5
 393 01e1 00000000 		.4byte	.LFB2
 394 01e5 02000000 		.4byte	.LFE2-.LFB2
 395 01e9 01       		.uleb128 0x1
 396 01ea 9C       		.byte	0x9c
 397 01eb 10       		.uleb128 0x10
 398 01ec FE010000 		.4byte	.LASF38
 399 01f0 01       		.byte	0x1
 400 01f1 D202     		.2byte	0x2d2
 401 01f3 00000000 		.4byte	.LFB3
 402 01f7 08000000 		.4byte	.LFE3-.LFB3
 403 01fb 01       		.uleb128 0x1
 404 01fc 9C       		.byte	0x9c
 405 01fd 0B020000 		.4byte	0x20b
 406 0201 11       		.uleb128 0x11
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 21


 407 0202 06000000 		.4byte	.LVL0
 408 0206 2B020000 		.4byte	0x22b
 409 020a 00       		.byte	0
 410 020b 0A       		.uleb128 0xa
 411 020c 25010000 		.4byte	0x125
 412 0210 1B020000 		.4byte	0x21b
 413 0214 0B       		.uleb128 0xb
 414 0215 A9000000 		.4byte	0xa9
 415 0219 08       		.byte	0x8
 416 021a 00       		.byte	0
 417 021b 12       		.uleb128 0x12
 418 021c B9000000 		.4byte	.LASF39
 419 0220 04       		.byte	0x4
 420 0221 79       		.byte	0x79
 421 0222 26020000 		.4byte	0x226
 422 0226 05       		.uleb128 0x5
 423 0227 0B020000 		.4byte	0x20b
 424 022b 13       		.uleb128 0x13
 425 022c 4B000000 		.4byte	.LASF40
 426 0230 04       		.byte	0x4
 427 0231 A4       		.byte	0xa4
 428 0232 00       		.byte	0
 429              		.section	.debug_abbrev,"",%progbits
 430              	.Ldebug_abbrev0:
 431 0000 01       		.uleb128 0x1
 432 0001 11       		.uleb128 0x11
 433 0002 01       		.byte	0x1
 434 0003 25       		.uleb128 0x25
 435 0004 0E       		.uleb128 0xe
 436 0005 13       		.uleb128 0x13
 437 0006 0B       		.uleb128 0xb
 438 0007 03       		.uleb128 0x3
 439 0008 0E       		.uleb128 0xe
 440 0009 1B       		.uleb128 0x1b
 441 000a 0E       		.uleb128 0xe
 442 000b 55       		.uleb128 0x55
 443 000c 17       		.uleb128 0x17
 444 000d 11       		.uleb128 0x11
 445 000e 01       		.uleb128 0x1
 446 000f 10       		.uleb128 0x10
 447 0010 17       		.uleb128 0x17
 448 0011 00       		.byte	0
 449 0012 00       		.byte	0
 450 0013 02       		.uleb128 0x2
 451 0014 24       		.uleb128 0x24
 452 0015 00       		.byte	0
 453 0016 0B       		.uleb128 0xb
 454 0017 0B       		.uleb128 0xb
 455 0018 3E       		.uleb128 0x3e
 456 0019 0B       		.uleb128 0xb
 457 001a 03       		.uleb128 0x3
 458 001b 0E       		.uleb128 0xe
 459 001c 00       		.byte	0
 460 001d 00       		.byte	0
 461 001e 03       		.uleb128 0x3
 462 001f 24       		.uleb128 0x24
 463 0020 00       		.byte	0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 22


 464 0021 0B       		.uleb128 0xb
 465 0022 0B       		.uleb128 0xb
 466 0023 3E       		.uleb128 0x3e
 467 0024 0B       		.uleb128 0xb
 468 0025 03       		.uleb128 0x3
 469 0026 08       		.uleb128 0x8
 470 0027 00       		.byte	0
 471 0028 00       		.byte	0
 472 0029 04       		.uleb128 0x4
 473 002a 16       		.uleb128 0x16
 474 002b 00       		.byte	0
 475 002c 03       		.uleb128 0x3
 476 002d 0E       		.uleb128 0xe
 477 002e 3A       		.uleb128 0x3a
 478 002f 0B       		.uleb128 0xb
 479 0030 3B       		.uleb128 0x3b
 480 0031 05       		.uleb128 0x5
 481 0032 49       		.uleb128 0x49
 482 0033 13       		.uleb128 0x13
 483 0034 00       		.byte	0
 484 0035 00       		.byte	0
 485 0036 05       		.uleb128 0x5
 486 0037 35       		.uleb128 0x35
 487 0038 00       		.byte	0
 488 0039 49       		.uleb128 0x49
 489 003a 13       		.uleb128 0x13
 490 003b 00       		.byte	0
 491 003c 00       		.byte	0
 492 003d 06       		.uleb128 0x6
 493 003e 13       		.uleb128 0x13
 494 003f 01       		.byte	0x1
 495 0040 0B       		.uleb128 0xb
 496 0041 0B       		.uleb128 0xb
 497 0042 3A       		.uleb128 0x3a
 498 0043 0B       		.uleb128 0xb
 499 0044 3B       		.uleb128 0x3b
 500 0045 0B       		.uleb128 0xb
 501 0046 01       		.uleb128 0x1
 502 0047 13       		.uleb128 0x13
 503 0048 00       		.byte	0
 504 0049 00       		.byte	0
 505 004a 07       		.uleb128 0x7
 506 004b 0D       		.uleb128 0xd
 507 004c 00       		.byte	0
 508 004d 03       		.uleb128 0x3
 509 004e 0E       		.uleb128 0xe
 510 004f 3A       		.uleb128 0x3a
 511 0050 0B       		.uleb128 0xb
 512 0051 3B       		.uleb128 0x3b
 513 0052 0B       		.uleb128 0xb
 514 0053 49       		.uleb128 0x49
 515 0054 13       		.uleb128 0x13
 516 0055 38       		.uleb128 0x38
 517 0056 0B       		.uleb128 0xb
 518 0057 00       		.byte	0
 519 0058 00       		.byte	0
 520 0059 08       		.uleb128 0x8
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 23


 521 005a 16       		.uleb128 0x16
 522 005b 00       		.byte	0
 523 005c 03       		.uleb128 0x3
 524 005d 0E       		.uleb128 0xe
 525 005e 3A       		.uleb128 0x3a
 526 005f 0B       		.uleb128 0xb
 527 0060 3B       		.uleb128 0x3b
 528 0061 0B       		.uleb128 0xb
 529 0062 49       		.uleb128 0x49
 530 0063 13       		.uleb128 0x13
 531 0064 00       		.byte	0
 532 0065 00       		.byte	0
 533 0066 09       		.uleb128 0x9
 534 0067 0D       		.uleb128 0xd
 535 0068 00       		.byte	0
 536 0069 03       		.uleb128 0x3
 537 006a 08       		.uleb128 0x8
 538 006b 3A       		.uleb128 0x3a
 539 006c 0B       		.uleb128 0xb
 540 006d 3B       		.uleb128 0x3b
 541 006e 0B       		.uleb128 0xb
 542 006f 49       		.uleb128 0x49
 543 0070 13       		.uleb128 0x13
 544 0071 38       		.uleb128 0x38
 545 0072 0B       		.uleb128 0xb
 546 0073 00       		.byte	0
 547 0074 00       		.byte	0
 548 0075 0A       		.uleb128 0xa
 549 0076 01       		.uleb128 0x1
 550 0077 01       		.byte	0x1
 551 0078 49       		.uleb128 0x49
 552 0079 13       		.uleb128 0x13
 553 007a 01       		.uleb128 0x1
 554 007b 13       		.uleb128 0x13
 555 007c 00       		.byte	0
 556 007d 00       		.byte	0
 557 007e 0B       		.uleb128 0xb
 558 007f 21       		.uleb128 0x21
 559 0080 00       		.byte	0
 560 0081 49       		.uleb128 0x49
 561 0082 13       		.uleb128 0x13
 562 0083 2F       		.uleb128 0x2f
 563 0084 0B       		.uleb128 0xb
 564 0085 00       		.byte	0
 565 0086 00       		.byte	0
 566 0087 0C       		.uleb128 0xc
 567 0088 13       		.uleb128 0x13
 568 0089 01       		.byte	0x1
 569 008a 0B       		.uleb128 0xb
 570 008b 0B       		.uleb128 0xb
 571 008c 3A       		.uleb128 0x3a
 572 008d 0B       		.uleb128 0xb
 573 008e 3B       		.uleb128 0x3b
 574 008f 05       		.uleb128 0x5
 575 0090 01       		.uleb128 0x1
 576 0091 13       		.uleb128 0x13
 577 0092 00       		.byte	0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 24


 578 0093 00       		.byte	0
 579 0094 0D       		.uleb128 0xd
 580 0095 0D       		.uleb128 0xd
 581 0096 00       		.byte	0
 582 0097 03       		.uleb128 0x3
 583 0098 0E       		.uleb128 0xe
 584 0099 3A       		.uleb128 0x3a
 585 009a 0B       		.uleb128 0xb
 586 009b 3B       		.uleb128 0x3b
 587 009c 05       		.uleb128 0x5
 588 009d 49       		.uleb128 0x49
 589 009e 13       		.uleb128 0x13
 590 009f 38       		.uleb128 0x38
 591 00a0 0B       		.uleb128 0xb
 592 00a1 00       		.byte	0
 593 00a2 00       		.byte	0
 594 00a3 0E       		.uleb128 0xe
 595 00a4 2E       		.uleb128 0x2e
 596 00a5 00       		.byte	0
 597 00a6 3F       		.uleb128 0x3f
 598 00a7 19       		.uleb128 0x19
 599 00a8 03       		.uleb128 0x3
 600 00a9 0E       		.uleb128 0xe
 601 00aa 3A       		.uleb128 0x3a
 602 00ab 0B       		.uleb128 0xb
 603 00ac 3B       		.uleb128 0x3b
 604 00ad 0B       		.uleb128 0xb
 605 00ae 27       		.uleb128 0x27
 606 00af 19       		.uleb128 0x19
 607 00b0 11       		.uleb128 0x11
 608 00b1 01       		.uleb128 0x1
 609 00b2 12       		.uleb128 0x12
 610 00b3 06       		.uleb128 0x6
 611 00b4 40       		.uleb128 0x40
 612 00b5 18       		.uleb128 0x18
 613 00b6 9742     		.uleb128 0x2117
 614 00b8 19       		.uleb128 0x19
 615 00b9 00       		.byte	0
 616 00ba 00       		.byte	0
 617 00bb 0F       		.uleb128 0xf
 618 00bc 2E       		.uleb128 0x2e
 619 00bd 00       		.byte	0
 620 00be 3F       		.uleb128 0x3f
 621 00bf 19       		.uleb128 0x19
 622 00c0 03       		.uleb128 0x3
 623 00c1 0E       		.uleb128 0xe
 624 00c2 3A       		.uleb128 0x3a
 625 00c3 0B       		.uleb128 0xb
 626 00c4 3B       		.uleb128 0x3b
 627 00c5 05       		.uleb128 0x5
 628 00c6 27       		.uleb128 0x27
 629 00c7 19       		.uleb128 0x19
 630 00c8 11       		.uleb128 0x11
 631 00c9 01       		.uleb128 0x1
 632 00ca 12       		.uleb128 0x12
 633 00cb 06       		.uleb128 0x6
 634 00cc 40       		.uleb128 0x40
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 25


 635 00cd 18       		.uleb128 0x18
 636 00ce 9742     		.uleb128 0x2117
 637 00d0 19       		.uleb128 0x19
 638 00d1 00       		.byte	0
 639 00d2 00       		.byte	0
 640 00d3 10       		.uleb128 0x10
 641 00d4 2E       		.uleb128 0x2e
 642 00d5 01       		.byte	0x1
 643 00d6 3F       		.uleb128 0x3f
 644 00d7 19       		.uleb128 0x19
 645 00d8 03       		.uleb128 0x3
 646 00d9 0E       		.uleb128 0xe
 647 00da 3A       		.uleb128 0x3a
 648 00db 0B       		.uleb128 0xb
 649 00dc 3B       		.uleb128 0x3b
 650 00dd 05       		.uleb128 0x5
 651 00de 27       		.uleb128 0x27
 652 00df 19       		.uleb128 0x19
 653 00e0 11       		.uleb128 0x11
 654 00e1 01       		.uleb128 0x1
 655 00e2 12       		.uleb128 0x12
 656 00e3 06       		.uleb128 0x6
 657 00e4 40       		.uleb128 0x40
 658 00e5 18       		.uleb128 0x18
 659 00e6 9742     		.uleb128 0x2117
 660 00e8 19       		.uleb128 0x19
 661 00e9 01       		.uleb128 0x1
 662 00ea 13       		.uleb128 0x13
 663 00eb 00       		.byte	0
 664 00ec 00       		.byte	0
 665 00ed 11       		.uleb128 0x11
 666 00ee 898201   		.uleb128 0x4109
 667 00f1 00       		.byte	0
 668 00f2 11       		.uleb128 0x11
 669 00f3 01       		.uleb128 0x1
 670 00f4 31       		.uleb128 0x31
 671 00f5 13       		.uleb128 0x13
 672 00f6 00       		.byte	0
 673 00f7 00       		.byte	0
 674 00f8 12       		.uleb128 0x12
 675 00f9 34       		.uleb128 0x34
 676 00fa 00       		.byte	0
 677 00fb 03       		.uleb128 0x3
 678 00fc 0E       		.uleb128 0xe
 679 00fd 3A       		.uleb128 0x3a
 680 00fe 0B       		.uleb128 0xb
 681 00ff 3B       		.uleb128 0x3b
 682 0100 0B       		.uleb128 0xb
 683 0101 49       		.uleb128 0x49
 684 0102 13       		.uleb128 0x13
 685 0103 3F       		.uleb128 0x3f
 686 0104 19       		.uleb128 0x19
 687 0105 3C       		.uleb128 0x3c
 688 0106 19       		.uleb128 0x19
 689 0107 00       		.byte	0
 690 0108 00       		.byte	0
 691 0109 13       		.uleb128 0x13
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 26


 692 010a 2E       		.uleb128 0x2e
 693 010b 00       		.byte	0
 694 010c 3F       		.uleb128 0x3f
 695 010d 19       		.uleb128 0x19
 696 010e 03       		.uleb128 0x3
 697 010f 0E       		.uleb128 0xe
 698 0110 3A       		.uleb128 0x3a
 699 0111 0B       		.uleb128 0xb
 700 0112 3B       		.uleb128 0x3b
 701 0113 0B       		.uleb128 0xb
 702 0114 27       		.uleb128 0x27
 703 0115 19       		.uleb128 0x19
 704 0116 3C       		.uleb128 0x3c
 705 0117 19       		.uleb128 0x19
 706 0118 00       		.byte	0
 707 0119 00       		.byte	0
 708 011a 00       		.byte	0
 709              		.section	.debug_aranges,"",%progbits
 710 0000 34000000 		.4byte	0x34
 711 0004 0200     		.2byte	0x2
 712 0006 00000000 		.4byte	.Ldebug_info0
 713 000a 04       		.byte	0x4
 714 000b 00       		.byte	0
 715 000c 0000     		.2byte	0
 716 000e 0000     		.2byte	0
 717 0010 00000000 		.4byte	.LFB0
 718 0014 30000000 		.4byte	.LFE0-.LFB0
 719 0018 00000000 		.4byte	.LFB1
 720 001c 34000000 		.4byte	.LFE1-.LFB1
 721 0020 00000000 		.4byte	.LFB2
 722 0024 02000000 		.4byte	.LFE2-.LFB2
 723 0028 00000000 		.4byte	.LFB3
 724 002c 08000000 		.4byte	.LFE3-.LFB3
 725 0030 00000000 		.4byte	0
 726 0034 00000000 		.4byte	0
 727              		.section	.debug_ranges,"",%progbits
 728              	.Ldebug_ranges0:
 729 0000 00000000 		.4byte	.LFB0
 730 0004 30000000 		.4byte	.LFE0
 731 0008 00000000 		.4byte	.LFB1
 732 000c 34000000 		.4byte	.LFE1
 733 0010 00000000 		.4byte	.LFB2
 734 0014 02000000 		.4byte	.LFE2
 735 0018 00000000 		.4byte	.LFB3
 736 001c 08000000 		.4byte	.LFE3
 737 0020 00000000 		.4byte	0
 738 0024 00000000 		.4byte	0
 739              		.section	.debug_line,"",%progbits
 740              	.Ldebug_line0:
 741 0000 CD000000 		.section	.debug_str,"MS",%progbits,1
 741      02006E00 
 741      00000201 
 741      FB0E0D00 
 741      01010101 
 742              	.LASF25:
 743 0000 545F5553 		.ascii	"T_USBMIDI_1_EP_CTL_BLOCK\000"
 743      424D4944 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 27


 743      495F315F 
 743      45505F43 
 743      544C5F42 
 744              	.LASF11:
 745 0019 666C6F61 		.ascii	"float\000"
 745      7400
 746              	.LASF31:
 747 001f 5553424D 		.ascii	"USBMIDI_1_sie_eps_struct\000"
 747      4944495F 
 747      315F7369 
 747      655F6570 
 747      735F7374 
 748              	.LASF3:
 749 0038 73686F72 		.ascii	"short unsigned int\000"
 749      7420756E 
 749      7369676E 
 749      65642069 
 749      6E7400
 750              	.LASF40:
 751 004b 5553424D 		.ascii	"USBMIDI_1_ReInitComponent\000"
 751      4944495F 
 751      315F5265 
 751      496E6974 
 751      436F6D70 
 752              	.LASF26:
 753 0065 6570436E 		.ascii	"epCnt0\000"
 753      743000
 754              	.LASF27:
 755 006c 6570436E 		.ascii	"epCnt1\000"
 755      743100
 756              	.LASF19:
 757 0073 6570546F 		.ascii	"epToggle\000"
 757      67676C65 
 757      00
 758              	.LASF1:
 759 007c 756E7369 		.ascii	"unsigned char\000"
 759      676E6564 
 759      20636861 
 759      7200
 760              	.LASF14:
 761 008a 72656738 		.ascii	"reg8\000"
 761      00
 762              	.LASF33:
 763 008f 5553424D 		.ascii	"USBMIDI_1_EP_2_ISR\000"
 763      4944495F 
 763      315F4550 
 763      5F325F49 
 763      535200
 764              	.LASF5:
 765 00a2 6C6F6E67 		.ascii	"long unsigned int\000"
 765      20756E73 
 765      69676E65 
 765      6420696E 
 765      7400
 766              	.LASF20:
 767 00b4 61646472 		.ascii	"addr\000"
 767      00
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 28


 768              	.LASF39:
 769 00b9 5553424D 		.ascii	"USBMIDI_1_EP\000"
 769      4944495F 
 769      315F4550 
 769      00
 770              	.LASF30:
 771 00c6 73696545 		.ascii	"sieEp\000"
 771      7000
 772              	.LASF12:
 773 00cc 646F7562 		.ascii	"double\000"
 773      6C6500
 774              	.LASF16:
 775 00d3 61747472 		.ascii	"attrib\000"
 775      696200
 776              	.LASF22:
 777 00da 62756666 		.ascii	"buffOffset\000"
 777      4F666673 
 777      657400
 778              	.LASF23:
 779 00e5 62756666 		.ascii	"bufferSize\000"
 779      65725369 
 779      7A6500
 780              	.LASF10:
 781 00f0 75696E74 		.ascii	"uint16\000"
 781      313600
 782              	.LASF17:
 783 00f7 61706945 		.ascii	"apiEpState\000"
 783      70537461 
 783      746500
 784              	.LASF35:
 785 0102 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 785      4320342E 
 785      392E3320 
 785      32303135 
 785      30333033 
 786 0135 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 786      20726576 
 786      6973696F 
 786      6E203232 
 786      31323230 
 787 0168 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 787      66756E63 
 787      74696F6E 
 787      2D736563 
 787      74696F6E 
 788              	.LASF8:
 789 0190 756E7369 		.ascii	"unsigned int\000"
 789      676E6564 
 789      20696E74 
 789      00
 790              	.LASF7:
 791 019d 6C6F6E67 		.ascii	"long long unsigned int\000"
 791      206C6F6E 
 791      6720756E 
 791      7369676E 
 791      65642069 
 792              	.LASF18:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 29


 793 01b4 68774570 		.ascii	"hwEpState\000"
 793      53746174 
 793      6500
 794              	.LASF37:
 795 01be 433A5C55 		.ascii	"C:\\Users\\214016586\\Documents\\PSoC Creator\\APU2"
 795      73657273 
 795      5C323134 
 795      30313635 
 795      38365C44 
 796 01ec 4130335C 		.ascii	"A03\\APU2A03.cydsn\000"
 796      41505532 
 796      4130332E 
 796      63796473 
 796      6E00
 797              	.LASF38:
 798 01fe 5553424D 		.ascii	"USBMIDI_1_BUS_RESET_ISR\000"
 798      4944495F 
 798      315F4255 
 798      535F5245 
 798      5345545F 
 799              	.LASF15:
 800 0216 73697A65 		.ascii	"sizetype\000"
 800      74797065 
 800      00
 801              	.LASF21:
 802 021f 65704D6F 		.ascii	"epMode\000"
 802      646500
 803              	.LASF6:
 804 0226 6C6F6E67 		.ascii	"long long int\000"
 804      206C6F6E 
 804      6720696E 
 804      7400
 805              	.LASF13:
 806 0234 63686172 		.ascii	"char\000"
 806      00
 807              	.LASF28:
 808 0239 65704372 		.ascii	"epCr0\000"
 808      3000
 809              	.LASF34:
 810 023f 5553424D 		.ascii	"USBMIDI_1_SOF_ISR\000"
 810      4944495F 
 810      315F534F 
 810      465F4953 
 810      5200
 811              	.LASF2:
 812 0251 73686F72 		.ascii	"short int\000"
 812      7420696E 
 812      7400
 813              	.LASF9:
 814 025b 75696E74 		.ascii	"uint8\000"
 814      3800
 815              	.LASF24:
 816 0261 696E7465 		.ascii	"interface\000"
 816      72666163 
 816      6500
 817              	.LASF36:
 818 026b 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBMIDI_1_episr.c\000"
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc4uDLER.s 			page 30


 818      72617465 
 818      645F536F 
 818      75726365 
 818      5C50536F 
 819              	.LASF4:
 820 0294 6C6F6E67 		.ascii	"long int\000"
 820      20696E74 
 820      00
 821              	.LASF29:
 822 029d 5553424D 		.ascii	"USBMIDI_1_sie_ep_struct\000"
 822      4944495F 
 822      315F7369 
 822      655F6570 
 822      5F737472 
 823              	.LASF0:
 824 02b5 7369676E 		.ascii	"signed char\000"
 824      65642063 
 824      68617200 
 825              	.LASF32:
 826 02c1 5553424D 		.ascii	"USBMIDI_1_EP_1_ISR\000"
 826      4944495F 
 826      315F4550 
 826      5F315F49 
 826      535200
 827              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
