--
--	Conversion of APU2A03.v to vh2:
--
--	Cypress Semiconductor - WARP Version 6.3 IR 41
--	Tue Jul 25 10:20:29 2017
--

USE cypress.cypress.all;
USE cypress.rtlpkg.all;
ENTITY top_RTL IS
ATTRIBUTE part_name of top_RTL:TYPE IS "cpsoc3";
END top_RTL;
--------------------------------------------------------
ARCHITECTURE R_T_L OF top_RTL IS
SIGNAL Clock179 : bit;
SIGNAL \LFSR:enable_final\ : bit;
SIGNAL \LFSR:clk\ : bit;
SIGNAL one : bit;
SIGNAL \LFSR:clk_ctrl\ : bit;
SIGNAL zero : bit;
SIGNAL \LFSR:control_7\ : bit;
SIGNAL \LFSR:control_6\ : bit;
SIGNAL \LFSR:control_5\ : bit;
SIGNAL \LFSR:control_4\ : bit;
SIGNAL \LFSR:control_3\ : bit;
SIGNAL \LFSR:control_2\ : bit;
SIGNAL \LFSR:control_1\ : bit;
SIGNAL \LFSR:control_0\ : bit;
SIGNAL \LFSR:cs_addr_2\ : bit;
SIGNAL \LFSR:cs_addr_1\ : bit;
SIGNAL \LFSR:cs_addr_0\ : bit;
SIGNAL \LFSR:sC16:PRSdp:ce0_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ce0_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:cl0_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:cl0_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:z0_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:z0_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ff0_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ff0_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ce1_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ce1_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:cl1_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:cl1_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:z1_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:z1_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ff1_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ff1_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ov_msb_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ov_msb_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:co_msb_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:co_msb_0\:SIGNAL IS 2;
SIGNAL \LFSR:nc1\ : bit;
SIGNAL \LFSR:sC16:PRSdp:so_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:so_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f0_bus_stat_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f0_bus_stat_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f0_blk_stat_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f0_blk_stat_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f1_bus_stat_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f1_bus_stat_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f1_blk_stat_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f1_blk_stat_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ce0_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ce0_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:cl0_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:cl0_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:z0_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:z0_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ff0_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ff0_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ce1_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ce1_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:cl1_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:cl1_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:z1_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:z1_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ff1_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ff1_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ov_msb_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ov_msb_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:co_msb_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:co_msb_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:cmsb_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:cmsb_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:so_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:so_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f0_bus_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f0_bus_stat_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f0_blk_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f0_blk_stat_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f1_bus_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f1_bus_stat_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f1_blk_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f1_blk_stat_reg_0\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:carry\ : bit;
SIGNAL \LFSR:sC16:PRSdp:sh_right\ : bit;
SIGNAL \LFSR:sC16:PRSdp:sh_left\ : bit;
SIGNAL \LFSR:sC16:PRSdp:msb\ : bit;
SIGNAL \LFSR:sC16:PRSdp:cmp_eq_1\ : bit;
SIGNAL \LFSR:sC16:PRSdp:cmp_eq_0\ : bit;
SIGNAL \LFSR:sC16:PRSdp:cmp_lt_1\ : bit;
SIGNAL \LFSR:sC16:PRSdp:cmp_lt_0\ : bit;
SIGNAL \LFSR:sC16:PRSdp:cmp_zero_1\ : bit;
SIGNAL \LFSR:sC16:PRSdp:cmp_zero_0\ : bit;
SIGNAL \LFSR:sC16:PRSdp:cmp_ff_1\ : bit;
SIGNAL \LFSR:sC16:PRSdp:cmp_ff_0\ : bit;
SIGNAL \LFSR:sC16:PRSdp:cap_1\ : bit;
SIGNAL \LFSR:sC16:PRSdp:cap_0\ : bit;
SIGNAL \LFSR:sC16:PRSdp:cfb\ : bit;
SIGNAL \LFSR:sC16:PRSdp:ce0_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ce0_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:cl0_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:cl0_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:z0_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:z0_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ff0_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ff0_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ce1_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ce1_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:cl1_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:cl1_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:z1_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:z1_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ff1_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ff1_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ov_msb_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ov_msb_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:co_msb_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:co_msb_1\:SIGNAL IS 2;
SIGNAL \LFSR:cmsb\ : bit;
SIGNAL \LFSR:sC16:PRSdp:so_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:so_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f0_bus_stat_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f0_bus_stat_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f0_blk_stat_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f0_blk_stat_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f1_bus_stat_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f1_bus_stat_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f1_blk_stat_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f1_blk_stat_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ce0_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ce0_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:cl0_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:cl0_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:z0_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:z0_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ff0_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ff0_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ce1_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ce1_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:cl1_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:cl1_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:z1_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:z1_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ff1_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ff1_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:ov_msb_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:ov_msb_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:co_msb_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:co_msb_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:cmsb_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:cmsb_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:so_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:so_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f0_bus_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f0_bus_stat_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f0_blk_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f0_blk_stat_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f1_bus_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f1_bus_stat_reg_1\:SIGNAL IS 2;
SIGNAL \LFSR:sC16:PRSdp:f1_blk_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \LFSR:sC16:PRSdp:f1_blk_stat_reg_1\:SIGNAL IS 2;
SIGNAL Net_4 : bit;
SIGNAL Net_62 : bit;
SIGNAL \LFSR:ctrl_enable\ : bit;
SIGNAL \LFSR:ctrl_api_clock\ : bit;
SIGNAL \LFSR:ctrl_reset_common\ : bit;
SIGNAL \LFSR:ctrl_reset_ci\ : bit;
SIGNAL \LFSR:ctrl_reset_si\ : bit;
SIGNAL \LFSR:ctrl_reset_so\ : bit;
SIGNAL \LFSR:ctrl_reset_state_1\ : bit;
SIGNAL \LFSR:ctrl_reset_state_0\ : bit;
SIGNAL \LFSR:status_2\ : bit;
SIGNAL \LFSR:status_1\ : bit;
SIGNAL \LFSR:status_0\ : bit;
SIGNAL \LFSR:status_3\ : bit;
SIGNAL \LFSR:ci_temp\ : bit;
SIGNAL \LFSR:status_4\ : bit;
SIGNAL \LFSR:sc_temp\ : bit;
SIGNAL \LFSR:status_5\ : bit;
SIGNAL \LFSR:so\ : bit;
SIGNAL \LFSR:status_6\ : bit;
SIGNAL \LFSR:state_0\ : bit;
SIGNAL \LFSR:status_7\ : bit;
SIGNAL \LFSR:state_1\ : bit;
SIGNAL Net_1 : bit;
SIGNAL \LFSR:reset_final\ : bit;
SIGNAL Net_14 : bit;
SIGNAL \Length_Counter:Net_43\ : bit;
SIGNAL Net_11 : bit;
SIGNAL \Length_Counter:Net_49\ : bit;
SIGNAL \Length_Counter:Net_82\ : bit;
SIGNAL \Length_Counter:Net_89\ : bit;
SIGNAL \Length_Counter:Net_95\ : bit;
SIGNAL \Length_Counter:Net_91\ : bit;
SIGNAL \Length_Counter:Net_102\ : bit;
SIGNAL \Length_Counter:CounterUDB:ClockOutFromEnBlock\ : bit;
SIGNAL \Length_Counter:CounterUDB:ctrl_cmod_2\ : bit;
SIGNAL \Length_Counter:CounterUDB:ctrl_cmod_1\ : bit;
SIGNAL \Length_Counter:CounterUDB:ctrl_cmod_0\ : bit;
SIGNAL \Length_Counter:CounterUDB:ctrl_capmode_1\ : bit;
SIGNAL \Length_Counter:CounterUDB:ctrl_capmode_0\ : bit;
SIGNAL \Length_Counter:CounterUDB:Clk_Ctl_i\ : bit;
SIGNAL \Length_Counter:CounterUDB:control_7\ : bit;
SIGNAL \Length_Counter:CounterUDB:control_6\ : bit;
SIGNAL \Length_Counter:CounterUDB:control_5\ : bit;
SIGNAL \Length_Counter:CounterUDB:control_4\ : bit;
SIGNAL \Length_Counter:CounterUDB:control_3\ : bit;
SIGNAL \Length_Counter:CounterUDB:control_2\ : bit;
SIGNAL \Length_Counter:CounterUDB:control_1\ : bit;
SIGNAL \Length_Counter:CounterUDB:control_0\ : bit;
SIGNAL \Length_Counter:CounterUDB:ctrl_enable\ : bit;
SIGNAL \Length_Counter:CounterUDB:prevCapture\ : bit;
SIGNAL \Length_Counter:CounterUDB:capt_rising\ : bit;
SIGNAL \Length_Counter:CounterUDB:capt_falling\ : bit;
SIGNAL \Length_Counter:CounterUDB:capt_either_edge\ : bit;
SIGNAL \Length_Counter:CounterUDB:hwCapture\ : bit;
SIGNAL \Length_Counter:CounterUDB:reload\ : bit;
SIGNAL Net_10 : bit;
SIGNAL \Length_Counter:CounterUDB:reload_tc\ : bit;
SIGNAL \Length_Counter:CounterUDB:final_enable\ : bit;
SIGNAL \Length_Counter:CounterUDB:disable_run_i\ : bit;
SIGNAL \Length_Counter:CounterUDB:overflow_status\ : bit;
SIGNAL \Length_Counter:CounterUDB:underflow_status\ : bit;
SIGNAL \Length_Counter:CounterUDB:counter_enable\ : bit;
SIGNAL \Length_Counter:CounterUDB:status_0\ : bit;
SIGNAL \Length_Counter:CounterUDB:cmp_out_status\ : bit;
SIGNAL \Length_Counter:CounterUDB:status_1\ : bit;
SIGNAL \Length_Counter:CounterUDB:per_zero\ : bit;
SIGNAL \Length_Counter:CounterUDB:status_2\ : bit;
SIGNAL \Length_Counter:CounterUDB:status_3\ : bit;
SIGNAL \Length_Counter:CounterUDB:status_4\ : bit;
SIGNAL \Length_Counter:CounterUDB:status_5\ : bit;
SIGNAL \Length_Counter:CounterUDB:fifo_full\ : bit;
SIGNAL \Length_Counter:CounterUDB:status_6\ : bit;
SIGNAL \Length_Counter:CounterUDB:fifo_nempty\ : bit;
SIGNAL \Length_Counter:CounterUDB:overflow\ : bit;
SIGNAL \Length_Counter:CounterUDB:dp_dir\ : bit;
SIGNAL \Length_Counter:CounterUDB:per_equal\ : bit;
SIGNAL \Length_Counter:CounterUDB:underflow\ : bit;
SIGNAL \Length_Counter:CounterUDB:overflow_reg_i\ : bit;
SIGNAL \Length_Counter:CounterUDB:underflow_reg_i\ : bit;
SIGNAL \Length_Counter:CounterUDB:tc_i\ : bit;
SIGNAL \Length_Counter:CounterUDB:tc_reg_i\ : bit;
SIGNAL \Length_Counter:CounterUDB:cmp_out_i\ : bit;
SIGNAL \Length_Counter:CounterUDB:cmp_less\ : bit;
SIGNAL \Length_Counter:CounterUDB:cmp_equal\ : bit;
SIGNAL \Length_Counter:CounterUDB:prevCompare\ : bit;
SIGNAL \Length_Counter:CounterUDB:cmp_out_reg_i\ : bit;
SIGNAL Net_202 : bit;
SIGNAL \Length_Counter:CounterUDB:count_stored_i\ : bit;
SIGNAL Length_Clk : bit;
SIGNAL \Length_Counter:CounterUDB:count_enable\ : bit;
SIGNAL \Length_Counter:CounterUDB:cs_addr_2\ : bit;
SIGNAL \Length_Counter:CounterUDB:cs_addr_1\ : bit;
SIGNAL \Length_Counter:CounterUDB:cs_addr_0\ : bit;
SIGNAL \Length_Counter:CounterUDB:nc42\ : bit;
SIGNAL \Length_Counter:CounterUDB:per_FF\ : bit;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:z1\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:z1\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:ff1\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:ff1\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:ov_msb\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:ov_msb\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:co_msb\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:co_msb\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:cmsb\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:cmsb\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:so\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:so\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:f1_bus_stat\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:f1_bus_stat\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:f1_blk_stat\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:f1_blk_stat\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:ce0_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:cl0_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:z0_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:z0_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:ff0_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:ce1_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:cl1_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:z1_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:z1_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:ff1_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:co_msb_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:cmsb_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:so_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:so_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:sC8:counterdp:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter:CounterUDB:sC8:counterdp:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL tmpOE__Pin_1_net_0 : bit;
SIGNAL tmpIO_0__Pin_1_net_0 : bit;
TERMINAL tmpSIOVREF__Pin_1_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Pin_1_net_0 : bit;
SIGNAL Net_279 : bit;
SIGNAL \Length_Counter_1:Net_43\ : bit;
SIGNAL Net_304 : bit;
SIGNAL \Length_Counter_1:Net_49\ : bit;
SIGNAL \Length_Counter_1:Net_82\ : bit;
SIGNAL \Length_Counter_1:Net_89\ : bit;
SIGNAL \Length_Counter_1:Net_95\ : bit;
SIGNAL \Length_Counter_1:Net_91\ : bit;
SIGNAL \Length_Counter_1:Net_102\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:ClockOutFromEnBlock\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:ctrl_cmod_2\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:ctrl_cmod_1\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:ctrl_cmod_0\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:ctrl_capmode_1\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:ctrl_capmode_0\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:Clk_Ctl_i\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:control_7\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:control_6\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:control_5\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:control_4\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:control_3\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:control_2\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:control_1\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:control_0\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:ctrl_enable\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:prevCapture\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:capt_rising\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:capt_falling\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:capt_either_edge\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:hwCapture\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:reload\ : bit;
SIGNAL Net_275 : bit;
SIGNAL \Length_Counter_1:CounterUDB:reload_tc\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:final_enable\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:disable_run_i\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:overflow_status\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:underflow_status\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:counter_enable\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:status_0\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:cmp_out_status\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:status_1\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:per_zero\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:status_2\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:status_3\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:status_4\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:status_5\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:fifo_full\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:status_6\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:fifo_nempty\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:overflow\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:dp_dir\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:per_equal\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:underflow\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:overflow_reg_i\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:underflow_reg_i\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:tc_i\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:tc_reg_i\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:cmp_out_i\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:cmp_less\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:cmp_equal\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:prevCompare\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:cmp_out_reg_i\ : bit;
SIGNAL Net_277 : bit;
SIGNAL \Length_Counter_1:CounterUDB:count_stored_i\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:count_enable\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:cs_addr_2\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:cs_addr_1\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:cs_addr_0\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:nc42\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:per_FF\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:z1\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:z1\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:ff1\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:ff1\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:ov_msb\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:ov_msb\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:co_msb\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:co_msb\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:cmsb\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:cmsb\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:so\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:so\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:f1_bus_stat\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:f1_bus_stat\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:f1_blk_stat\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:f1_blk_stat\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:ce0_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:cl0_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:z0_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:z0_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:ff0_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:ce1_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:cl1_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:z1_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:z1_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:ff1_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:co_msb_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:cmsb_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:so_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:so_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \Length_Counter_1:CounterUDB:sC8:counterdp:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \Length_Counter_1:CounterUDB:sC8:counterdp:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL Net_243 : bit;
SIGNAL oData_6 : bit;
SIGNAL oData_5 : bit;
SIGNAL oData_4 : bit;
SIGNAL oData_3 : bit;
SIGNAL oData_2 : bit;
SIGNAL oData_1 : bit;
SIGNAL oData_0 : bit;
SIGNAL Net_168 : bit;
SIGNAL Net_230 : bit;
SIGNAL \Tri_Divider:Net_82\ : bit;
SIGNAL \Tri_Divider:Net_91\ : bit;
SIGNAL Net_264 : bit;
SIGNAL \Tri_Divider:Net_48\ : bit;
SIGNAL \Tri_Divider:Net_47\ : bit;
SIGNAL \Tri_Divider:Net_42\ : bit;
SIGNAL Net_268 : bit;
SIGNAL Net_262 : bit;
SIGNAL \Tri_Divider:Net_89\ : bit;
SIGNAL \Tri_Divider:Net_95\ : bit;
SIGNAL \Tri_Divider:Net_102\ : bit;
SIGNAL \Noise_Clk_Div:Net_82\ : bit;
SIGNAL \Noise_Clk_Div:Net_91\ : bit;
SIGNAL \Noise_Clk_Div:Net_48\ : bit;
SIGNAL \Noise_Clk_Div:Net_47\ : bit;
SIGNAL \Noise_Clk_Div:Net_42\ : bit;
SIGNAL Net_233 : bit;
SIGNAL \Noise_Clk_Div:Net_89\ : bit;
SIGNAL \Noise_Clk_Div:Net_95\ : bit;
SIGNAL \Noise_Clk_Div:Net_102\ : bit;
SIGNAL Net_107 : bit;
SIGNAL Tri_aud_7 : bit;
SIGNAL Tri_Data_3 : bit;
SIGNAL Net_301 : bit;
SIGNAL audio_out_7 : bit;
SIGNAL audio_out_6 : bit;
SIGNAL audio_out_5 : bit;
SIGNAL audio_out_4 : bit;
SIGNAL Tri_aud_6 : bit;
SIGNAL Tri_Data_2 : bit;
SIGNAL Tri_aud_5 : bit;
SIGNAL Tri_Data_1 : bit;
SIGNAL Tri_aud_4 : bit;
SIGNAL Tri_Data_0 : bit;
SIGNAL Net_303 : bit;
SIGNAL audio_out_3 : bit;
SIGNAL audio_out_2 : bit;
SIGNAL audio_out_1 : bit;
SIGNAL audio_out_0 : bit;
SIGNAL DAC_Clock : bit;
SIGNAL tmpOE__Noise_Out_net_0 : bit;
SIGNAL tmpFB_0__Noise_Out_net_0 : bit;
TERMINAL Net_315 : bit;
SIGNAL tmpIO_0__Noise_Out_net_0 : bit;
TERMINAL tmpSIOVREF__Noise_Out_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Noise_Out_net_0 : bit;
SIGNAL \Counter_1:Net_82\ : bit;
SIGNAL \Counter_1:Net_91\ : bit;
SIGNAL Net_436 : bit;
SIGNAL \Counter_1:Net_48\ : bit;
SIGNAL \Counter_1:Net_47\ : bit;
SIGNAL \Counter_1:Net_42\ : bit;
SIGNAL Net_439 : bit;
SIGNAL Net_386 : bit;
SIGNAL \Counter_1:Net_89\ : bit;
SIGNAL \Counter_1:Net_95\ : bit;
SIGNAL \Counter_1:Net_102\ : bit;
SIGNAL tmpOE__Pin_6_net_0 : bit;
SIGNAL Net_205 : bit;
SIGNAL tmpIO_0__Pin_6_net_0 : bit;
TERMINAL tmpSIOVREF__Pin_6_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Pin_6_net_0 : bit;
SIGNAL Net_177_6 : bit;
SIGNAL Net_177_5 : bit;
SIGNAL Net_177_4 : bit;
SIGNAL Net_177_3 : bit;
SIGNAL Net_177_2 : bit;
SIGNAL Net_177_1 : bit;
SIGNAL Net_177_0 : bit;
SIGNAL \Triangle_Gen_1:mode\ : bit;
SIGNAL \Triangle_Gen_1:cmp_vv_vv_MODGEN_1\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_3\ : bit;
SIGNAL \Triangle_Gen_1:cmp_vv_vv_MODGEN_3\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_3\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_2\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_2\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_1\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_1\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_0\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_0\ : bit;
SIGNAL Tri_Data_3R : bit;
SIGNAL Net_261 : bit;
SIGNAL Tri_Data_3S : bit;
SIGNAL Tri_Data_2R : bit;
SIGNAL Tri_Data_2S : bit;
SIGNAL Tri_Data_1R : bit;
SIGNAL Tri_Data_1S : bit;
SIGNAL Tri_Data_0R : bit;
SIGNAL Tri_Data_0S : bit;
SIGNAL \Triangle_Gen_1:mode\\R\ : bit;
SIGNAL \Triangle_Gen_1:mode\\S\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:newa_3\ : bit;
SIGNAL \Triangle_Gen_1:MODIN1_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:newa_2\ : bit;
SIGNAL \Triangle_Gen_1:MODIN1_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:newa_1\ : bit;
SIGNAL \Triangle_Gen_1:MODIN1_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:newa_0\ : bit;
SIGNAL \Triangle_Gen_1:MODIN1_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:newb_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:newb_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:newb_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:newb_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:dataa_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:dataa_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:dataa_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:dataa_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:datab_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:datab_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:datab_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:datab_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:lta_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:gta_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:lta_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:gta_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:lta_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:gta_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:lta_0\ : bit;
ATTRIBUTE soft of \Triangle_Gen_1:MODULE_1:g2:a0:lta_0\:SIGNAL IS '1';
SIGNAL \Triangle_Gen_1:MODULE_1:g2:a0:gta_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_31\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_30\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_29\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_28\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_27\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_26\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_25\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_24\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_23\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_22\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_21\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_20\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_19\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_18\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_17\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_16\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_15\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_14\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_13\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_12\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_11\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_10\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_9\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_8\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_7\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_6\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_5\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_4\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:b_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_31\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_30\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_29\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_28\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_27\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_26\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_25\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_24\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_23\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_22\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_21\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_20\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_19\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_18\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_17\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_16\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_15\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_14\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_13\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_12\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_11\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_10\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_9\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_8\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_7\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_6\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_5\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_4\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_3\ : bit;
SIGNAL \Triangle_Gen_1:MODIN2_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_2\ : bit;
SIGNAL \Triangle_Gen_1:MODIN2_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_1\ : bit;
SIGNAL \Triangle_Gen_1:MODIN2_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:a_0\ : bit;
SIGNAL \Triangle_Gen_1:MODIN2_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_31\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_30\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_29\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_28\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_27\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_26\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_25\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_24\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_23\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_22\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_21\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_20\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_19\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_18\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_17\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_16\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_15\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_14\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_13\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_12\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_11\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_10\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_9\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_8\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_7\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_6\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_5\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_4\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:b_0\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_31\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_31\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_30\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_30\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_29\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_29\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_28\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_28\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_27\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_27\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_26\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_26\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_25\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_25\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_24\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_24\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_23\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_23\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_22\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_22\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_21\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_21\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_20\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_20\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_19\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_19\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_18\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_18\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_17\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_17\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_16\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_16\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_15\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_15\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_14\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_14\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_13\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_13\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_12\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_12\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_11\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_11\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_10\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_10\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_9\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_9\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_8\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_8\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_7\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_7\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_6\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_6\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_5\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_5\ : bit;
SIGNAL \Triangle_Gen_1:add_vi_vv_MODGEN_2_4\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_4\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:s_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_31\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_30\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_29\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_28\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_27\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_26\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_25\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_24\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_16\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_8\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:newa_3\ : bit;
SIGNAL \Triangle_Gen_1:MODIN3_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:newa_2\ : bit;
SIGNAL \Triangle_Gen_1:MODIN3_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:newa_1\ : bit;
SIGNAL \Triangle_Gen_1:MODIN3_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:newa_0\ : bit;
SIGNAL \Triangle_Gen_1:MODIN3_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:newb_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:newb_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:newb_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:newb_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:dataa_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:dataa_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:dataa_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:dataa_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:datab_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:datab_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:datab_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:datab_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:lta_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:gta_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:lta_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:gta_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:lta_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:gta_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:lta_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_3:g2:a0:gta_0\ : bit;
ATTRIBUTE soft of \Triangle_Gen_1:MODULE_3:g2:a0:gta_0\:SIGNAL IS '1';
SIGNAL \Triangle_Gen_1:MODULE_4:b_31\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_30\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_29\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_28\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_27\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_26\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_25\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_24\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_23\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_22\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_21\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_20\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_19\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_18\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_17\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_16\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_15\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_14\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_13\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_12\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_11\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_10\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_9\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_8\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_7\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_6\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_5\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_4\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:b_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_31\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_30\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_29\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_28\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_27\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_26\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_25\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_24\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_23\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_22\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_21\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_20\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_19\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_18\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_17\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_16\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_15\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_14\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_13\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_12\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_11\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_10\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_9\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_8\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_7\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_6\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_5\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_4\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_3\ : bit;
SIGNAL \Triangle_Gen_1:MODIN4_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_2\ : bit;
SIGNAL \Triangle_Gen_1:MODIN4_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_1\ : bit;
SIGNAL \Triangle_Gen_1:MODIN4_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:a_0\ : bit;
SIGNAL \Triangle_Gen_1:MODIN4_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_31\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_30\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_29\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_28\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_27\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_26\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_25\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_24\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_23\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_22\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_21\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_20\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_19\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_18\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_17\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_16\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_15\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_14\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_13\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_12\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_11\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_10\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_9\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_8\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_7\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_6\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_5\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_4\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:b_0\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_31\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_31\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_30\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_30\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_29\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_29\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_28\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_28\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_27\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_27\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_26\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_26\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_25\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_25\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_24\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_24\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_23\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_23\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_22\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_22\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_21\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_21\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_20\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_20\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_19\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_19\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_18\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_18\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_17\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_17\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_16\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_16\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_15\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_15\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_14\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_14\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_13\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_13\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_12\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_12\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_11\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_11\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_10\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_10\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_9\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_9\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_8\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_8\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_7\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_7\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_6\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_6\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_5\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_5\ : bit;
SIGNAL \Triangle_Gen_1:sub_vi_vv_MODGEN_4_4\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_4\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:d_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_31\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_30\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_29\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_28\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_27\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_26\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_25\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_24\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_24\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_23\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_22\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_21\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_20\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_19\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_18\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_17\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_16\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_16\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_15\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_14\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_13\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_12\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_11\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_10\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_9\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_8\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_8\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_7\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_6\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_5\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_4\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_3\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_2\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \Linear_Counter_1:counter_6\ : bit;
SIGNAL Net_342 : bit;
SIGNAL \Linear_Counter_1:halt_flag\ : bit;
SIGNAL duration_6 : bit;
SIGNAL \Linear_Counter_1:cmp_vi_vv_MODGEN_5\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_6\ : bit;
SIGNAL \Linear_Counter_1:counter_5\ : bit;
SIGNAL duration_5 : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_5\ : bit;
SIGNAL \Linear_Counter_1:counter_4\ : bit;
SIGNAL duration_4 : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_4\ : bit;
SIGNAL \Linear_Counter_1:counter_3\ : bit;
SIGNAL duration_3 : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_3\ : bit;
SIGNAL \Linear_Counter_1:counter_2\ : bit;
SIGNAL duration_2 : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_2\ : bit;
SIGNAL \Linear_Counter_1:counter_1\ : bit;
SIGNAL duration_1 : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_1\ : bit;
SIGNAL \Linear_Counter_1:counter_0\ : bit;
SIGNAL duration_0 : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_0\ : bit;
SIGNAL Net_329 : bit;
SIGNAL \Linear_Counter_1:halt_flag\\R\ : bit;
SIGNAL Net_287 : bit;
SIGNAL \Linear_Counter_1:halt_flag\\S\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:aa_6\ : bit;
SIGNAL \Linear_Counter_1:MODIN5_6\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:aa_5\ : bit;
SIGNAL \Linear_Counter_1:MODIN5_5\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:aa_4\ : bit;
SIGNAL \Linear_Counter_1:MODIN5_4\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:aa_3\ : bit;
SIGNAL \Linear_Counter_1:MODIN5_3\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:aa_2\ : bit;
SIGNAL \Linear_Counter_1:MODIN5_2\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:aa_1\ : bit;
SIGNAL \Linear_Counter_1:MODIN5_1\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:aa_0\ : bit;
SIGNAL \Linear_Counter_1:MODIN5_0\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:bb_6\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:bb_5\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:bb_4\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:bb_3\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:bb_2\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:bb_1\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:bb_0\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:newa_6\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:newa_5\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:newa_4\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:newa_3\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:newa_2\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:newa_1\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:newa_0\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:newb_6\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:newb_5\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:newb_4\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:newb_3\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:newb_2\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:newb_1\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:newb_0\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:dataa_6\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:dataa_5\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:dataa_4\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:dataa_3\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:dataa_2\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:dataa_1\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:dataa_0\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:datab_6\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:datab_5\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:datab_4\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:datab_3\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:datab_2\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:datab_1\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:datab_0\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:lta_6\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:gta_6\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:lta_5\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:gta_5\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:lta_4\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:gta_4\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:lta_3\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:gta_3\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:lta_2\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:gta_2\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:lta_1\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:gta_1\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:lta_0\ : bit;
SIGNAL \Linear_Counter_1:MODULE_5:g2:a0:gta_0\ : bit;
ATTRIBUTE soft of \Linear_Counter_1:MODULE_5:g2:a0:gta_0\:SIGNAL IS '1';
SIGNAL \Linear_Counter_1:MODULE_6:b_31\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_30\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_29\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_28\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_27\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_26\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_25\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_24\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_23\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_22\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_21\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_20\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_19\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_18\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_17\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_16\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_15\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_14\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_13\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_12\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_11\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_10\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_9\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_8\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_7\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_6\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_5\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_4\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_3\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_2\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_1\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:b_0\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_31\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_30\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_29\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_28\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_27\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_26\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_25\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_24\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_23\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_22\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_21\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_20\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_19\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_18\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_17\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_16\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_15\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_14\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_13\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_12\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_11\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_10\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_9\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_8\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_7\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_6\ : bit;
SIGNAL \Linear_Counter_1:MODIN6_6\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_5\ : bit;
SIGNAL \Linear_Counter_1:MODIN6_5\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_4\ : bit;
SIGNAL \Linear_Counter_1:MODIN6_4\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_3\ : bit;
SIGNAL \Linear_Counter_1:MODIN6_3\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_2\ : bit;
SIGNAL \Linear_Counter_1:MODIN6_2\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_1\ : bit;
SIGNAL \Linear_Counter_1:MODIN6_1\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:a_0\ : bit;
SIGNAL \Linear_Counter_1:MODIN6_0\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_31\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_30\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_29\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_28\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_27\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_26\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_25\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_24\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_23\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_22\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_21\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_20\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_19\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_18\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_17\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_16\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_15\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_14\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_13\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_12\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_11\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_10\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_9\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_8\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_7\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_6\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_5\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_4\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_3\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_2\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_1\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:b_0\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_31\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_31\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_30\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_30\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_29\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_29\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_28\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_28\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_27\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_27\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_26\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_26\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_25\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_25\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_24\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_24\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_23\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_23\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_22\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_22\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_21\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_21\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_20\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_20\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_19\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_19\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_18\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_18\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_17\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_17\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_16\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_16\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_15\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_15\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_14\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_14\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_13\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_13\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_12\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_12\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_11\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_11\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_10\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_10\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_9\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_9\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_8\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_8\ : bit;
SIGNAL \Linear_Counter_1:sub_vi_vv_MODGEN_6_7\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_7\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_6\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_5\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_4\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_3\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_2\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_1\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:d_0\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_31\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_30\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_29\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_28\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_27\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_26\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_25\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_24\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_24\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_23\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_22\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_21\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_20\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_19\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_18\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_17\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_16\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_16\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_15\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_14\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_13\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_12\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_11\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_10\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_9\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_8\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_8\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_7\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_6\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_5\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_4\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_3\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_2\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \VDAC8_Noise:Net_83\ : bit;
SIGNAL \VDAC8_Noise:Net_81\ : bit;
SIGNAL \VDAC8_Noise:Net_82\ : bit;
TERMINAL \VDAC8_Noise:Net_77\ : bit;
SIGNAL Net_390_6 : bit;
SIGNAL Net_390_5 : bit;
SIGNAL Net_390_4 : bit;
SIGNAL Net_390_3 : bit;
SIGNAL Net_390_2 : bit;
SIGNAL Net_390_1 : bit;
SIGNAL Net_390_0 : bit;
SIGNAL Net_391 : bit;
SIGNAL \Control_Reg_1:clk\ : bit;
SIGNAL \Control_Reg_1:rst\ : bit;
SIGNAL \Control_Reg_1:control_out_0\ : bit;
SIGNAL \Control_Reg_1:control_out_1\ : bit;
SIGNAL \Control_Reg_1:control_out_2\ : bit;
SIGNAL \Control_Reg_1:control_out_3\ : bit;
SIGNAL \Control_Reg_1:control_out_4\ : bit;
SIGNAL \Control_Reg_1:control_out_5\ : bit;
SIGNAL \Control_Reg_1:control_out_6\ : bit;
SIGNAL \Control_Reg_1:control_out_7\ : bit;
SIGNAL \Control_Reg_1:control_7\ : bit;
SIGNAL \Control_Reg_1:control_6\ : bit;
SIGNAL \Control_Reg_1:control_5\ : bit;
SIGNAL \Control_Reg_1:control_4\ : bit;
SIGNAL \Control_Reg_1:control_3\ : bit;
SIGNAL \Control_Reg_1:control_2\ : bit;
SIGNAL \Control_Reg_1:control_1\ : bit;
SIGNAL \Control_Reg_1:control_0\ : bit;
SIGNAL Tri_aud_3 : bit;
SIGNAL Tri_aud_2 : bit;
SIGNAL Tri_aud_1 : bit;
SIGNAL Tri_aud_0 : bit;
SIGNAL Net_361 : bit;
SIGNAL \MIDI1_UART:Net_9\ : bit;
SIGNAL Net_362 : bit;
SIGNAL \MIDI1_UART:Net_61\ : bit;
SIGNAL \MIDI1_UART:BUART:clock_op\ : bit;
SIGNAL \MIDI1_UART:BUART:reset_reg\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_hd_send_break\ : bit;
SIGNAL \MIDI1_UART:BUART:HalfDuplexSend\ : bit;
SIGNAL \MIDI1_UART:BUART:FinalParityType_1\ : bit;
SIGNAL \MIDI1_UART:BUART:FinalParityType_0\ : bit;
SIGNAL \MIDI1_UART:BUART:FinalAddrMode_2\ : bit;
SIGNAL \MIDI1_UART:BUART:FinalAddrMode_1\ : bit;
SIGNAL \MIDI1_UART:BUART:FinalAddrMode_0\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_ctrl_mark\ : bit;
SIGNAL \MIDI1_UART:BUART:reset_sr\ : bit;
SIGNAL \MIDI1_UART:BUART:HalfDuplexSend_last\ : bit;
SIGNAL Net_355 : bit;
SIGNAL \MIDI1_UART:BUART:txn\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_interrupt_out\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_interrupt_out\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_state_1\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_state_0\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_bitclk_enable_pre\ : bit;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ce0\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ce0\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:cl0\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:z0\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ff0\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ce1\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ce1\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:cl1\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:z1\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ff1\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:tx_shift_out\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_fifo_notfull\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_fifo_empty\ : bit;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:f1_bus_stat\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:f1_bus_stat\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:f1_blk_stat\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:f1_blk_stat\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sTX:TxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sTX:TxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:counter_load_not\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_state_2\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_bitclk_dp\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_counter_dp\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_7\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_3\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_2\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sc_out_0\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_counter_tc\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_status_6\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_status_5\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_status_4\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_status_0\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_status_1\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_status_2\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_status_3\ : bit;
SIGNAL Net_357 : bit;
SIGNAL \MIDI1_UART:BUART:tx_bitclk\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_ctrl_mark_last\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_mark\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_parity_bit\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_addressmatch\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_addressmatch1\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_addressmatch2\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_1\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_0\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_bitclk_enable\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_postpoll\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_load_fifo\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:hd_shift_out\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_fifonotempty\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_fifofull\ : bit;
SIGNAL \MIDI1_UART:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \MIDI1_UART:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:rx_counter_load\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_3\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_2\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_bitclk_pre\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count_2\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count_1\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count_0\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count_6\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count_5\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count_4\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count_3\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count7_tc\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_bitclk\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_poll_bit1\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_poll_bit2\ : bit;
SIGNAL \MIDI1_UART:BUART:pollingrange\ : bit;
SIGNAL \MIDI1_UART:BUART:pollcount_1\ : bit;
SIGNAL Net_360 : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_8_1\ : bit;
SIGNAL \MIDI1_UART:BUART:pollcount_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_8_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_9\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_10\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_8:g2:a0:a_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODIN9_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_8:g2:a0:a_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODIN9_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_8:g2:a0:b_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_8:g2:a0:b_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_8:g2:a0:s_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_8:g2:a0:s_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_9:g2:a0:newa_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODIN10_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_9:g2:a0:newa_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODIN10_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_9:g2:a0:newb_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_9:g2:a0:newb_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_9:g2:a0:dataa_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_9:g2:a0:dataa_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_9:g2:a0:datab_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_9:g2:a0:datab_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_9:g2:a0:lta_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_9:g2:a0:gta_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_9:g2:a0:lta_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_9:g2:a0:gta_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_10:g2:a0:newa_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODIN11_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_10:g2:a0:newa_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODIN11_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_10:g2:a0:newb_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_10:g2:a0:newb_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_10:g2:a0:dataa_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_10:g2:a0:dataa_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_10:g2:a0:datab_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_10:g2:a0:datab_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_10:g2:a0:lta_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_10:g2:a0:gta_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_10:g2:a0:lta_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:s23Poll:MODULE_10:g2:a0:gta_0\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_status_0\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_markspace_status\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_status_1\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_status_2\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_parity_error_status\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_status_3\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_stop_bit_error\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_status_4\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_status_5\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_status_6\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_356 : bit;
SIGNAL \MIDI1_UART:BUART:rx_markspace_pre\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_parity_error_pre\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_break_status\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:cmp_vv_vv_MODGEN_11\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_address_detected\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_last\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_parity_bit\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:cmp_vv_vv_MODGEN_12\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:newa_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:newa_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:newa_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:newa_3\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODIN12_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:newa_2\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODIN12_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:newa_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODIN12_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:newa_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODIN12_3\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:newb_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:newb_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:newb_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:newb_3\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:newb_2\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:newb_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:newb_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:dataa_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:dataa_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:dataa_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:dataa_3\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:dataa_2\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:dataa_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:dataa_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:datab_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:datab_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:datab_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:datab_3\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:datab_2\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:datab_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:datab_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:lta_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:gta_6\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:lta_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:gta_5\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:lta_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:gta_4\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:lta_3\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:gta_3\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:lta_2\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:gta_2\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:lta_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:gta_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:lta_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_11:g2:a0:gta_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:newa_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:newb_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:dataa_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:datab_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:xeq\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:xneq\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:xlt\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:xlte\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:xgt\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:g1:a0:xgte\ : bit;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:lt\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:MODULE_12:lt\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:eq\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:MODULE_12:eq\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:gt\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:MODULE_12:gt\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:gte\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:MODULE_12:gte\:SIGNAL IS 2;
SIGNAL \MIDI1_UART:BUART:sRX:MODULE_12:lte\ : bit;
ATTRIBUTE port_state_att of \MIDI1_UART:BUART:sRX:MODULE_12:lte\:SIGNAL IS 2;
SIGNAL tmpOE__MIDI_IN1_net_0 : bit;
SIGNAL tmpIO_0__MIDI_IN1_net_0 : bit;
TERMINAL tmpSIOVREF__MIDI_IN1_net_0 : bit;
SIGNAL tmpINTERRUPT_0__MIDI_IN1_net_0 : bit;
SIGNAL tmpOE__MIDI_OUT1_net_0 : bit;
SIGNAL Net_367 : bit;
SIGNAL tmpFB_0__MIDI_OUT1_net_0 : bit;
SIGNAL tmpIO_0__MIDI_OUT1_net_0 : bit;
TERMINAL tmpSIOVREF__MIDI_OUT1_net_0 : bit;
SIGNAL tmpINTERRUPT_0__MIDI_OUT1_net_0 : bit;
SIGNAL \USBMIDI_1:Net_1010\ : bit;
SIGNAL \USBMIDI_1:tmpOE__Dm_net_0\ : bit;
SIGNAL \USBMIDI_1:tmpFB_0__Dm_net_0\ : bit;
TERMINAL \USBMIDI_1:Net_597\ : bit;
SIGNAL \USBMIDI_1:tmpIO_0__Dm_net_0\ : bit;
TERMINAL \USBMIDI_1:tmpSIOVREF__Dm_net_0\ : bit;
SIGNAL \USBMIDI_1:tmpINTERRUPT_0__Dm_net_0\ : bit;
SIGNAL \USBMIDI_1:tmpOE__Dp_net_0\ : bit;
SIGNAL \USBMIDI_1:tmpFB_0__Dp_net_0\ : bit;
TERMINAL \USBMIDI_1:Net_1000\ : bit;
SIGNAL \USBMIDI_1:tmpIO_0__Dp_net_0\ : bit;
TERMINAL \USBMIDI_1:tmpSIOVREF__Dp_net_0\ : bit;
SIGNAL Net_368 : bit;
SIGNAL \USBMIDI_1:Net_1889\ : bit;
SIGNAL \USBMIDI_1:Net_1876\ : bit;
SIGNAL \USBMIDI_1:ep_int_8\ : bit;
SIGNAL \USBMIDI_1:ep_int_7\ : bit;
SIGNAL \USBMIDI_1:ep_int_6\ : bit;
SIGNAL \USBMIDI_1:ep_int_5\ : bit;
SIGNAL \USBMIDI_1:ep_int_4\ : bit;
SIGNAL \USBMIDI_1:ep_int_3\ : bit;
SIGNAL \USBMIDI_1:ep_int_2\ : bit;
SIGNAL \USBMIDI_1:ep_int_1\ : bit;
SIGNAL \USBMIDI_1:ep_int_0\ : bit;
SIGNAL \USBMIDI_1:Net_95\ : bit;
SIGNAL \USBMIDI_1:dma_request_7\ : bit;
SIGNAL \USBMIDI_1:dma_request_6\ : bit;
SIGNAL \USBMIDI_1:dma_request_5\ : bit;
SIGNAL \USBMIDI_1:dma_request_4\ : bit;
SIGNAL \USBMIDI_1:dma_request_3\ : bit;
SIGNAL \USBMIDI_1:dma_request_2\ : bit;
SIGNAL \USBMIDI_1:dma_request_1\ : bit;
SIGNAL \USBMIDI_1:dma_request_0\ : bit;
SIGNAL \USBMIDI_1:dma_terminate\ : bit;
SIGNAL \USBMIDI_1:dma_complete_0\ : bit;
SIGNAL \USBMIDI_1:Net_1922\ : bit;
SIGNAL \USBMIDI_1:dma_complete_1\ : bit;
SIGNAL \USBMIDI_1:Net_1921\ : bit;
SIGNAL \USBMIDI_1:dma_complete_2\ : bit;
SIGNAL \USBMIDI_1:Net_1920\ : bit;
SIGNAL \USBMIDI_1:dma_complete_3\ : bit;
SIGNAL \USBMIDI_1:Net_1919\ : bit;
SIGNAL \USBMIDI_1:dma_complete_4\ : bit;
SIGNAL \USBMIDI_1:Net_1918\ : bit;
SIGNAL \USBMIDI_1:dma_complete_5\ : bit;
SIGNAL \USBMIDI_1:Net_1917\ : bit;
SIGNAL \USBMIDI_1:dma_complete_6\ : bit;
SIGNAL \USBMIDI_1:Net_1916\ : bit;
SIGNAL \USBMIDI_1:dma_complete_7\ : bit;
SIGNAL \USBMIDI_1:Net_1915\ : bit;
SIGNAL Net_612 : bit;
SIGNAL \Sampler_length_sweep:buffer_before\ : bit;
SIGNAL Net_393 : bit;
SIGNAL \Sampler_length_sweep:buffer_after\ : bit;
SIGNAL Length_sweep_clk : bit;
SIGNAL Net_525 : bit;
SIGNAL Net_433 : bit;
SIGNAL \clock_divider_2:counter_10\ : bit;
SIGNAL Net_431 : bit;
SIGNAL \clock_divider_2:counter_9\ : bit;
SIGNAL \clock_divider_2:counter_8\ : bit;
SIGNAL \clock_divider_2:counter_7\ : bit;
SIGNAL \clock_divider_2:counter_6\ : bit;
SIGNAL \clock_divider_2:counter_5\ : bit;
SIGNAL \clock_divider_2:counter_4\ : bit;
SIGNAL \clock_divider_2:counter_3\ : bit;
SIGNAL \clock_divider_2:counter_2\ : bit;
SIGNAL \clock_divider_2:counter_1\ : bit;
SIGNAL \clock_divider_2:counter_0\ : bit;
SIGNAL period_10 : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_10\ : bit;
SIGNAL period_9 : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_9\ : bit;
SIGNAL period_8 : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_8\ : bit;
SIGNAL period_7 : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_7\ : bit;
SIGNAL period_6 : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_6\ : bit;
SIGNAL period_5 : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_5\ : bit;
SIGNAL period_4 : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_4\ : bit;
SIGNAL period_3 : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_3\ : bit;
SIGNAL period_2 : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_2\ : bit;
SIGNAL period_1 : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_1\ : bit;
SIGNAL period_0 : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_0\ : bit;
SIGNAL \clock_divider_2:counter_10\\R\ : bit;
SIGNAL Net_430 : bit;
SIGNAL \clock_divider_2:counter_10\\S\ : bit;
SIGNAL \clock_divider_2:counter_9\\R\ : bit;
SIGNAL \clock_divider_2:counter_9\\S\ : bit;
SIGNAL \clock_divider_2:counter_8\\R\ : bit;
SIGNAL \clock_divider_2:counter_8\\S\ : bit;
SIGNAL \clock_divider_2:counter_7\\R\ : bit;
SIGNAL \clock_divider_2:counter_7\\S\ : bit;
SIGNAL \clock_divider_2:counter_6\\R\ : bit;
SIGNAL \clock_divider_2:counter_6\\S\ : bit;
SIGNAL \clock_divider_2:counter_5\\R\ : bit;
SIGNAL \clock_divider_2:counter_5\\S\ : bit;
SIGNAL \clock_divider_2:counter_4\\R\ : bit;
SIGNAL \clock_divider_2:counter_4\\S\ : bit;
SIGNAL \clock_divider_2:counter_3\\R\ : bit;
SIGNAL \clock_divider_2:counter_3\\S\ : bit;
SIGNAL \clock_divider_2:counter_2\\R\ : bit;
SIGNAL \clock_divider_2:counter_2\\S\ : bit;
SIGNAL \clock_divider_2:counter_1\\R\ : bit;
SIGNAL \clock_divider_2:counter_1\\S\ : bit;
SIGNAL \clock_divider_2:counter_0\\R\ : bit;
SIGNAL \clock_divider_2:counter_0\\S\ : bit;
SIGNAL \clock_divider_2:buffer_before\ : bit;
SIGNAL \clock_divider_2:buffer_after\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_31\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_30\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_29\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_28\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_27\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_26\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_25\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_24\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_23\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_22\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_21\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_20\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_19\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_18\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_17\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_16\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_15\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_14\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_13\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_12\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_11\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_10\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_9\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_8\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_7\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_6\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_5\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_4\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_3\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_2\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_1\ : bit;
SIGNAL \clock_divider_2:MODULE_13:b_0\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_31\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_30\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_29\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_28\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_27\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_26\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_25\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_24\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_23\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_22\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_21\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_20\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_19\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_18\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_17\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_16\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_15\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_14\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_13\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_12\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_11\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_10\ : bit;
SIGNAL \clock_divider_2:MODIN13_10\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_9\ : bit;
SIGNAL \clock_divider_2:MODIN13_9\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_8\ : bit;
SIGNAL \clock_divider_2:MODIN13_8\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_7\ : bit;
SIGNAL \clock_divider_2:MODIN13_7\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_6\ : bit;
SIGNAL \clock_divider_2:MODIN13_6\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_5\ : bit;
SIGNAL \clock_divider_2:MODIN13_5\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_4\ : bit;
SIGNAL \clock_divider_2:MODIN13_4\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_3\ : bit;
SIGNAL \clock_divider_2:MODIN13_3\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_2\ : bit;
SIGNAL \clock_divider_2:MODIN13_2\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_1\ : bit;
SIGNAL \clock_divider_2:MODIN13_1\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:a_0\ : bit;
SIGNAL \clock_divider_2:MODIN13_0\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_31\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_30\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_29\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_28\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_27\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_26\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_25\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_24\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_23\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_22\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_21\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_20\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_19\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_18\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_17\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_16\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_15\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_14\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_13\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_12\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_11\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_10\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_9\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_8\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_7\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_6\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_5\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_4\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_3\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_2\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_1\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:b_0\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_31\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_31\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_30\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_30\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_29\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_29\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_28\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_28\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_27\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_27\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_26\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_26\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_25\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_25\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_24\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_24\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_23\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_23\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_22\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_22\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_21\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_21\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_20\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_20\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_19\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_19\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_18\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_18\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_17\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_17\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_16\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_16\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_15\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_15\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_14\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_14\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_13\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_13\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_12\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_12\ : bit;
SIGNAL \clock_divider_2:sub_vi_vv_MODGEN_13_11\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_11\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_10\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_9\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_8\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_7\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_6\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_5\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_4\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_3\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_2\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_1\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:d_0\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_31\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_30\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_29\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_28\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_27\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_26\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_25\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_24\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:b_24\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_23\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_22\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_21\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_20\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_19\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_18\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_17\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_16\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:b_16\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_15\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_14\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_13\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_12\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_11\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_10\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_9\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:b_8\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_7\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_6\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_5\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_4\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_3\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_2\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL Net_428_6 : bit;
SIGNAL Net_428_5 : bit;
SIGNAL Net_428_4 : bit;
SIGNAL Net_428_3 : bit;
SIGNAL Net_428_2 : bit;
SIGNAL Net_428_1 : bit;
SIGNAL Net_428_0 : bit;
SIGNAL Net_449 : bit;
SIGNAL \Control_Reg_2:clk\ : bit;
SIGNAL \Control_Reg_2:rst\ : bit;
SIGNAL \Control_Reg_2:control_out_7\ : bit;
SIGNAL \Control_Reg_2:control_out_6\ : bit;
SIGNAL \Control_Reg_2:control_out_5\ : bit;
SIGNAL \Control_Reg_2:control_out_4\ : bit;
SIGNAL \Control_Reg_2:control_out_3\ : bit;
SIGNAL \Control_Reg_2:control_out_2\ : bit;
SIGNAL \Control_Reg_2:control_out_1\ : bit;
SIGNAL \Control_Reg_2:control_out_0\ : bit;
SIGNAL \Control_Reg_2:control_7\ : bit;
SIGNAL \Control_Reg_2:control_6\ : bit;
SIGNAL \Control_Reg_2:control_5\ : bit;
SIGNAL \Control_Reg_2:control_4\ : bit;
SIGNAL \Control_Reg_2:control_3\ : bit;
SIGNAL \Control_Reg_2:control_2\ : bit;
SIGNAL \Control_Reg_2:control_1\ : bit;
SIGNAL \Control_Reg_2:control_0\ : bit;
SIGNAL \Control_Reg_3:clk\ : bit;
SIGNAL \Control_Reg_3:rst\ : bit;
SIGNAL \Control_Reg_3:control_bus_7\ : bit;
ATTRIBUTE port_state_att of \Control_Reg_3:control_bus_7\:SIGNAL IS 2;
SIGNAL \Control_Reg_3:control_out_7\ : bit;
SIGNAL \Control_Reg_3:control_bus_6\ : bit;
ATTRIBUTE port_state_att of \Control_Reg_3:control_bus_6\:SIGNAL IS 2;
SIGNAL \Control_Reg_3:control_out_6\ : bit;
SIGNAL \Control_Reg_3:control_bus_5\ : bit;
ATTRIBUTE port_state_att of \Control_Reg_3:control_bus_5\:SIGNAL IS 2;
SIGNAL \Control_Reg_3:control_out_5\ : bit;
SIGNAL \Control_Reg_3:control_bus_4\ : bit;
ATTRIBUTE port_state_att of \Control_Reg_3:control_bus_4\:SIGNAL IS 2;
SIGNAL \Control_Reg_3:control_out_4\ : bit;
SIGNAL \Control_Reg_3:control_bus_3\ : bit;
ATTRIBUTE port_state_att of \Control_Reg_3:control_bus_3\:SIGNAL IS 2;
SIGNAL \Control_Reg_3:control_out_3\ : bit;
SIGNAL \Control_Reg_3:control_out_2\ : bit;
SIGNAL \Control_Reg_3:control_out_1\ : bit;
SIGNAL \Control_Reg_3:control_out_0\ : bit;
SIGNAL \Control_Reg_3:control_7\ : bit;
SIGNAL \Control_Reg_3:control_6\ : bit;
SIGNAL \Control_Reg_3:control_5\ : bit;
SIGNAL \Control_Reg_3:control_4\ : bit;
SIGNAL \Control_Reg_3:control_3\ : bit;
SIGNAL \Control_Reg_3:control_2\ : bit;
SIGNAL \Control_Reg_3:control_1\ : bit;
SIGNAL \Control_Reg_3:control_0\ : bit;
SIGNAL tmpOE__Pin_3_net_0 : bit;
SIGNAL tmpFB_0__Pin_3_net_0 : bit;
SIGNAL tmpIO_0__Pin_3_net_0 : bit;
TERMINAL tmpSIOVREF__Pin_3_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Pin_3_net_0 : bit;
SIGNAL \Control_Reg_4:clk\ : bit;
SIGNAL \Control_Reg_4:rst\ : bit;
SIGNAL \Control_Reg_4:control_bus_7\ : bit;
ATTRIBUTE port_state_att of \Control_Reg_4:control_bus_7\:SIGNAL IS 2;
SIGNAL \Control_Reg_4:control_out_7\ : bit;
SIGNAL \Control_Reg_4:control_bus_6\ : bit;
ATTRIBUTE port_state_att of \Control_Reg_4:control_bus_6\:SIGNAL IS 2;
SIGNAL \Control_Reg_4:control_out_6\ : bit;
SIGNAL \Control_Reg_4:control_bus_5\ : bit;
ATTRIBUTE port_state_att of \Control_Reg_4:control_bus_5\:SIGNAL IS 2;
SIGNAL \Control_Reg_4:control_out_5\ : bit;
SIGNAL \Control_Reg_4:control_bus_4\ : bit;
ATTRIBUTE port_state_att of \Control_Reg_4:control_bus_4\:SIGNAL IS 2;
SIGNAL \Control_Reg_4:control_out_4\ : bit;
SIGNAL \Control_Reg_4:control_bus_3\ : bit;
ATTRIBUTE port_state_att of \Control_Reg_4:control_bus_3\:SIGNAL IS 2;
SIGNAL \Control_Reg_4:control_out_3\ : bit;
SIGNAL Net_571_2 : bit;
SIGNAL \Control_Reg_4:control_out_2\ : bit;
SIGNAL Net_571_1 : bit;
SIGNAL \Control_Reg_4:control_out_1\ : bit;
SIGNAL Net_571_0 : bit;
SIGNAL \Control_Reg_4:control_out_0\ : bit;
SIGNAL \Control_Reg_4:control_7\ : bit;
SIGNAL \Control_Reg_4:control_6\ : bit;
SIGNAL \Control_Reg_4:control_5\ : bit;
SIGNAL \Control_Reg_4:control_4\ : bit;
SIGNAL \Control_Reg_4:control_3\ : bit;
SIGNAL \Control_Reg_4:control_2\ : bit;
SIGNAL \Control_Reg_4:control_1\ : bit;
SIGNAL \Control_Reg_4:control_0\ : bit;
SIGNAL tmpOE__Pin_2_net_0 : bit;
SIGNAL Net_529 : bit;
SIGNAL tmpFB_0__Pin_2_net_0 : bit;
SIGNAL tmpIO_0__Pin_2_net_0 : bit;
TERMINAL tmpSIOVREF__Pin_2_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Pin_2_net_0 : bit;
SIGNAL period_11 : bit;
SIGNAL \component01_1:period_shift_11\ : bit;
SIGNAL \component01_1:shr_vv_vv_MODGEN_7_11\ : bit;
SIGNAL \component01_1:period_shift_10\ : bit;
SIGNAL \component01_1:shr_vv_vv_MODGEN_7_10\ : bit;
SIGNAL \component01_1:period_shift_9\ : bit;
SIGNAL \component01_1:shr_vv_vv_MODGEN_7_9\ : bit;
SIGNAL \component01_1:period_shift_8\ : bit;
SIGNAL \component01_1:shr_vv_vv_MODGEN_7_8\ : bit;
SIGNAL \component01_1:period_shift_7\ : bit;
SIGNAL \component01_1:shr_vv_vv_MODGEN_7_7\ : bit;
SIGNAL \component01_1:period_shift_6\ : bit;
SIGNAL \component01_1:shr_vv_vv_MODGEN_7_6\ : bit;
SIGNAL \component01_1:period_shift_5\ : bit;
SIGNAL \component01_1:shr_vv_vv_MODGEN_7_5\ : bit;
SIGNAL \component01_1:period_shift_4\ : bit;
SIGNAL \component01_1:shr_vv_vv_MODGEN_7_4\ : bit;
SIGNAL \component01_1:period_shift_3\ : bit;
SIGNAL \component01_1:shr_vv_vv_MODGEN_7_3\ : bit;
SIGNAL \component01_1:period_shift_2\ : bit;
SIGNAL \component01_1:shr_vv_vv_MODGEN_7_2\ : bit;
SIGNAL \component01_1:period_shift_1\ : bit;
SIGNAL \component01_1:shr_vv_vv_MODGEN_7_1\ : bit;
SIGNAL \component01_1:period_shift_0\ : bit;
SIGNAL \component01_1:shr_vv_vv_MODGEN_7_0\ : bit;
SIGNAL period_shift_11 : bit;
SIGNAL period_shift_10 : bit;
SIGNAL period_shift_9 : bit;
SIGNAL period_shift_8 : bit;
SIGNAL period_shift_7 : bit;
SIGNAL period_shift_6 : bit;
SIGNAL period_shift_5 : bit;
SIGNAL period_shift_4 : bit;
SIGNAL period_shift_3 : bit;
SIGNAL period_shift_2 : bit;
SIGNAL period_shift_1 : bit;
SIGNAL period_shift_0 : bit;
SIGNAL \component01_1:MODULE_7:ax_11\ : bit;
SIGNAL \component01_1:MODIN7_11\ : bit;
SIGNAL \component01_1:MODULE_7:ax_10\ : bit;
SIGNAL \component01_1:MODIN7_10\ : bit;
SIGNAL \component01_1:MODULE_7:ax_9\ : bit;
SIGNAL \component01_1:MODIN7_9\ : bit;
SIGNAL \component01_1:MODULE_7:ax_8\ : bit;
SIGNAL \component01_1:MODIN7_8\ : bit;
SIGNAL \component01_1:MODULE_7:ax_7\ : bit;
SIGNAL \component01_1:MODIN7_7\ : bit;
SIGNAL \component01_1:MODULE_7:ax_6\ : bit;
SIGNAL \component01_1:MODIN7_6\ : bit;
SIGNAL \component01_1:MODULE_7:ax_5\ : bit;
SIGNAL \component01_1:MODIN7_5\ : bit;
SIGNAL \component01_1:MODULE_7:ax_4\ : bit;
SIGNAL \component01_1:MODIN7_4\ : bit;
SIGNAL \component01_1:MODULE_7:ax_3\ : bit;
SIGNAL \component01_1:MODIN7_3\ : bit;
SIGNAL \component01_1:MODULE_7:ax_2\ : bit;
SIGNAL \component01_1:MODIN7_2\ : bit;
SIGNAL \component01_1:MODULE_7:ax_1\ : bit;
SIGNAL \component01_1:MODIN7_1\ : bit;
SIGNAL \component01_1:MODULE_7:ax_0\ : bit;
SIGNAL \component01_1:MODIN7_0\ : bit;
SIGNAL \component01_1:MODULE_7:aa_11\ : bit;
SIGNAL \component01_1:MODULE_7:aa_10\ : bit;
SIGNAL \component01_1:MODULE_7:aa_9\ : bit;
SIGNAL \component01_1:MODULE_7:aa_8\ : bit;
SIGNAL \component01_1:MODULE_7:aa_7\ : bit;
SIGNAL \component01_1:MODULE_7:aa_6\ : bit;
SIGNAL \component01_1:MODULE_7:aa_5\ : bit;
SIGNAL \component01_1:MODULE_7:aa_4\ : bit;
SIGNAL \component01_1:MODULE_7:aa_3\ : bit;
SIGNAL \component01_1:MODULE_7:aa_2\ : bit;
SIGNAL \component01_1:MODULE_7:aa_1\ : bit;
SIGNAL \component01_1:MODULE_7:aa_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:widthv_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:widthv_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:widthv_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:a_2\ : bit;
SIGNAL \component01_1:MODIN8_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:a_1\ : bit;
SIGNAL \component01_1:MODIN8_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:a_0\ : bit;
SIGNAL \component01_1:MODIN8_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:b_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:b_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:b_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:xnor_array_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:xnor_array_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:xnor_array_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:aeqb_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:eq_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:eq_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:eq_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:eqi_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:aeqb_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:albi_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:agbi_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:lt_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:gt_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:lt_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:gt_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:lt_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:gt_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:lti_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:gti_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:albi_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:agbi_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:aeb\ : bit;
ATTRIBUTE port_state_att of \component01_1:MODULE_7:g3:u0:g0:u0:aeb\:SIGNAL IS 2;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:aneb\ : bit;
ATTRIBUTE port_state_att of \component01_1:MODULE_7:g3:u0:g0:u0:aneb\:SIGNAL IS 2;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:alb\ : bit;
ATTRIBUTE port_state_att of \component01_1:MODULE_7:g3:u0:g0:u0:alb\:SIGNAL IS 2;
SIGNAL \component01_1:MODULE_7:g3:u0:def\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:agb\ : bit;
ATTRIBUTE port_state_att of \component01_1:MODULE_7:g3:u0:g0:u0:agb\:SIGNAL IS 2;
SIGNAL \component01_1:MODULE_7:g3:u0:g0:u0:ageb\ : bit;
ATTRIBUTE port_state_att of \component01_1:MODULE_7:g3:u0:g0:u0:ageb\:SIGNAL IS 2;
SIGNAL \component01_1:MODULE_7:g3:u0:ok\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_3\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_4\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_5\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_6\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_7\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_8\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_9\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_10\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_11\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_12\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_13\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_14\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_15\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_16\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_17\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_18\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_19\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_20\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_21\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_22\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_23\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_24\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_25\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_26\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_27\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_28\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_29\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_30\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_31\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_32\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_33\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_34\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_35\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_36\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_37\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_38\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_39\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_40\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_41\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_42\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_43\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_44\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_45\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_46\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_47\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_48\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_49\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_50\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_51\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_52\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_53\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_54\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_55\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_56\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_57\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_58\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_59\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_60\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_61\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_62\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_63\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_64\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_65\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_66\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_67\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_68\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_69\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_70\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_71\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_72\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_73\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_74\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_75\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_76\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_77\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_78\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_79\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_80\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_81\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_82\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_83\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_84\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_85\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_86\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_87\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_88\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_89\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_90\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_91\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_92\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_93\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_94\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_95\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_96\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_97\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_98\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_99\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_100\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_101\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_102\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_103\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_104\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_105\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_106\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_107\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_108\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_109\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_110\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_111\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_112\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_113\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_114\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_115\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_116\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_117\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_118\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_119\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_120\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_121\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_122\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_123\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_124\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_125\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_126\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_127\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_128\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_129\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_130\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_131\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_132\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_133\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_134\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_135\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_136\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_137\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_138\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_139\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_140\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_141\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_142\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:barrel_143\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:u0:tmp_11\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:u0:tmp_10\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:u0:tmp_9\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:u0:tmp_8\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:u0:tmp_7\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:u0:tmp_6\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:u0:tmp_5\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:u0:tmp_4\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:u0:tmp_3\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:u0:tmp_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:u0:tmp_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:u0:tmp_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:output_11\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:output_10\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:output_9\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:output_8\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:output_7\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:output_6\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:output_5\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:output_4\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:output_3\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:output_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:output_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:output_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:distexp_11\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:distexp_10\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:distexp_9\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:distexp_8\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:distexp_7\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:distexp_6\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:distexp_5\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:distexp_4\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:distexp_3\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:distexp_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:distexp_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:distexp_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:left_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:right_11\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:left_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:right_10\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:left_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:right_9\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:left_3\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:right_8\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:left_4\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:right_7\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:left_5\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:right_6\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:left_6\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:right_5\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:left_7\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:right_4\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:left_8\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:right_3\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:left_9\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:right_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:left_10\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:right_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:left_11\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:right_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:mask_11\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:mask_10\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:mask_9\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:mask_8\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:mask_7\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:mask_6\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:mask_5\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:mask_4\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:mask_3\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:mask_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:mask_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:mask_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:loutput_11\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:loutput_10\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:loutput_9\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:loutput_8\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:loutput_7\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:loutput_6\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:loutput_5\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:loutput_4\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:loutput_3\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:loutput_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:loutput_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:loutput_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:ov_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:ov_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:ov_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:ov_3\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:ov_4\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:ov_5\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:ov_6\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:ov_7\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:ov_8\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:ov_9\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:ov_10\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:ov_11\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:loverflow\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:un_0\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:un_1\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:un_2\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:un_3\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:un_4\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:un_5\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:un_6\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:un_7\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:un_8\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:un_9\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:un_10\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:un_11\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:lunderflow\ : bit;
SIGNAL \component01_1:MODULE_7:g3:u0:overflow\ : bit;
ATTRIBUTE port_state_att of \component01_1:MODULE_7:g3:u0:overflow\:SIGNAL IS 2;
SIGNAL \component01_1:MODULE_7:g3:u0:underflow\ : bit;
ATTRIBUTE port_state_att of \component01_1:MODULE_7:g3:u0:underflow\:SIGNAL IS 2;
SIGNAL \Status_Reg_1:status_7\ : bit;
SIGNAL \Status_Reg_1:status_6\ : bit;
SIGNAL \Status_Reg_1:status_5\ : bit;
SIGNAL \Status_Reg_1:status_4\ : bit;
SIGNAL \Status_Reg_1:status_3\ : bit;
SIGNAL \Status_Reg_1:status_2\ : bit;
SIGNAL \Status_Reg_1:status_1\ : bit;
SIGNAL \Status_Reg_1:status_0\ : bit;
SIGNAL \rectangle_generator:Net_350\ : bit;
SIGNAL \rectangle_generator:Net_1\ : bit;
SIGNAL \rectangle_generator:Net_2\ : bit;
SIGNAL \rectangle_generator:bSR:ctrl_clk_enable\ : bit;
SIGNAL \rectangle_generator:bSR:control_0\ : bit;
SIGNAL \rectangle_generator:bSR:ctrl_f0_full\ : bit;
SIGNAL \rectangle_generator:bSR:control_1\ : bit;
SIGNAL \rectangle_generator:bSR:clk_fin\ : bit;
SIGNAL \rectangle_generator:bSR:control_7\ : bit;
SIGNAL \rectangle_generator:bSR:control_6\ : bit;
SIGNAL \rectangle_generator:bSR:control_5\ : bit;
SIGNAL \rectangle_generator:bSR:control_4\ : bit;
SIGNAL \rectangle_generator:bSR:control_3\ : bit;
SIGNAL \rectangle_generator:bSR:control_2\ : bit;
SIGNAL \rectangle_generator:bSR:status_2\ : bit;
SIGNAL Net_526 : bit;
SIGNAL \rectangle_generator:bSR:status_0\ : bit;
SIGNAL \rectangle_generator:bSR:final_load\ : bit;
SIGNAL \rectangle_generator:bSR:status_1\ : bit;
SIGNAL \rectangle_generator:bSR:status_3\ : bit;
SIGNAL \rectangle_generator:bSR:f0_blk_stat_final\ : bit;
SIGNAL \rectangle_generator:bSR:status_4\ : bit;
SIGNAL \rectangle_generator:bSR:f0_bus_stat_final\ : bit;
SIGNAL \rectangle_generator:bSR:status_5\ : bit;
SIGNAL \rectangle_generator:bSR:f1_blk_stat_final\ : bit;
SIGNAL \rectangle_generator:bSR:status_6\ : bit;
SIGNAL \rectangle_generator:bSR:f1_bus_stat_final\ : bit;
SIGNAL Net_528 : bit;
SIGNAL \rectangle_generator:bSR:load_reg\ : bit;
SIGNAL \rectangle_generator:bSR:f0_blk_stat_16_1\ : bit;
SIGNAL \rectangle_generator:bSR:f0_bus_stat_16_1\ : bit;
SIGNAL \rectangle_generator:bSR:f1_blk_stat_16_1\ : bit;
SIGNAL \rectangle_generator:bSR:f1_bus_stat_16_1\ : bit;
SIGNAL \rectangle_generator:bSR:store\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ce0_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ce0_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cl0_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:cl0_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:z0_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:z0_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ff0_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ff0_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ce1_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ce1_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cl1_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:cl1_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:z1_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:z1_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ff1_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ff1_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ov_msb_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ov_msb_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:co_msb_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:co_msb_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cmsb_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:cmsb_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:so_16_0\ : bit;
SIGNAL \rectangle_generator:bSR:f0_bus_stat_16_0\ : bit;
SIGNAL \rectangle_generator:bSR:f0_blk_stat_16_0\ : bit;
SIGNAL \rectangle_generator:bSR:f1_bus_stat_16_0\ : bit;
SIGNAL \rectangle_generator:bSR:f1_blk_stat_16_0\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ce0_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ce0_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cl0_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:cl0_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:z0_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:z0_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ff0_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ff0_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ce1_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ce1_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cl1_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:cl1_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:z1_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:z1_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ff1_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ff1_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ov_msb_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ov_msb_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:co_msb_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:co_msb_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cmsb_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:cmsb_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:so_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:so_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:f0_bus_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:f0_bus_stat_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:f0_blk_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:f0_blk_stat_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:f1_bus_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:f1_bus_stat_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:f1_blk_stat_reg_0\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:f1_blk_stat_reg_0\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:carry\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:sh_right\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:sh_left\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:msb\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_eq_1\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_eq_0\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_lt_1\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_lt_0\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_zero_1\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_zero_0\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_ff_1\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_ff_0\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cap_1\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cap_0\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cfb\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ce0_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ce0_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cl0_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:cl0_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:z0_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:z0_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ff0_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ff0_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ce1_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ce1_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cl1_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:cl1_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:z1_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:z1_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ff1_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ff1_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ov_msb_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ov_msb_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:co_msb_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:co_msb_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cmsb_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:cmsb_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:so_16_1\ : bit;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ce0_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ce0_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cl0_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:cl0_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:z0_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:z0_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ff0_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ff0_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ce1_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ce1_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cl1_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:cl1_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:z1_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:z1_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ff1_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ff1_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:ov_msb_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:ov_msb_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:co_msb_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:co_msb_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:cmsb_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:cmsb_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:so_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:so_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:f0_bus_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:f0_bus_stat_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:f0_blk_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:f0_blk_stat_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:f1_bus_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:f1_bus_stat_reg_1\:SIGNAL IS 2;
SIGNAL \rectangle_generator:bSR:sC16:BShiftRegDp:f1_blk_stat_reg_1\ : bit;
ATTRIBUTE port_state_att of \rectangle_generator:bSR:sC16:BShiftRegDp:f1_blk_stat_reg_1\:SIGNAL IS 2;
SIGNAL \Length_Counter:CounterUDB:prevCapture\\D\ : bit;
SIGNAL \Length_Counter:CounterUDB:disable_run_i\\D\ : bit;
SIGNAL \Length_Counter:CounterUDB:overflow_reg_i\\D\ : bit;
SIGNAL \Length_Counter:CounterUDB:underflow_reg_i\\D\ : bit;
SIGNAL \Length_Counter:CounterUDB:tc_reg_i\\D\ : bit;
SIGNAL \Length_Counter:CounterUDB:prevCompare\\D\ : bit;
SIGNAL \Length_Counter:CounterUDB:cmp_out_reg_i\\D\ : bit;
SIGNAL \Length_Counter:CounterUDB:count_stored_i\\D\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:prevCapture\\D\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:disable_run_i\\D\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:overflow_reg_i\\D\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:underflow_reg_i\\D\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:tc_reg_i\\D\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:prevCompare\\D\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:cmp_out_reg_i\\D\ : bit;
SIGNAL \Length_Counter_1:CounterUDB:count_stored_i\\D\ : bit;
SIGNAL Tri_Data_3D : bit;
SIGNAL Tri_Data_2D : bit;
SIGNAL Tri_Data_1D : bit;
SIGNAL Tri_Data_0D : bit;
SIGNAL \Triangle_Gen_1:mode\\D\ : bit;
SIGNAL \Linear_Counter_1:counter_6\\D\ : bit;
SIGNAL \Linear_Counter_1:halt_flag\\D\ : bit;
SIGNAL \Linear_Counter_1:counter_5\\D\ : bit;
SIGNAL \Linear_Counter_1:counter_4\\D\ : bit;
SIGNAL \Linear_Counter_1:counter_3\\D\ : bit;
SIGNAL \Linear_Counter_1:counter_2\\D\ : bit;
SIGNAL \Linear_Counter_1:counter_1\\D\ : bit;
SIGNAL \Linear_Counter_1:counter_0\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:reset_reg\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:txn\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_state_1\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_state_0\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_state_2\\D\ : bit;
SIGNAL Net_357D : bit;
SIGNAL \MIDI1_UART:BUART:tx_bitclk\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_ctrl_mark_last\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_mark\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:tx_parity_bit\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_1\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_0\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_3\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_2\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_bitclk\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:pollcount_1\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:pollcount_0\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_break_status\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_address_detected\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_last\\D\ : bit;
SIGNAL \MIDI1_UART:BUART:rx_parity_bit\\D\ : bit;
SIGNAL \Sampler_length_sweep:buffer_before\\D\ : bit;
SIGNAL \Sampler_length_sweep:buffer_after\\D\ : bit;
SIGNAL \clock_divider_2:counter_10\\D\ : bit;
SIGNAL \clock_divider_2:counter_9\\D\ : bit;
SIGNAL \clock_divider_2:counter_8\\D\ : bit;
SIGNAL \clock_divider_2:counter_7\\D\ : bit;
SIGNAL \clock_divider_2:counter_6\\D\ : bit;
SIGNAL \clock_divider_2:counter_5\\D\ : bit;
SIGNAL \clock_divider_2:counter_4\\D\ : bit;
SIGNAL \clock_divider_2:counter_3\\D\ : bit;
SIGNAL \clock_divider_2:counter_2\\D\ : bit;
SIGNAL \clock_divider_2:counter_1\\D\ : bit;
SIGNAL \clock_divider_2:counter_0\\D\ : bit;
SIGNAL \clock_divider_2:buffer_before\\D\ : bit;
SIGNAL \clock_divider_2:buffer_after\\D\ : bit;
SIGNAL \rectangle_generator:bSR:load_reg\\D\ : bit;
BEGIN

one <=  ('1') ;

zero <=  ('0') ;

\LFSR:enable_final\ <= ((\LFSR:control_0\ and Net_1));

\Length_Counter:CounterUDB:disable_run_i\\D\ <= ((not \Length_Counter:CounterUDB:underflow_reg_i\ and \Length_Counter:CounterUDB:reload\)
	OR \Length_Counter:CounterUDB:disable_run_i\);

\Length_Counter:CounterUDB:status_0\ <= ((not \Length_Counter:CounterUDB:cmp_less\ and not \Length_Counter:CounterUDB:cmp_equal\ and not \Length_Counter:CounterUDB:prevCompare\));

\Length_Counter:CounterUDB:underflow_status\ <= ((not \Length_Counter:CounterUDB:underflow_reg_i\ and \Length_Counter:CounterUDB:reload\));

\Length_Counter:CounterUDB:cmp_out_i\ <= ((not \Length_Counter:CounterUDB:cmp_less\ and not \Length_Counter:CounterUDB:cmp_equal\));

\Length_Counter:CounterUDB:count_enable\ <= ((not \Length_Counter:CounterUDB:disable_run_i\ and not \Length_Counter:CounterUDB:count_stored_i\ and \Length_Counter:CounterUDB:control_7\ and Length_Clk));

\Length_Counter_1:CounterUDB:disable_run_i\\D\ <= ((not \Length_Counter_1:CounterUDB:underflow_reg_i\ and \Length_Counter_1:CounterUDB:reload\)
	OR \Length_Counter_1:CounterUDB:disable_run_i\);

\Length_Counter_1:CounterUDB:status_0\ <= ((not \Length_Counter_1:CounterUDB:cmp_less\ and not \Length_Counter_1:CounterUDB:cmp_equal\ and not \Length_Counter_1:CounterUDB:prevCompare\));

\Length_Counter_1:CounterUDB:underflow_status\ <= ((not \Length_Counter_1:CounterUDB:underflow_reg_i\ and \Length_Counter_1:CounterUDB:reload\));

\Length_Counter_1:CounterUDB:cmp_out_i\ <= ((not \Length_Counter_1:CounterUDB:cmp_less\ and not \Length_Counter_1:CounterUDB:cmp_equal\));

\Length_Counter_1:CounterUDB:count_enable\ <= ((not \Length_Counter_1:CounterUDB:disable_run_i\ and not \Length_Counter_1:CounterUDB:count_stored_i\ and Length_Clk and \Length_Counter_1:CounterUDB:control_7\));

audio_out_7 <= ((Net_62 and Net_11 and oData_3));

audio_out_6 <= ((Net_62 and Net_11 and oData_2));

audio_out_5 <= ((Net_62 and Net_11 and oData_1));

audio_out_4 <= ((Net_62 and Net_11 and oData_0));

Tri_Data_3D <= ((Tri_Data_3 and Tri_Data_2 and \Triangle_Gen_1:mode\)
	OR (not Tri_Data_0 and not \Triangle_Gen_1:mode\ and Tri_Data_3)
	OR (not Tri_Data_1 and Tri_Data_3 and Tri_Data_0)
	OR (not Tri_Data_2 and Tri_Data_3 and Tri_Data_1)
	OR (not \Triangle_Gen_1:MODULE_3:g2:a0:gta_0\ and Tri_Data_3 and \Triangle_Gen_1:mode\)
	OR (not \Triangle_Gen_1:mode\ and not \Triangle_Gen_1:MODULE_1:g2:a0:lta_0\ and Tri_Data_3)
	OR (not Tri_Data_3 and not Tri_Data_2 and not Tri_Data_1 and not Tri_Data_0 and Net_262 and \Triangle_Gen_1:mode\ and \Triangle_Gen_1:MODULE_3:g2:a0:gta_0\)
	OR (not Tri_Data_3 and not \Triangle_Gen_1:mode\ and Net_262 and Tri_Data_2 and Tri_Data_1 and Tri_Data_0 and \Triangle_Gen_1:MODULE_1:g2:a0:lta_0\)
	OR (not Net_262 and Tri_Data_3));

Tri_Data_2D <= ((Tri_Data_2 and Tri_Data_1 and \Triangle_Gen_1:mode\)
	OR (not Tri_Data_0 and not \Triangle_Gen_1:mode\ and Tri_Data_2)
	OR (not Tri_Data_1 and Tri_Data_2 and Tri_Data_0)
	OR (not \Triangle_Gen_1:MODULE_3:g2:a0:gta_0\ and Tri_Data_2 and \Triangle_Gen_1:mode\)
	OR (not \Triangle_Gen_1:mode\ and not \Triangle_Gen_1:MODULE_1:g2:a0:lta_0\ and Tri_Data_2)
	OR (not Tri_Data_2 and not Tri_Data_1 and not Tri_Data_0 and Net_262 and \Triangle_Gen_1:mode\ and \Triangle_Gen_1:MODULE_3:g2:a0:gta_0\)
	OR (not Tri_Data_2 and not \Triangle_Gen_1:mode\ and Net_262 and Tri_Data_1 and Tri_Data_0 and \Triangle_Gen_1:MODULE_1:g2:a0:lta_0\)
	OR (not Net_262 and Tri_Data_2));

Tri_Data_1D <= ((not \Triangle_Gen_1:MODULE_3:g2:a0:gta_0\ and Tri_Data_1 and \Triangle_Gen_1:mode\)
	OR (not \Triangle_Gen_1:mode\ and not \Triangle_Gen_1:MODULE_1:g2:a0:lta_0\ and Tri_Data_1)
	OR (not Tri_Data_1 and not Tri_Data_0 and Net_262 and \Triangle_Gen_1:mode\ and \Triangle_Gen_1:MODULE_3:g2:a0:gta_0\)
	OR (not Tri_Data_1 and not \Triangle_Gen_1:mode\ and Net_262 and Tri_Data_0 and \Triangle_Gen_1:MODULE_1:g2:a0:lta_0\)
	OR (not Tri_Data_0 and not \Triangle_Gen_1:mode\ and Tri_Data_1)
	OR (Tri_Data_1 and Tri_Data_0 and \Triangle_Gen_1:mode\)
	OR (not Net_262 and Tri_Data_1));

Tri_Data_0D <= ((not Tri_Data_0 and Net_262 and \Triangle_Gen_1:mode\ and \Triangle_Gen_1:MODULE_3:g2:a0:gta_0\)
	OR (not Tri_Data_0 and not \Triangle_Gen_1:mode\ and Net_262 and \Triangle_Gen_1:MODULE_1:g2:a0:lta_0\)
	OR (not \Triangle_Gen_1:MODULE_3:g2:a0:gta_0\ and Tri_Data_0 and \Triangle_Gen_1:mode\)
	OR (not \Triangle_Gen_1:mode\ and not \Triangle_Gen_1:MODULE_1:g2:a0:lta_0\ and Tri_Data_0)
	OR (not Net_262 and Tri_Data_0));

\Triangle_Gen_1:mode\\D\ <= ((not \Triangle_Gen_1:mode\ and not \Triangle_Gen_1:MODULE_1:g2:a0:lta_0\ and Net_262)
	OR (\Triangle_Gen_1:mode\ and \Triangle_Gen_1:MODULE_3:g2:a0:gta_0\)
	OR (not Net_262 and \Triangle_Gen_1:mode\));

\Triangle_Gen_1:MODULE_1:g2:a0:lta_0\ <= (not Tri_Data_0
	OR not Tri_Data_1
	OR not Tri_Data_2
	OR not Tri_Data_3);

\Triangle_Gen_1:MODULE_3:g2:a0:gta_0\ <= (Tri_Data_0
	OR Tri_Data_1
	OR Tri_Data_2
	OR Tri_Data_3);

\Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_8\ <= ((not Tri_Data_3 and not Tri_Data_2 and not Tri_Data_1 and not Tri_Data_0));

\Linear_Counter_1:counter_6\\D\ <= ((not \Linear_Counter_1:counter_6\ and not \Linear_Counter_1:halt_flag\ and not \Linear_Counter_1:counter_5\ and not \Linear_Counter_1:counter_4\ and not \Linear_Counter_1:counter_3\ and not \Linear_Counter_1:counter_2\ and not \Linear_Counter_1:counter_1\ and not \Linear_Counter_1:counter_0\ and \Linear_Counter_1:MODULE_5:g2:a0:gta_0\)
	OR (\Linear_Counter_1:halt_flag\ and duration_6)
	OR (not \Linear_Counter_1:halt_flag\ and not \Linear_Counter_1:MODULE_5:g2:a0:gta_0\ and \Linear_Counter_1:counter_6\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_6\ and \Linear_Counter_1:counter_0\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_6\ and \Linear_Counter_1:counter_1\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_6\ and \Linear_Counter_1:counter_2\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_6\ and \Linear_Counter_1:counter_3\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_6\ and \Linear_Counter_1:counter_4\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_6\ and \Linear_Counter_1:counter_5\));

\Linear_Counter_1:counter_5\\D\ <= ((not \Linear_Counter_1:halt_flag\ and not \Linear_Counter_1:counter_5\ and not \Linear_Counter_1:counter_4\ and not \Linear_Counter_1:counter_3\ and not \Linear_Counter_1:counter_2\ and not \Linear_Counter_1:counter_1\ and not \Linear_Counter_1:counter_0\ and \Linear_Counter_1:MODULE_5:g2:a0:gta_0\)
	OR (\Linear_Counter_1:halt_flag\ and duration_5)
	OR (not \Linear_Counter_1:halt_flag\ and not \Linear_Counter_1:MODULE_5:g2:a0:gta_0\ and \Linear_Counter_1:counter_5\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_5\ and \Linear_Counter_1:counter_0\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_5\ and \Linear_Counter_1:counter_1\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_5\ and \Linear_Counter_1:counter_2\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_5\ and \Linear_Counter_1:counter_3\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_5\ and \Linear_Counter_1:counter_4\));

\Linear_Counter_1:counter_4\\D\ <= ((not \Linear_Counter_1:halt_flag\ and not \Linear_Counter_1:counter_4\ and not \Linear_Counter_1:counter_3\ and not \Linear_Counter_1:counter_2\ and not \Linear_Counter_1:counter_1\ and not \Linear_Counter_1:counter_0\ and \Linear_Counter_1:MODULE_5:g2:a0:gta_0\)
	OR (\Linear_Counter_1:halt_flag\ and duration_4)
	OR (not \Linear_Counter_1:halt_flag\ and not \Linear_Counter_1:MODULE_5:g2:a0:gta_0\ and \Linear_Counter_1:counter_4\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_4\ and \Linear_Counter_1:counter_0\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_4\ and \Linear_Counter_1:counter_1\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_4\ and \Linear_Counter_1:counter_2\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_4\ and \Linear_Counter_1:counter_3\));

\Linear_Counter_1:counter_3\\D\ <= ((not \Linear_Counter_1:halt_flag\ and not \Linear_Counter_1:counter_3\ and not \Linear_Counter_1:counter_2\ and not \Linear_Counter_1:counter_1\ and not \Linear_Counter_1:counter_0\ and \Linear_Counter_1:MODULE_5:g2:a0:gta_0\)
	OR (\Linear_Counter_1:halt_flag\ and duration_3)
	OR (not \Linear_Counter_1:halt_flag\ and not \Linear_Counter_1:MODULE_5:g2:a0:gta_0\ and \Linear_Counter_1:counter_3\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_3\ and \Linear_Counter_1:counter_0\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_3\ and \Linear_Counter_1:counter_1\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_3\ and \Linear_Counter_1:counter_2\));

\Linear_Counter_1:counter_2\\D\ <= ((not \Linear_Counter_1:halt_flag\ and not \Linear_Counter_1:counter_2\ and not \Linear_Counter_1:counter_1\ and not \Linear_Counter_1:counter_0\ and \Linear_Counter_1:MODULE_5:g2:a0:gta_0\)
	OR (\Linear_Counter_1:halt_flag\ and duration_2)
	OR (not \Linear_Counter_1:halt_flag\ and not \Linear_Counter_1:MODULE_5:g2:a0:gta_0\ and \Linear_Counter_1:counter_2\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_2\ and \Linear_Counter_1:counter_0\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_2\ and \Linear_Counter_1:counter_1\));

\Linear_Counter_1:counter_1\\D\ <= ((not \Linear_Counter_1:halt_flag\ and not \Linear_Counter_1:counter_1\ and not \Linear_Counter_1:counter_0\ and \Linear_Counter_1:MODULE_5:g2:a0:gta_0\)
	OR (not \Linear_Counter_1:halt_flag\ and not \Linear_Counter_1:MODULE_5:g2:a0:gta_0\ and \Linear_Counter_1:counter_1\)
	OR (not \Linear_Counter_1:halt_flag\ and \Linear_Counter_1:counter_1\ and \Linear_Counter_1:counter_0\)
	OR (\Linear_Counter_1:halt_flag\ and duration_1));

\Linear_Counter_1:counter_0\\D\ <= ((not \Linear_Counter_1:halt_flag\ and not \Linear_Counter_1:MODULE_5:g2:a0:gta_0\ and \Linear_Counter_1:counter_0\)
	OR (not \Linear_Counter_1:halt_flag\ and not \Linear_Counter_1:counter_0\ and \Linear_Counter_1:MODULE_5:g2:a0:gta_0\)
	OR (\Linear_Counter_1:halt_flag\ and duration_0));

\Linear_Counter_1:halt_flag\\D\ <= ((\Linear_Counter_1:halt_flag\ and Net_329));

\Linear_Counter_1:MODULE_5:g2:a0:gta_0\ <= (\Linear_Counter_1:counter_0\
	OR \Linear_Counter_1:counter_1\
	OR \Linear_Counter_1:counter_2\
	OR \Linear_Counter_1:counter_3\
	OR \Linear_Counter_1:counter_4\
	OR \Linear_Counter_1:counter_5\
	OR \Linear_Counter_1:counter_6\);

\Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_8\ <= ((not \Linear_Counter_1:counter_6\ and not \Linear_Counter_1:counter_5\ and not \Linear_Counter_1:counter_4\ and not \Linear_Counter_1:counter_3\ and not \Linear_Counter_1:counter_2\ and not \Linear_Counter_1:counter_1\ and not \Linear_Counter_1:counter_0\));

\MIDI1_UART:BUART:counter_load_not\ <= ((not \MIDI1_UART:BUART:tx_bitclk_enable_pre\ and \MIDI1_UART:BUART:tx_state_2\)
	OR \MIDI1_UART:BUART:tx_state_0\
	OR \MIDI1_UART:BUART:tx_state_1\);

\MIDI1_UART:BUART:tx_status_0\ <= ((not \MIDI1_UART:BUART:tx_state_1\ and not \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_bitclk_enable_pre\ and \MIDI1_UART:BUART:tx_fifo_empty\ and \MIDI1_UART:BUART:tx_state_2\));

\MIDI1_UART:BUART:tx_status_2\ <= (not \MIDI1_UART:BUART:tx_fifo_notfull\);

\MIDI1_UART:BUART:tx_bitclk\\D\ <= ((not \MIDI1_UART:BUART:tx_state_2\ and \MIDI1_UART:BUART:tx_bitclk_enable_pre\)
	OR (\MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_bitclk_enable_pre\)
	OR (\MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_bitclk_enable_pre\));

\MIDI1_UART:BUART:tx_mark\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:tx_mark\));

\MIDI1_UART:BUART:tx_state_2\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_2\ and \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_counter_dp\ and \MIDI1_UART:BUART:tx_bitclk\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_2\ and \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_bitclk\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_bitclk_enable_pre\ and \MIDI1_UART:BUART:tx_state_2\));

\MIDI1_UART:BUART:tx_state_1\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_1\ and not \MIDI1_UART:BUART:tx_state_2\ and \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_bitclk\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_2\ and not \MIDI1_UART:BUART:tx_bitclk\ and \MIDI1_UART:BUART:tx_state_1\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_bitclk_enable_pre\ and \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_0\ and not \MIDI1_UART:BUART:tx_counter_dp\ and \MIDI1_UART:BUART:tx_state_1\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_state_2\));

\MIDI1_UART:BUART:tx_state_0\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_1\ and not \MIDI1_UART:BUART:tx_fifo_empty\ and \MIDI1_UART:BUART:tx_bitclk_enable_pre\ and \MIDI1_UART:BUART:tx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_1\ and not \MIDI1_UART:BUART:tx_state_0\ and not \MIDI1_UART:BUART:tx_fifo_empty\ and not \MIDI1_UART:BUART:tx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_bitclk_enable_pre\ and \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_2\ and not \MIDI1_UART:BUART:tx_bitclk\ and \MIDI1_UART:BUART:tx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_fifo_empty\ and \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_state_2\));

\MIDI1_UART:BUART:txn\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_0\ and not \MIDI1_UART:BUART:tx_shift_out\ and not \MIDI1_UART:BUART:tx_state_2\ and not \MIDI1_UART:BUART:tx_counter_dp\ and \MIDI1_UART:BUART:tx_state_1\ and \MIDI1_UART:BUART:tx_bitclk\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_1\ and not \MIDI1_UART:BUART:tx_state_2\ and not \MIDI1_UART:BUART:tx_bitclk\ and \MIDI1_UART:BUART:tx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_state_1\ and not \MIDI1_UART:BUART:tx_shift_out\ and not \MIDI1_UART:BUART:tx_state_2\ and \MIDI1_UART:BUART:tx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:tx_bitclk\ and \MIDI1_UART:BUART:tx_state_1\ and Net_367)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:tx_state_2\ and Net_367));

\MIDI1_UART:BUART:tx_parity_bit\\D\ <= ((not \MIDI1_UART:BUART:tx_state_0\ and \MIDI1_UART:BUART:tx_parity_bit\ and Net_367)
	OR \MIDI1_UART:BUART:tx_parity_bit\);

\MIDI1_UART:BUART:rx_counter_load\ <= ((not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_0\ and not \MIDI1_UART:BUART:rx_state_3\ and not \MIDI1_UART:BUART:rx_state_2\));

\MIDI1_UART:BUART:rx_bitclk_pre\ <= ((not \MIDI1_UART:BUART:rx_count_2\ and not \MIDI1_UART:BUART:rx_count_1\ and not \MIDI1_UART:BUART:rx_count_0\));

\MIDI1_UART:BUART:rx_state_stop1_reg\\D\ <= (not \MIDI1_UART:BUART:rx_state_2\
	OR not \MIDI1_UART:BUART:rx_state_3\
	OR \MIDI1_UART:BUART:rx_state_0\
	OR \MIDI1_UART:BUART:rx_state_1\);

\MIDI1_UART:BUART:pollcount_1\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_count_2\ and not \MIDI1_UART:BUART:rx_count_1\ and not \MIDI1_UART:BUART:pollcount_1\ and Net_360 and \MIDI1_UART:BUART:pollcount_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_count_2\ and not \MIDI1_UART:BUART:rx_count_1\ and not \MIDI1_UART:BUART:pollcount_0\ and \MIDI1_UART:BUART:pollcount_1\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_count_2\ and not \MIDI1_UART:BUART:rx_count_1\ and not Net_360 and \MIDI1_UART:BUART:pollcount_1\));

\MIDI1_UART:BUART:pollcount_0\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_count_2\ and not \MIDI1_UART:BUART:rx_count_1\ and not \MIDI1_UART:BUART:pollcount_0\ and Net_360)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_count_2\ and not \MIDI1_UART:BUART:rx_count_1\ and not Net_360 and \MIDI1_UART:BUART:pollcount_0\));

\MIDI1_UART:BUART:rx_postpoll\ <= ((Net_360 and \MIDI1_UART:BUART:pollcount_0\)
	OR \MIDI1_UART:BUART:pollcount_1\);

\MIDI1_UART:BUART:rx_status_4\ <= ((\MIDI1_UART:BUART:rx_load_fifo\ and \MIDI1_UART:BUART:rx_fifofull\));

\MIDI1_UART:BUART:rx_status_5\ <= ((\MIDI1_UART:BUART:rx_fifonotempty\ and \MIDI1_UART:BUART:rx_state_stop1_reg\));

\MIDI1_UART:BUART:rx_stop_bit_error\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_0\ and not \MIDI1_UART:BUART:pollcount_1\ and not \MIDI1_UART:BUART:pollcount_0\ and \MIDI1_UART:BUART:rx_bitclk_enable\ and \MIDI1_UART:BUART:rx_state_3\ and \MIDI1_UART:BUART:rx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_0\ and not \MIDI1_UART:BUART:pollcount_1\ and not Net_360 and \MIDI1_UART:BUART:rx_bitclk_enable\ and \MIDI1_UART:BUART:rx_state_3\ and \MIDI1_UART:BUART:rx_state_2\));

\MIDI1_UART:BUART:rx_load_fifo\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_0\ and not \MIDI1_UART:BUART:rx_state_2\ and \MIDI1_UART:BUART:rx_bitclk_enable\ and \MIDI1_UART:BUART:rx_state_3\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_3\ and not \MIDI1_UART:BUART:rx_state_2\ and not \MIDI1_UART:BUART:rx_count_6\ and not \MIDI1_UART:BUART:rx_count_4\ and \MIDI1_UART:BUART:rx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_3\ and not \MIDI1_UART:BUART:rx_state_2\ and not \MIDI1_UART:BUART:rx_count_6\ and not \MIDI1_UART:BUART:rx_count_5\ and \MIDI1_UART:BUART:rx_state_0\));

\MIDI1_UART:BUART:rx_state_3\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_2\ and not \MIDI1_UART:BUART:rx_count_6\ and not \MIDI1_UART:BUART:rx_count_4\ and \MIDI1_UART:BUART:rx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_2\ and not \MIDI1_UART:BUART:rx_count_6\ and not \MIDI1_UART:BUART:rx_count_5\ and \MIDI1_UART:BUART:rx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_bitclk_enable\ and \MIDI1_UART:BUART:rx_state_3\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_1\ and \MIDI1_UART:BUART:rx_state_3\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_2\ and \MIDI1_UART:BUART:rx_state_3\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_0\ and \MIDI1_UART:BUART:rx_state_3\));

\MIDI1_UART:BUART:rx_state_2\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_0\ and not \MIDI1_UART:BUART:rx_state_3\ and not \MIDI1_UART:BUART:rx_state_2\ and not Net_360 and \MIDI1_UART:BUART:rx_last\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_0\ and not \MIDI1_UART:BUART:rx_state_2\ and \MIDI1_UART:BUART:rx_bitclk_enable\ and \MIDI1_UART:BUART:rx_state_3\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_3\ and not \MIDI1_UART:BUART:rx_count_6\ and not \MIDI1_UART:BUART:rx_count_4\ and \MIDI1_UART:BUART:rx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_3\ and not \MIDI1_UART:BUART:rx_count_6\ and not \MIDI1_UART:BUART:rx_count_5\ and \MIDI1_UART:BUART:rx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_bitclk_enable\ and \MIDI1_UART:BUART:rx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_1\ and \MIDI1_UART:BUART:rx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_0\ and \MIDI1_UART:BUART:rx_state_2\));

\MIDI1_UART:BUART:rx_state_1\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_1\));

\MIDI1_UART:BUART:rx_state_0\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_3\ and not \MIDI1_UART:BUART:pollcount_1\ and not \MIDI1_UART:BUART:pollcount_0\ and \MIDI1_UART:BUART:rx_bitclk_enable\ and \MIDI1_UART:BUART:rx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and not \MIDI1_UART:BUART:rx_state_1\ and not \MIDI1_UART:BUART:rx_state_3\ and not \MIDI1_UART:BUART:pollcount_1\ and not Net_360 and \MIDI1_UART:BUART:rx_bitclk_enable\ and \MIDI1_UART:BUART:rx_state_2\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_0\ and \MIDI1_UART:BUART:rx_count_5\ and \MIDI1_UART:BUART:rx_count_4\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_0\ and \MIDI1_UART:BUART:rx_count_6\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_0\ and \MIDI1_UART:BUART:rx_state_3\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_1\ and \MIDI1_UART:BUART:rx_state_0\)
	OR (not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_state_0\ and \MIDI1_UART:BUART:rx_state_2\));

\MIDI1_UART:BUART:rx_last\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and Net_360));

\MIDI1_UART:BUART:rx_address_detected\\D\ <= ((not \MIDI1_UART:BUART:reset_reg\ and \MIDI1_UART:BUART:rx_address_detected\));

Net_525 <= ((not period_10 and not period_9 and not period_8 and not period_7 and not period_6 and not period_5 and not period_4 and not period_3 and not period_2 and not period_1 and not period_0 and Clock179)
	OR (not \clock_divider_2:buffer_after\ and Clock179 and \clock_divider_2:buffer_before\));

\clock_divider_2:counter_10\\D\ <= ((not \clock_divider_2:counter_10\ and not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and not \clock_divider_2:counter_7\ and not \clock_divider_2:counter_6\ and not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and period_10)
	OR (not \clock_divider_2:counter_10\ and not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_0\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_10\ and not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_1\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_10\ and not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_2\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_10\ and not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_3\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_10\ and not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_4\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_10\ and not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_5\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_10\ and not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_6\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_10\ and not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_7\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\ and \clock_divider_2:counter_10\)
	OR (\clock_divider_2:counter_10\ and \clock_divider_2:counter_8\)
	OR (\clock_divider_2:counter_10\ and \clock_divider_2:counter_9\));

\clock_divider_2:counter_9\\D\ <= ((not \clock_divider_2:counter_10\ and not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and not \clock_divider_2:counter_7\ and not \clock_divider_2:counter_6\ and not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and period_9)
	OR (not \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\ and \clock_divider_2:counter_9\)
	OR (\clock_divider_2:counter_9\ and \clock_divider_2:counter_8\)
	OR (not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_0\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_1\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_2\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_3\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_4\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_5\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_6\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_7\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:counter_10\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\));

\clock_divider_2:counter_8\\D\ <= ((not \clock_divider_2:counter_10\ and not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and not \clock_divider_2:counter_7\ and not \clock_divider_2:counter_6\ and not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and period_8)
	OR (not \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\ and \clock_divider_2:counter_8\)
	OR (not \clock_divider_2:counter_8\ and \clock_divider_2:counter_0\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_8\ and \clock_divider_2:counter_1\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_8\ and \clock_divider_2:counter_2\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_8\ and \clock_divider_2:counter_3\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_8\ and \clock_divider_2:counter_4\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_8\ and \clock_divider_2:counter_5\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_8\ and \clock_divider_2:counter_6\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_8\ and \clock_divider_2:counter_7\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_8\ and \clock_divider_2:counter_9\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\)
	OR (not \clock_divider_2:counter_8\ and \clock_divider_2:counter_10\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\));

\clock_divider_2:counter_7\\D\ <= ((not \clock_divider_2:counter_7\ and not \clock_divider_2:counter_6\ and not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and period_7)
	OR (not \clock_divider_2:counter_7\ and not \clock_divider_2:counter_6\ and not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_8\)
	OR (not \clock_divider_2:counter_7\ and not \clock_divider_2:counter_6\ and not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_9\)
	OR (not \clock_divider_2:counter_7\ and not \clock_divider_2:counter_6\ and not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_10\)
	OR (\clock_divider_2:counter_7\ and \clock_divider_2:counter_0\)
	OR (\clock_divider_2:counter_7\ and \clock_divider_2:counter_1\)
	OR (\clock_divider_2:counter_7\ and \clock_divider_2:counter_2\)
	OR (\clock_divider_2:counter_7\ and \clock_divider_2:counter_3\)
	OR (\clock_divider_2:counter_7\ and \clock_divider_2:counter_4\)
	OR (\clock_divider_2:counter_7\ and \clock_divider_2:counter_5\)
	OR (\clock_divider_2:counter_7\ and \clock_divider_2:counter_6\));

\clock_divider_2:counter_6\\D\ <= ((not \clock_divider_2:counter_6\ and not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and period_6)
	OR (not \clock_divider_2:counter_6\ and not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_7\)
	OR (not \clock_divider_2:counter_6\ and not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_8\)
	OR (not \clock_divider_2:counter_6\ and not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_9\)
	OR (not \clock_divider_2:counter_6\ and not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_10\)
	OR (\clock_divider_2:counter_6\ and \clock_divider_2:counter_0\)
	OR (\clock_divider_2:counter_6\ and \clock_divider_2:counter_1\)
	OR (\clock_divider_2:counter_6\ and \clock_divider_2:counter_2\)
	OR (\clock_divider_2:counter_6\ and \clock_divider_2:counter_3\)
	OR (\clock_divider_2:counter_6\ and \clock_divider_2:counter_4\)
	OR (\clock_divider_2:counter_6\ and \clock_divider_2:counter_5\));

\clock_divider_2:counter_5\\D\ <= ((not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and period_5)
	OR (not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_6\)
	OR (not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_7\)
	OR (not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_8\)
	OR (not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_9\)
	OR (not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_10\)
	OR (\clock_divider_2:counter_5\ and \clock_divider_2:counter_0\)
	OR (\clock_divider_2:counter_5\ and \clock_divider_2:counter_1\)
	OR (\clock_divider_2:counter_5\ and \clock_divider_2:counter_2\)
	OR (\clock_divider_2:counter_5\ and \clock_divider_2:counter_3\)
	OR (\clock_divider_2:counter_5\ and \clock_divider_2:counter_4\));

\clock_divider_2:counter_4\\D\ <= ((not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and period_4)
	OR (not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_5\)
	OR (not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_6\)
	OR (not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_7\)
	OR (not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_8\)
	OR (not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_9\)
	OR (not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_10\)
	OR (\clock_divider_2:counter_4\ and \clock_divider_2:counter_0\)
	OR (\clock_divider_2:counter_4\ and \clock_divider_2:counter_1\)
	OR (\clock_divider_2:counter_4\ and \clock_divider_2:counter_2\)
	OR (\clock_divider_2:counter_4\ and \clock_divider_2:counter_3\));

\clock_divider_2:counter_3\\D\ <= ((not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and period_3)
	OR (not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_4\)
	OR (not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_5\)
	OR (not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_6\)
	OR (not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_7\)
	OR (not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_8\)
	OR (not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_9\)
	OR (not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_10\)
	OR (\clock_divider_2:counter_3\ and \clock_divider_2:counter_0\)
	OR (\clock_divider_2:counter_3\ and \clock_divider_2:counter_1\)
	OR (\clock_divider_2:counter_3\ and \clock_divider_2:counter_2\));

\clock_divider_2:counter_2\\D\ <= ((\clock_divider_2:counter_2\ and \clock_divider_2:counter_0\)
	OR (\clock_divider_2:counter_2\ and \clock_divider_2:counter_1\)
	OR (not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and period_2)
	OR (not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_3\)
	OR (not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_4\)
	OR (not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_5\)
	OR (not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_6\)
	OR (not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_7\)
	OR (not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_8\)
	OR (not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_9\)
	OR (not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_10\));

\clock_divider_2:counter_1\\D\ <= ((\clock_divider_2:counter_1\ and \clock_divider_2:counter_0\)
	OR (not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and period_1)
	OR (not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_2\)
	OR (not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_3\)
	OR (not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_4\)
	OR (not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_5\)
	OR (not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_6\)
	OR (not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_7\)
	OR (not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_8\)
	OR (not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_9\)
	OR (not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\ and \clock_divider_2:counter_10\));

\clock_divider_2:counter_0\\D\ <= ((not \clock_divider_2:counter_0\ and period_0)
	OR (not \clock_divider_2:counter_0\ and \clock_divider_2:counter_1\)
	OR (not \clock_divider_2:counter_0\ and \clock_divider_2:counter_2\)
	OR (not \clock_divider_2:counter_0\ and \clock_divider_2:counter_3\)
	OR (not \clock_divider_2:counter_0\ and \clock_divider_2:counter_4\)
	OR (not \clock_divider_2:counter_0\ and \clock_divider_2:counter_5\)
	OR (not \clock_divider_2:counter_0\ and \clock_divider_2:counter_6\)
	OR (not \clock_divider_2:counter_0\ and \clock_divider_2:counter_7\)
	OR (not \clock_divider_2:counter_0\ and \clock_divider_2:counter_8\)
	OR (not \clock_divider_2:counter_0\ and \clock_divider_2:counter_9\)
	OR (not \clock_divider_2:counter_0\ and \clock_divider_2:counter_10\));

\clock_divider_2:buffer_before\\D\ <= ((not \clock_divider_2:counter_10\ and not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and not \clock_divider_2:counter_7\ and not \clock_divider_2:counter_6\ and not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\));

\clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:b_16\ <= ((not \clock_divider_2:counter_10\ and not \clock_divider_2:counter_9\ and not \clock_divider_2:counter_8\ and \clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\));

\clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:b_8\ <= ((not \clock_divider_2:counter_7\ and not \clock_divider_2:counter_6\ and not \clock_divider_2:counter_5\ and not \clock_divider_2:counter_4\ and not \clock_divider_2:counter_3\ and not \clock_divider_2:counter_2\ and not \clock_divider_2:counter_1\ and not \clock_divider_2:counter_0\));

period_shift_7 <= ((not Net_571_2 and not Net_571_1 and not Net_571_0 and period_7)
	OR (not Net_571_2 and not Net_571_0 and period_9 and Net_571_1)
	OR (not Net_571_2 and not Net_571_1 and period_8 and Net_571_0)
	OR (not Net_571_2 and period_10 and Net_571_1 and Net_571_0));

period_shift_6 <= ((not Net_571_2 and not Net_571_1 and not Net_571_0 and period_6)
	OR (not Net_571_2 and not Net_571_0 and period_8 and Net_571_1)
	OR (not Net_571_2 and not Net_571_1 and period_7 and Net_571_0)
	OR (not Net_571_2 and period_9 and Net_571_1 and Net_571_0));

period_shift_5 <= ((not Net_571_2 and not Net_571_1 and not Net_571_0 and period_5)
	OR (not Net_571_2 and not Net_571_0 and period_7 and Net_571_1)
	OR (not Net_571_2 and not Net_571_1 and period_6 and Net_571_0)
	OR (not Net_571_2 and period_8 and Net_571_1 and Net_571_0));

period_shift_4 <= ((not Net_571_2 and not Net_571_1 and not Net_571_0 and period_4)
	OR (not Net_571_2 and not Net_571_0 and period_6 and Net_571_1)
	OR (not Net_571_2 and not Net_571_1 and period_5 and Net_571_0)
	OR (not Net_571_2 and period_7 and Net_571_1 and Net_571_0));

period_shift_3 <= ((not Net_571_2 and not Net_571_1 and not Net_571_0 and period_3)
	OR (not Net_571_2 and not Net_571_0 and period_5 and Net_571_1)
	OR (not Net_571_2 and not Net_571_1 and period_4 and Net_571_0)
	OR (not Net_571_2 and period_6 and Net_571_1 and Net_571_0));

period_shift_2 <= ((not Net_571_2 and not Net_571_1 and not Net_571_0 and period_2)
	OR (not Net_571_2 and not Net_571_0 and period_4 and Net_571_1)
	OR (not Net_571_2 and not Net_571_1 and period_3 and Net_571_0)
	OR (not Net_571_2 and period_5 and Net_571_1 and Net_571_0));

period_shift_1 <= ((not Net_571_2 and not Net_571_1 and not Net_571_0 and period_1)
	OR (not Net_571_2 and not Net_571_0 and period_3 and Net_571_1)
	OR (not Net_571_2 and not Net_571_1 and period_2 and Net_571_0)
	OR (not Net_571_2 and period_4 and Net_571_1 and Net_571_0));

period_shift_0 <= ((not Net_571_2 and not Net_571_1 and not Net_571_0 and period_0)
	OR (not Net_571_2 and not Net_571_0 and period_2 and Net_571_1)
	OR (not Net_571_2 and not Net_571_1 and period_1 and Net_571_0)
	OR (not Net_571_2 and period_3 and Net_571_1 and Net_571_0));

\LFSR:genblk2:Sync1\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Clock179,
		enable=>\LFSR:enable_final\,
		clock_out=>\LFSR:clk\);
\LFSR:genblk2:Sync2\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Clock179,
		enable=>one,
		clock_out=>\LFSR:clk_ctrl\);
\LFSR:ClkSp:CtrlReg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000110",
		cy_ctrl_mode_0=>"11111111",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>\LFSR:clk_ctrl\,
		control=>(\LFSR:control_7\, \LFSR:control_6\, \LFSR:control_5\, \LFSR:control_4\,
			\LFSR:control_3\, \LFSR:control_2\, \LFSR:control_1\, \LFSR:control_0\));
\LFSR:sC16:PRSdp:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000101000010100100000000000000000000000000000000000000000001111000000000000111100000000000011110000000000001111000011111111000000001111111111111111000011000000001000000000111110000000000000000000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\LFSR:clk\,
		cs_addr=>(zero, zero, \LFSR:enable_final\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>\LFSR:nc1\,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>\LFSR:sC16:PRSdp:carry\,
		sir=>zero,
		sor=>open,
		sil=>\LFSR:sC16:PRSdp:sh_right\,
		sol=>\LFSR:sC16:PRSdp:sh_left\,
		msbi=>\LFSR:sC16:PRSdp:msb\,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>(\LFSR:sC16:PRSdp:cmp_eq_1\, \LFSR:sC16:PRSdp:cmp_eq_0\),
		cli=>(zero, zero),
		clo=>(\LFSR:sC16:PRSdp:cmp_lt_1\, \LFSR:sC16:PRSdp:cmp_lt_0\),
		zi=>(zero, zero),
		zo=>(\LFSR:sC16:PRSdp:cmp_zero_1\, \LFSR:sC16:PRSdp:cmp_zero_0\),
		fi=>(zero, zero),
		fo=>(\LFSR:sC16:PRSdp:cmp_ff_1\, \LFSR:sC16:PRSdp:cmp_ff_0\),
		capi=>(zero, zero),
		capo=>(\LFSR:sC16:PRSdp:cap_1\, \LFSR:sC16:PRSdp:cap_0\),
		cfbi=>zero,
		cfbo=>\LFSR:sC16:PRSdp:cfb\,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\LFSR:sC16:PRSdp:u1\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000101000010100100000000000000000000000000000000000000000001111000000000000111100000000000011110000000000001111000011111111000000001111111111111111000011000000001100000000110101000000000000000000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\LFSR:clk\,
		cs_addr=>(zero, zero, \LFSR:enable_final\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>Net_62,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>\LFSR:sC16:PRSdp:carry\,
		co=>open,
		sir=>\LFSR:sC16:PRSdp:sh_left\,
		sor=>\LFSR:sC16:PRSdp:sh_right\,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>\LFSR:sC16:PRSdp:msb\,
		cei=>(\LFSR:sC16:PRSdp:cmp_eq_1\, \LFSR:sC16:PRSdp:cmp_eq_0\),
		ceo=>open,
		cli=>(\LFSR:sC16:PRSdp:cmp_lt_1\, \LFSR:sC16:PRSdp:cmp_lt_0\),
		clo=>open,
		zi=>(\LFSR:sC16:PRSdp:cmp_zero_1\, \LFSR:sC16:PRSdp:cmp_zero_0\),
		zo=>open,
		fi=>(\LFSR:sC16:PRSdp:cmp_ff_1\, \LFSR:sC16:PRSdp:cmp_ff_0\),
		fo=>open,
		capi=>(\LFSR:sC16:PRSdp:cap_1\, \LFSR:sC16:PRSdp:cap_0\),
		capo=>open,
		cfbi=>\LFSR:sC16:PRSdp:cfb\,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Length_Counter:CounterUDB:clock_enable_block\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Clock179,
		enable=>one,
		clock_out=>\Length_Counter:CounterUDB:ClockOutFromEnBlock\);
\Length_Counter:CounterUDB:sCTRLReg:cy_psoc3_udb_Ctl_Clk_Sync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Clock179,
		enable=>one,
		clock_out=>\Length_Counter:CounterUDB:Clk_Ctl_i\);
\Length_Counter:CounterUDB:sCTRLReg:ctrlreg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000000",
		cy_ctrl_mode_0=>"11111111",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>\Length_Counter:CounterUDB:Clk_Ctl_i\,
		control=>(\Length_Counter:CounterUDB:control_7\, \Length_Counter:CounterUDB:control_6\, \Length_Counter:CounterUDB:control_5\, \Length_Counter:CounterUDB:control_4\,
			\Length_Counter:CounterUDB:control_3\, \Length_Counter:CounterUDB:control_2\, \Length_Counter:CounterUDB:control_1\, \Length_Counter:CounterUDB:control_0\));
\Length_Counter:CounterUDB:sSTSReg:stsreg\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>zero,
		clock=>\Length_Counter:CounterUDB:ClockOutFromEnBlock\,
		status=>(\Length_Counter:CounterUDB:status_6\, \Length_Counter:CounterUDB:status_5\, zero, \Length_Counter:CounterUDB:underflow_status\,
			zero, \Length_Counter:CounterUDB:reload\, \Length_Counter:CounterUDB:status_0\),
		interrupt=>\Length_Counter:Net_43\);
\Length_Counter:CounterUDB:sC8:counterdp:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000001000000001000000010000000000000010000000000000000100000010101000010100000010000001000000101010000101000011111111000000001111111111111111101000000000000000000001000000000000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\Length_Counter:CounterUDB:ClockOutFromEnBlock\,
		cs_addr=>(zero, \Length_Counter:CounterUDB:count_enable\, \Length_Counter:CounterUDB:reload\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\Length_Counter:CounterUDB:per_equal\,
		cl0=>\Length_Counter:CounterUDB:nc42\,
		z0=>\Length_Counter:CounterUDB:reload\,
		ff0=>\Length_Counter:CounterUDB:per_FF\,
		ce1=>\Length_Counter:CounterUDB:cmp_equal\,
		cl1=>\Length_Counter:CounterUDB:cmp_less\,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>\Length_Counter:CounterUDB:status_6\,
		f0_blk_stat=>\Length_Counter:CounterUDB:status_5\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
Clock_179:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"9bcb1815-6cc0-4beb-9199-515306aecc87",
		source_clock_id=>"61737EF6-3B74-48f9-8B91-F7473A442AE7",
		divisor=>0,
		period=>"558659217.877095",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>Clock179,
		dig_domain_out=>open);
Pin_1:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"8d318d8b-cf7b-4b6b-b02c-ab1c5c49d0ba",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>Length_Clk,
		analog=>(open),
		io=>(tmpIO_0__Pin_1_net_0),
		siovref=>(tmpSIOVREF__Pin_1_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Pin_1_net_0);
\Length_Counter_1:CounterUDB:clock_enable_block\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Clock179,
		enable=>one,
		clock_out=>\Length_Counter_1:CounterUDB:ClockOutFromEnBlock\);
\Length_Counter_1:CounterUDB:sCTRLReg:cy_psoc3_udb_Ctl_Clk_Sync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Clock179,
		enable=>one,
		clock_out=>\Length_Counter_1:CounterUDB:Clk_Ctl_i\);
\Length_Counter_1:CounterUDB:sCTRLReg:ctrlreg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000000",
		cy_ctrl_mode_0=>"11111111",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>\Length_Counter_1:CounterUDB:Clk_Ctl_i\,
		control=>(\Length_Counter_1:CounterUDB:control_7\, \Length_Counter_1:CounterUDB:control_6\, \Length_Counter_1:CounterUDB:control_5\, \Length_Counter_1:CounterUDB:control_4\,
			\Length_Counter_1:CounterUDB:control_3\, \Length_Counter_1:CounterUDB:control_2\, \Length_Counter_1:CounterUDB:control_1\, \Length_Counter_1:CounterUDB:control_0\));
\Length_Counter_1:CounterUDB:sSTSReg:stsreg\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>zero,
		clock=>\Length_Counter_1:CounterUDB:ClockOutFromEnBlock\,
		status=>(\Length_Counter_1:CounterUDB:status_6\, \Length_Counter_1:CounterUDB:status_5\, zero, \Length_Counter_1:CounterUDB:underflow_status\,
			zero, \Length_Counter_1:CounterUDB:reload\, \Length_Counter_1:CounterUDB:status_0\),
		interrupt=>\Length_Counter_1:Net_43\);
\Length_Counter_1:CounterUDB:sC8:counterdp:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000001000000000000001000000001000000010000000000000010000000000000000100000010101000010100000010000001000000101010000101000011111111000000001111111111111111101000000000000000000001000000000000000000011000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\Length_Counter_1:CounterUDB:ClockOutFromEnBlock\,
		cs_addr=>(zero, \Length_Counter_1:CounterUDB:count_enable\, \Length_Counter_1:CounterUDB:reload\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\Length_Counter_1:CounterUDB:per_equal\,
		cl0=>\Length_Counter_1:CounterUDB:nc42\,
		z0=>\Length_Counter_1:CounterUDB:reload\,
		ff0=>\Length_Counter_1:CounterUDB:per_FF\,
		ce1=>\Length_Counter_1:CounterUDB:cmp_equal\,
		cl1=>\Length_Counter_1:CounterUDB:cmp_less\,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>\Length_Counter_1:CounterUDB:status_6\,
		f0_blk_stat=>\Length_Counter_1:CounterUDB:status_5\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\volume_generator:Counter7\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1111111",
		cy_init_value=>"0000000",
		cy_route_ld=>'0',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>Clock179,
		reset=>zero,
		load=>zero,
		enable=>Net_243,
		count=>(oData_6, oData_5, oData_4, oData_3,
			oData_2, oData_1, oData_0),
		tc=>Net_168);
\Tri_Divider:CounterHW\:cy_psoc3_timer_v1_0
	GENERIC MAP(cy_registers=>"")
	PORT MAP(clock=>Clock179,
		kill=>zero,
		enable=>zero,
		capture=>zero,
		timer_reset=>zero,
		tc=>Net_262,
		compare=>\Tri_Divider:Net_47\,
		interrupt=>\Tri_Divider:Net_42\);
\Noise_Clk_Div:CounterHW\:cy_psoc3_timer_v1_0
	GENERIC MAP(cy_registers=>"")
	PORT MAP(clock=>Clock179,
		kill=>zero,
		enable=>zero,
		capture=>zero,
		timer_reset=>zero,
		tc=>Net_1,
		compare=>\Noise_Clk_Div:Net_47\,
		interrupt=>\Noise_Clk_Div:Net_42\);
DAC_Clk:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"481ab755-0a35-44b0-9e5a-7b8c044e43f2",
		source_clock_id=>"",
		divisor=>0,
		period=>"4000000000",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>DAC_Clock,
		dig_domain_out=>open);
Noise_Out:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"77715107-f8d5-47e5-a629-0fb83101ac6b",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>(tmpFB_0__Noise_Out_net_0),
		analog=>Net_315,
		io=>(tmpIO_0__Noise_Out_net_0),
		siovref=>(tmpSIOVREF__Noise_Out_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Noise_Out_net_0);
\Counter_1:CounterHW\:cy_psoc3_timer_v1_0
	GENERIC MAP(cy_registers=>"")
	PORT MAP(clock=>Clock179,
		kill=>zero,
		enable=>zero,
		capture=>zero,
		timer_reset=>zero,
		tc=>Net_386,
		compare=>\Counter_1:Net_47\,
		interrupt=>\Counter_1:Net_42\);
Pin_6:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"fdb3550c-04c2-49b3-aa69-6fce14562892",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>Net_205,
		analog=>(open),
		io=>(tmpIO_0__Pin_6_net_0),
		siovref=>(tmpSIOVREF__Pin_6_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Pin_6_net_0);
\Noise_Vol_Clk_Div:Counter7\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1111111",
		cy_init_value=>"0000000",
		cy_route_ld=>'0',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>Clock179,
		reset=>zero,
		load=>zero,
		enable=>Net_205,
		count=>(Net_177_6, Net_177_5, Net_177_4, Net_177_3,
			Net_177_2, Net_177_1, Net_177_0),
		tc=>Net_243);
\Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:gs(24):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_24\);
\Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:gs(16):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_16\);
\Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:gs(8):g2:g3:ub\:cy_buf
	PORT MAP(x=>zero,
		y=>\Triangle_Gen_1:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_8\);
\Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:gs(24):g2:g3:ub\:cy_buf
	PORT MAP(x=>\Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_24\,
		y=>\Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_24\);
\Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:gs(16):g2:g3:ub\:cy_buf
	PORT MAP(x=>\Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_16\,
		y=>\Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_24\);
\Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:gs(8):g2:g3:ub\:cy_buf
	PORT MAP(x=>\Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_8\,
		y=>\Triangle_Gen_1:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_16\);
\Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:gs(24):g2:g3:ub\:cy_buf
	PORT MAP(x=>\Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_24\,
		y=>\Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_24\);
\Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:gs(16):g2:g3:ub\:cy_buf
	PORT MAP(x=>\Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_16\,
		y=>\Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_24\);
\Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:gs(8):g2:g3:ub\:cy_buf
	PORT MAP(x=>\Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_8\,
		y=>\Linear_Counter_1:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_16\);
\VDAC8_Noise:viDAC8\:cy_psoc3_vidac8_v1_0
	GENERIC MAP(cy_registers=>"",
		reg_data=>'1',
		is_all_if_any=>'0')
	PORT MAP(reset=>zero,
		idir=>zero,
		ioff=>zero,
		data=>(audio_out_7, audio_out_6, audio_out_5, audio_out_4,
			zero, zero, zero, zero),
		strobe=>DAC_Clock,
		strobe_udb=>DAC_Clock,
		vout=>Net_315,
		iout=>\VDAC8_Noise:Net_77\);
\VDAC8_Noise:cy_analog_noconnect_1\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\VDAC8_Noise:Net_77\);
\Count7_1:Counter7\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1111111",
		cy_init_value=>"0000000",
		cy_route_ld=>'0',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>Clock179,
		reset=>zero,
		load=>zero,
		enable=>Net_386,
		count=>(Net_390_6, Net_390_5, Net_390_4, Net_390_3,
			Net_390_2, Net_390_1, Net_390_0),
		tc=>Net_391);
\Control_Reg_1:Sync:ctrl_reg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000000",
		cy_ctrl_mode_0=>"00000000",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>zero,
		control=>(Net_329, duration_6, duration_5, duration_4,
			duration_3, duration_2, duration_1, duration_0));
\MIDI1_UART:TXInternalInterrupt\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_361);
\MIDI1_UART:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"b0162966-0060-4af5-82d1-fcb491ad7619/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"4000000000",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\MIDI1_UART:Net_9\,
		dig_domain_out=>open);
\MIDI1_UART:RXInternalInterrupt\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_362);
\MIDI1_UART:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\MIDI1_UART:Net_9\,
		enable=>one,
		clock_out=>\MIDI1_UART:BUART:clock_op\);
\MIDI1_UART:BUART:sTX:TxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\MIDI1_UART:BUART:reset_reg\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		cs_addr=>(\MIDI1_UART:BUART:tx_state_1\, \MIDI1_UART:BUART:tx_state_0\, \MIDI1_UART:BUART:tx_bitclk_enable_pre\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\MIDI1_UART:BUART:tx_shift_out\,
		f0_bus_stat=>\MIDI1_UART:BUART:tx_fifo_notfull\,
		f0_blk_stat=>\MIDI1_UART:BUART:tx_fifo_empty\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\MIDI1_UART:BUART:sTX:sCLOCK:TxBitClkGen\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\MIDI1_UART:BUART:reset_reg\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		cs_addr=>(zero, zero, \MIDI1_UART:BUART:counter_load_not\),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>\MIDI1_UART:BUART:tx_bitclk_enable_pre\,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>\MIDI1_UART:BUART:tx_counter_dp\,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>(\MIDI1_UART:BUART:sc_out_7\, \MIDI1_UART:BUART:sc_out_6\, \MIDI1_UART:BUART:sc_out_5\, \MIDI1_UART:BUART:sc_out_4\,
			\MIDI1_UART:BUART:sc_out_3\, \MIDI1_UART:BUART:sc_out_2\, \MIDI1_UART:BUART:sc_out_1\, \MIDI1_UART:BUART:sc_out_0\));
\MIDI1_UART:BUART:sTX:TxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0000001",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\MIDI1_UART:BUART:reset_reg\,
		clock=>\MIDI1_UART:BUART:clock_op\,
		status=>(zero, zero, zero, \MIDI1_UART:BUART:tx_fifo_notfull\,
			\MIDI1_UART:BUART:tx_status_2\, \MIDI1_UART:BUART:tx_fifo_empty\, \MIDI1_UART:BUART:tx_status_0\),
		interrupt=>Net_361);
\MIDI1_UART:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\MIDI1_UART:BUART:reset_reg\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		cs_addr=>(\MIDI1_UART:BUART:rx_state_1\, \MIDI1_UART:BUART:rx_state_0\, \MIDI1_UART:BUART:rx_bitclk_enable\),
		route_si=>\MIDI1_UART:BUART:rx_postpoll\,
		route_ci=>zero,
		f0_load=>\MIDI1_UART:BUART:rx_load_fifo\,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>\MIDI1_UART:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\MIDI1_UART:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\MIDI1_UART:BUART:hd_shift_out\,
		f0_bus_stat=>\MIDI1_UART:BUART:rx_fifonotempty\,
		f0_blk_stat=>\MIDI1_UART:BUART:rx_fifofull\,
		f1_bus_stat=>\MIDI1_UART:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\MIDI1_UART:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>open,
		sir=>zero,
		sor=>open,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>open,
		cli=>(zero, zero),
		clo=>open,
		zi=>(zero, zero),
		zo=>open,
		fi=>(zero, zero),
		fo=>open,
		capi=>(zero, zero),
		capo=>open,
		cfbi=>zero,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\MIDI1_UART:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110010",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\MIDI1_UART:BUART:clock_op\,
		reset=>\MIDI1_UART:BUART:reset_reg\,
		load=>\MIDI1_UART:BUART:rx_counter_load\,
		enable=>one,
		count=>(\MIDI1_UART:BUART:rx_count_6\, \MIDI1_UART:BUART:rx_count_5\, \MIDI1_UART:BUART:rx_count_4\, \MIDI1_UART:BUART:rx_count_3\,
			\MIDI1_UART:BUART:rx_count_2\, \MIDI1_UART:BUART:rx_count_1\, \MIDI1_UART:BUART:rx_count_0\),
		tc=>\MIDI1_UART:BUART:rx_count7_tc\);
\MIDI1_UART:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\MIDI1_UART:BUART:reset_reg\,
		clock=>\MIDI1_UART:BUART:clock_op\,
		status=>(zero, \MIDI1_UART:BUART:rx_status_5\, \MIDI1_UART:BUART:rx_status_4\, \MIDI1_UART:BUART:rx_status_3\,
			\MIDI1_UART:BUART:rx_status_2\, zero, zero),
		interrupt=>Net_362);
MIDI_IN1:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"1425177d-0d0e-4468-8bcc-e638e5509a9b",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>Net_360,
		analog=>(open),
		io=>(tmpIO_0__MIDI_IN1_net_0),
		siovref=>(tmpSIOVREF__MIDI_IN1_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__MIDI_IN1_net_0);
MIDI_OUT1:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"ed092b9b-d398-4703-be89-cebf998501f6",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>Net_367,
		fb=>(tmpFB_0__MIDI_OUT1_net_0),
		analog=>(open),
		io=>(tmpIO_0__MIDI_OUT1_net_0),
		siovref=>(tmpSIOVREF__MIDI_OUT1_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__MIDI_OUT1_net_0);
\USBMIDI_1:dp_int\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>\USBMIDI_1:Net_1010\);
\USBMIDI_1:Dm\:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"0d776c25-0fda-4bff-af2b-9962432af301/8b77a6c4-10a0-4390-971c-672353e2a49c",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"NONCONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'1',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>(\USBMIDI_1:tmpFB_0__Dm_net_0\),
		analog=>\USBMIDI_1:Net_597\,
		io=>(\USBMIDI_1:tmpIO_0__Dm_net_0\),
		siovref=>(\USBMIDI_1:tmpSIOVREF__Dm_net_0\),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>\USBMIDI_1:tmpINTERRUPT_0__Dm_net_0\);
\USBMIDI_1:Dp\:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"0d776c25-0fda-4bff-af2b-9962432af301/618a72fc-5ddd-4df5-958f-a3d55102db42",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"10",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>(zero),
		fb=>(\USBMIDI_1:tmpFB_0__Dp_net_0\),
		analog=>\USBMIDI_1:Net_1000\,
		io=>(\USBMIDI_1:tmpIO_0__Dp_net_0\),
		siovref=>(\USBMIDI_1:tmpSIOVREF__Dp_net_0\),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>\USBMIDI_1:Net_1010\);
\USBMIDI_1:USB\:cy_psoc3_usb_v1_0
	GENERIC MAP(cy_registers=>"")
	PORT MAP(dp=>\USBMIDI_1:Net_1000\,
		dm=>\USBMIDI_1:Net_597\,
		sof_int=>Net_368,
		arb_int=>\USBMIDI_1:Net_1889\,
		usb_int=>\USBMIDI_1:Net_1876\,
		ept_int=>(\USBMIDI_1:ep_int_8\, \USBMIDI_1:ep_int_7\, \USBMIDI_1:ep_int_6\, \USBMIDI_1:ep_int_5\,
			\USBMIDI_1:ep_int_4\, \USBMIDI_1:ep_int_3\, \USBMIDI_1:ep_int_2\, \USBMIDI_1:ep_int_1\,
			\USBMIDI_1:ep_int_0\),
		ord_int=>\USBMIDI_1:Net_95\,
		dma_req=>(\USBMIDI_1:dma_request_7\, \USBMIDI_1:dma_request_6\, \USBMIDI_1:dma_request_5\, \USBMIDI_1:dma_request_4\,
			\USBMIDI_1:dma_request_3\, \USBMIDI_1:dma_request_2\, \USBMIDI_1:dma_request_1\, \USBMIDI_1:dma_request_0\),
		dma_termin=>\USBMIDI_1:dma_terminate\);
\USBMIDI_1:ep_2\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>\USBMIDI_1:ep_int_2\);
\USBMIDI_1:ep_1\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>\USBMIDI_1:ep_int_1\);
\USBMIDI_1:ep_0\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>\USBMIDI_1:ep_int_0\);
\USBMIDI_1:bus_reset\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>\USBMIDI_1:Net_1876\);
\USBMIDI_1:arb_int\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>\USBMIDI_1:Net_1889\);
\USBMIDI_1:sof_int\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_368);
\clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:gs(24):g2:g3:ub\:cy_buf
	PORT MAP(x=>\clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:b_24\,
		y=>\clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_24\);
\clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:gs(16):g2:g3:ub\:cy_buf
	PORT MAP(x=>\clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:b_16\,
		y=>\clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:b_24\);
\clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:gs(8):g2:g3:ub\:cy_buf
	PORT MAP(x=>\clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:b_8\,
		y=>\clock_divider_2:MODULE_13:g2:a0:g1:z1:s0:g1:u0:c_8\);
\Count7_2:Counter7\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1111111",
		cy_init_value=>"0000000",
		cy_route_ld=>'0',
		cy_route_en=>'0',
		cy_alt_mode=>'0')
	PORT MAP(clock=>Clock179,
		reset=>zero,
		load=>zero,
		enable=>one,
		count=>(Net_428_6, Net_428_5, Net_428_4, Net_428_3,
			Net_428_2, Net_428_1, Net_428_0),
		tc=>Net_449);
\Control_Reg_2:Sync:ctrl_reg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000000",
		cy_ctrl_mode_0=>"00000000",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>zero,
		control=>(period_7, period_6, period_5, period_4,
			period_3, period_2, period_1, period_0));
\Control_Reg_3:Sync:ctrl_reg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000000",
		cy_ctrl_mode_0=>"00000000",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>zero,
		control=>(\Control_Reg_3:control_7\, \Control_Reg_3:control_6\, \Control_Reg_3:control_5\, \Control_Reg_3:control_4\,
			\Control_Reg_3:control_3\, period_10, period_9, period_8));
Pin_3:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"3d933fdb-027f-4b11-b406-8fc17f87275d",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>Net_449,
		fb=>(tmpFB_0__Pin_3_net_0),
		analog=>(open),
		io=>(tmpIO_0__Pin_3_net_0),
		siovref=>(tmpSIOVREF__Pin_3_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Pin_3_net_0);
\Control_Reg_4:Sync:ctrl_reg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000000",
		cy_ctrl_mode_0=>"00000000",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>zero,
		control=>(\Control_Reg_4:control_7\, \Control_Reg_4:control_6\, \Control_Reg_4:control_5\, \Control_Reg_4:control_4\,
			\Control_Reg_4:control_3\, Net_571_2, Net_571_1, Net_571_0));
Pin_2:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"e851a3b9-efb8-48be-bbb8-b303b216c393",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(one),
		y=>Net_529,
		fb=>(tmpFB_0__Pin_2_net_0),
		analog=>(open),
		io=>(tmpIO_0__Pin_2_net_0),
		siovref=>(tmpSIOVREF__Pin_2_net_0),
		annotation=>(open),
		in_clock=>zero,
		in_clock_en=>one,
		in_reset=>zero,
		out_clock=>zero,
		out_clock_en=>one,
		out_reset=>zero,
		interrupt=>tmpINTERRUPT_0__Pin_2_net_0);
\Status_Reg_1:sts:sts_reg\:cy_psoc3_status
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"00000000")
	PORT MAP(reset=>zero,
		clock=>Clock179,
		status=>(period_shift_7, period_shift_6, period_shift_5, period_shift_4,
			period_shift_3, period_shift_2, period_shift_1, period_shift_0));
\rectangle_generator:bSR:ClkEn\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>Net_525,
		enable=>one,
		clock_out=>\rectangle_generator:bSR:clk_fin\);
\rectangle_generator:bSR:SyncCtl:CtrlReg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000000",
		cy_ctrl_mode_0=>"00000001",
		cy_ext_reset=>'0')
	PORT MAP(reset=>zero,
		clock=>\rectangle_generator:bSR:clk_fin\,
		control=>(\rectangle_generator:bSR:control_7\, \rectangle_generator:bSR:control_6\, \rectangle_generator:bSR:control_5\, \rectangle_generator:bSR:control_4\,
			\rectangle_generator:bSR:control_3\, \rectangle_generator:bSR:control_2\, \rectangle_generator:bSR:control_1\, \rectangle_generator:bSR:ctrl_clk_enable\));
\rectangle_generator:bSR:StsReg\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0000111",
		cy_int_mask=>"0000111")
	PORT MAP(reset=>zero,
		clock=>\rectangle_generator:bSR:clk_fin\,
		status=>(\rectangle_generator:bSR:status_6\, \rectangle_generator:bSR:status_5\, \rectangle_generator:bSR:status_4\, \rectangle_generator:bSR:status_3\,
			zero, zero, zero),
		interrupt=>Net_528);
\rectangle_generator:bSR:sC16:BShiftRegDp:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000100000000000000010000000000000001000000000000000100000000000000010100101000010101000010000000000000011000000101010000100000011111111000000001111111111111111010101011110111101001000011100000000000000011100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\rectangle_generator:bSR:clk_fin\,
		cs_addr=>(\rectangle_generator:bSR:ctrl_clk_enable\, zero, zero),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>Net_529,
		f0_bus_stat=>\rectangle_generator:bSR:f0_bus_stat_16_0\,
		f0_blk_stat=>\rectangle_generator:bSR:f0_blk_stat_16_0\,
		f1_bus_stat=>\rectangle_generator:bSR:f1_bus_stat_16_0\,
		f1_blk_stat=>\rectangle_generator:bSR:f1_blk_stat_16_0\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>zero,
		co=>\rectangle_generator:bSR:sC16:BShiftRegDp:carry\,
		sir=>zero,
		sor=>open,
		sil=>\rectangle_generator:bSR:sC16:BShiftRegDp:sh_right\,
		sol=>\rectangle_generator:bSR:sC16:BShiftRegDp:sh_left\,
		msbi=>\rectangle_generator:bSR:sC16:BShiftRegDp:msb\,
		msbo=>open,
		cei=>(zero, zero),
		ceo=>(\rectangle_generator:bSR:sC16:BShiftRegDp:cmp_eq_1\, \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_eq_0\),
		cli=>(zero, zero),
		clo=>(\rectangle_generator:bSR:sC16:BShiftRegDp:cmp_lt_1\, \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_lt_0\),
		zi=>(zero, zero),
		zo=>(\rectangle_generator:bSR:sC16:BShiftRegDp:cmp_zero_1\, \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_zero_0\),
		fi=>(zero, zero),
		fo=>(\rectangle_generator:bSR:sC16:BShiftRegDp:cmp_ff_1\, \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_ff_0\),
		capi=>(zero, zero),
		capo=>(\rectangle_generator:bSR:sC16:BShiftRegDp:cap_1\, \rectangle_generator:bSR:sC16:BShiftRegDp:cap_0\),
		cfbi=>zero,
		cfbo=>\rectangle_generator:bSR:sC16:BShiftRegDp:cfb\,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\rectangle_generator:bSR:sC16:BShiftRegDp:u1\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000100000000000000010000000000000001000000000000000100000000000000010100101000010101000010000000000000011000000101010000100000011111111000000001111111111111111010101011110101001001000111100100000000000011100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>zero,
		clk=>\rectangle_generator:bSR:clk_fin\,
		cs_addr=>(\rectangle_generator:bSR:ctrl_clk_enable\, zero, zero),
		route_si=>zero,
		route_ci=>zero,
		f0_load=>zero,
		f1_load=>zero,
		d0_load=>zero,
		d1_load=>zero,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\rectangle_generator:bSR:so_16_1\,
		f0_bus_stat=>\rectangle_generator:bSR:status_4\,
		f0_blk_stat=>\rectangle_generator:bSR:status_3\,
		f1_bus_stat=>\rectangle_generator:bSR:status_6\,
		f1_blk_stat=>\rectangle_generator:bSR:status_5\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>\rectangle_generator:bSR:sC16:BShiftRegDp:carry\,
		co=>open,
		sir=>\rectangle_generator:bSR:sC16:BShiftRegDp:sh_left\,
		sor=>\rectangle_generator:bSR:sC16:BShiftRegDp:sh_right\,
		sil=>zero,
		sol=>open,
		msbi=>zero,
		msbo=>\rectangle_generator:bSR:sC16:BShiftRegDp:msb\,
		cei=>(\rectangle_generator:bSR:sC16:BShiftRegDp:cmp_eq_1\, \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_eq_0\),
		ceo=>open,
		cli=>(\rectangle_generator:bSR:sC16:BShiftRegDp:cmp_lt_1\, \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_lt_0\),
		clo=>open,
		zi=>(\rectangle_generator:bSR:sC16:BShiftRegDp:cmp_zero_1\, \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_zero_0\),
		zo=>open,
		fi=>(\rectangle_generator:bSR:sC16:BShiftRegDp:cmp_ff_1\, \rectangle_generator:bSR:sC16:BShiftRegDp:cmp_ff_0\),
		fo=>open,
		capi=>(\rectangle_generator:bSR:sC16:BShiftRegDp:cap_1\, \rectangle_generator:bSR:sC16:BShiftRegDp:cap_0\),
		capo=>open,
		cfbi=>\rectangle_generator:bSR:sC16:BShiftRegDp:cfb\,
		cfbo=>open,
		pi=>(zero, zero, zero, zero,
			zero, zero, zero, zero),
		po=>open);
\Length_Counter:CounterUDB:prevCapture\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Length_Counter:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter:CounterUDB:prevCapture\);
\Length_Counter:CounterUDB:disable_run_i\:cy_dff
	PORT MAP(d=>\Length_Counter:CounterUDB:disable_run_i\\D\,
		clk=>\Length_Counter:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter:CounterUDB:disable_run_i\);
\Length_Counter:CounterUDB:overflow_reg_i\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Length_Counter:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter:CounterUDB:overflow_reg_i\);
\Length_Counter:CounterUDB:underflow_reg_i\:cy_dff
	PORT MAP(d=>\Length_Counter:CounterUDB:reload\,
		clk=>\Length_Counter:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter:CounterUDB:underflow_reg_i\);
\Length_Counter:CounterUDB:tc_reg_i\:cy_dff
	PORT MAP(d=>\Length_Counter:CounterUDB:reload\,
		clk=>\Length_Counter:CounterUDB:ClockOutFromEnBlock\,
		q=>Net_11);
\Length_Counter:CounterUDB:prevCompare\:cy_dff
	PORT MAP(d=>\Length_Counter:CounterUDB:cmp_out_i\,
		clk=>\Length_Counter:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter:CounterUDB:prevCompare\);
\Length_Counter:CounterUDB:cmp_out_reg_i\:cy_dff
	PORT MAP(d=>\Length_Counter:CounterUDB:cmp_out_i\,
		clk=>\Length_Counter:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter:CounterUDB:cmp_out_reg_i\);
\Length_Counter:CounterUDB:count_stored_i\:cy_dff
	PORT MAP(d=>Length_Clk,
		clk=>\Length_Counter:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter:CounterUDB:count_stored_i\);
\Length_Counter_1:CounterUDB:prevCapture\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Length_Counter_1:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter_1:CounterUDB:prevCapture\);
\Length_Counter_1:CounterUDB:disable_run_i\:cy_dff
	PORT MAP(d=>\Length_Counter_1:CounterUDB:disable_run_i\\D\,
		clk=>\Length_Counter_1:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter_1:CounterUDB:disable_run_i\);
\Length_Counter_1:CounterUDB:overflow_reg_i\:cy_dff
	PORT MAP(d=>zero,
		clk=>\Length_Counter_1:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter_1:CounterUDB:overflow_reg_i\);
\Length_Counter_1:CounterUDB:underflow_reg_i\:cy_dff
	PORT MAP(d=>\Length_Counter_1:CounterUDB:reload\,
		clk=>\Length_Counter_1:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter_1:CounterUDB:underflow_reg_i\);
\Length_Counter_1:CounterUDB:tc_reg_i\:cy_dff
	PORT MAP(d=>\Length_Counter_1:CounterUDB:reload\,
		clk=>\Length_Counter_1:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter_1:CounterUDB:tc_reg_i\);
\Length_Counter_1:CounterUDB:prevCompare\:cy_dff
	PORT MAP(d=>\Length_Counter_1:CounterUDB:cmp_out_i\,
		clk=>\Length_Counter_1:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter_1:CounterUDB:prevCompare\);
\Length_Counter_1:CounterUDB:cmp_out_reg_i\:cy_dff
	PORT MAP(d=>\Length_Counter_1:CounterUDB:cmp_out_i\,
		clk=>\Length_Counter_1:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter_1:CounterUDB:cmp_out_reg_i\);
\Length_Counter_1:CounterUDB:count_stored_i\:cy_dff
	PORT MAP(d=>Length_Clk,
		clk=>\Length_Counter_1:CounterUDB:ClockOutFromEnBlock\,
		q=>\Length_Counter_1:CounterUDB:count_stored_i\);
Tri_Data_3:cy_dsrff
	PORT MAP(d=>Tri_Data_3D,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>Tri_Data_3);
Tri_Data_2:cy_dsrff
	PORT MAP(d=>Tri_Data_2D,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>Tri_Data_2);
Tri_Data_1:cy_dsrff
	PORT MAP(d=>Tri_Data_1D,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>Tri_Data_1);
Tri_Data_0:cy_dsrff
	PORT MAP(d=>Tri_Data_0D,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>Tri_Data_0);
\Triangle_Gen_1:mode\:cy_dsrff
	PORT MAP(d=>\Triangle_Gen_1:mode\\D\,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>\Triangle_Gen_1:mode\);
\Linear_Counter_1:counter_6\:cy_dff
	PORT MAP(d=>\Linear_Counter_1:counter_6\\D\,
		clk=>Clock179,
		q=>\Linear_Counter_1:counter_6\);
\Linear_Counter_1:halt_flag\:cy_dsrff
	PORT MAP(d=>\Linear_Counter_1:halt_flag\\D\,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>\Linear_Counter_1:halt_flag\);
\Linear_Counter_1:counter_5\:cy_dff
	PORT MAP(d=>\Linear_Counter_1:counter_5\\D\,
		clk=>Clock179,
		q=>\Linear_Counter_1:counter_5\);
\Linear_Counter_1:counter_4\:cy_dff
	PORT MAP(d=>\Linear_Counter_1:counter_4\\D\,
		clk=>Clock179,
		q=>\Linear_Counter_1:counter_4\);
\Linear_Counter_1:counter_3\:cy_dff
	PORT MAP(d=>\Linear_Counter_1:counter_3\\D\,
		clk=>Clock179,
		q=>\Linear_Counter_1:counter_3\);
\Linear_Counter_1:counter_2\:cy_dff
	PORT MAP(d=>\Linear_Counter_1:counter_2\\D\,
		clk=>Clock179,
		q=>\Linear_Counter_1:counter_2\);
\Linear_Counter_1:counter_1\:cy_dff
	PORT MAP(d=>\Linear_Counter_1:counter_1\\D\,
		clk=>Clock179,
		q=>\Linear_Counter_1:counter_1\);
\Linear_Counter_1:counter_0\:cy_dff
	PORT MAP(d=>\Linear_Counter_1:counter_0\\D\,
		clk=>Clock179,
		q=>\Linear_Counter_1:counter_0\);
\MIDI1_UART:BUART:reset_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:reset_reg\);
\MIDI1_UART:BUART:txn\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:txn\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>Net_367);
\MIDI1_UART:BUART:tx_state_1\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:tx_state_1\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:tx_state_1\);
\MIDI1_UART:BUART:tx_state_0\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:tx_state_0\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:tx_state_0\);
\MIDI1_UART:BUART:tx_state_2\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:tx_state_2\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:tx_state_2\);
Net_357:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>Net_357);
\MIDI1_UART:BUART:tx_bitclk\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:tx_bitclk\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:tx_bitclk\);
\MIDI1_UART:BUART:tx_ctrl_mark_last\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:tx_ctrl_mark_last\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:tx_ctrl_mark_last\);
\MIDI1_UART:BUART:tx_mark\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:tx_mark\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:tx_mark\);
\MIDI1_UART:BUART:tx_parity_bit\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:tx_parity_bit\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:tx_parity_bit\);
\MIDI1_UART:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_state_1\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_state_1\);
\MIDI1_UART:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_state_0\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_state_0\);
\MIDI1_UART:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_load_fifo\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_load_fifo\);
\MIDI1_UART:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_state_3\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_state_3\);
\MIDI1_UART:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_state_2\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_state_2\);
\MIDI1_UART:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_bitclk_pre\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_bitclk_enable\);
\MIDI1_UART:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_state_stop1_reg\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_state_stop1_reg\);
\MIDI1_UART:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:pollcount_1\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:pollcount_1\);
\MIDI1_UART:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:pollcount_0\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:pollcount_0\);
\MIDI1_UART:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_markspace_status\);
\MIDI1_UART:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_status_2\);
\MIDI1_UART:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_stop_bit_error\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_status_3\);
\MIDI1_UART:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_addr_match_status\);
\MIDI1_UART:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_markspace_pre\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_markspace_pre\);
\MIDI1_UART:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_parity_error_pre\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_parity_error_pre\);
\MIDI1_UART:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>zero,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_break_status\);
\MIDI1_UART:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_address_detected\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_address_detected\);
\MIDI1_UART:BUART:rx_last\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_last\\D\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_last\);
\MIDI1_UART:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\MIDI1_UART:BUART:rx_parity_bit\,
		clk=>\MIDI1_UART:BUART:clock_op\,
		q=>\MIDI1_UART:BUART:rx_parity_bit\);
\Sampler_length_sweep:buffer_before\:cy_dff
	PORT MAP(d=>zero,
		clk=>Clock179,
		q=>\Sampler_length_sweep:buffer_before\);
\Sampler_length_sweep:buffer_after\:cy_dff
	PORT MAP(d=>\Sampler_length_sweep:buffer_before\,
		clk=>Clock179,
		q=>\Sampler_length_sweep:buffer_after\);
\clock_divider_2:counter_10\:cy_dsrff
	PORT MAP(d=>\clock_divider_2:counter_10\\D\,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>\clock_divider_2:counter_10\);
\clock_divider_2:counter_9\:cy_dsrff
	PORT MAP(d=>\clock_divider_2:counter_9\\D\,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>\clock_divider_2:counter_9\);
\clock_divider_2:counter_8\:cy_dsrff
	PORT MAP(d=>\clock_divider_2:counter_8\\D\,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>\clock_divider_2:counter_8\);
\clock_divider_2:counter_7\:cy_dsrff
	PORT MAP(d=>\clock_divider_2:counter_7\\D\,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>\clock_divider_2:counter_7\);
\clock_divider_2:counter_6\:cy_dsrff
	PORT MAP(d=>\clock_divider_2:counter_6\\D\,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>\clock_divider_2:counter_6\);
\clock_divider_2:counter_5\:cy_dsrff
	PORT MAP(d=>\clock_divider_2:counter_5\\D\,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>\clock_divider_2:counter_5\);
\clock_divider_2:counter_4\:cy_dsrff
	PORT MAP(d=>\clock_divider_2:counter_4\\D\,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>\clock_divider_2:counter_4\);
\clock_divider_2:counter_3\:cy_dsrff
	PORT MAP(d=>\clock_divider_2:counter_3\\D\,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>\clock_divider_2:counter_3\);
\clock_divider_2:counter_2\:cy_dsrff
	PORT MAP(d=>\clock_divider_2:counter_2\\D\,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>\clock_divider_2:counter_2\);
\clock_divider_2:counter_1\:cy_dsrff
	PORT MAP(d=>\clock_divider_2:counter_1\\D\,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>\clock_divider_2:counter_1\);
\clock_divider_2:counter_0\:cy_dsrff
	PORT MAP(d=>\clock_divider_2:counter_0\\D\,
		s=>zero,
		r=>zero,
		clk=>Clock179,
		q=>\clock_divider_2:counter_0\);
\clock_divider_2:buffer_before\:cy_dff
	PORT MAP(d=>\clock_divider_2:buffer_before\\D\,
		clk=>Clock179,
		q=>\clock_divider_2:buffer_before\);
\clock_divider_2:buffer_after\:cy_dff
	PORT MAP(d=>\clock_divider_2:buffer_before\,
		clk=>Clock179,
		q=>\clock_divider_2:buffer_after\);
\rectangle_generator:bSR:load_reg\:cy_dff
	PORT MAP(d=>zero,
		clk=>\rectangle_generator:bSR:clk_fin\,
		q=>\rectangle_generator:bSR:load_reg\);

END R_T_L;
